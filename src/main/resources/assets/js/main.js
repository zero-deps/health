// Generated by purs bundle 0.13.2
var PS = {};
(function(exports) {
  "use strict";

  exports.arrayMap = function (f) {
    return function (arr) {
      var l = arr.length;
      var result = new Array(l);
      for (var i = 0; i < l; i++) {
        result[i] = f(arr[i]);
      }
      return result;
    };
  };
})(PS["Data.Functor"] = PS["Data.Functor"] || {});
(function($PS) {
  // Generated by purs version 0.13.2
  "use strict";
  $PS["Data.Function"] = $PS["Data.Function"] || {};
  var exports = $PS["Data.Function"];
  var flip = function (f) {
      return function (b) {
          return function (a) {
              return f(a)(b);
          };
      };
  };
  var $$const = function (a) {
      return function (v) {
          return a;
      };
  };
  exports["flip"] = flip;
  exports["const"] = $$const;
})(PS);
(function(exports) {
  "use strict";

  exports.unit = {};
})(PS["Data.Unit"] = PS["Data.Unit"] || {});
(function($PS) {
  // Generated by purs version 0.13.2
  "use strict";
  $PS["Data.Unit"] = $PS["Data.Unit"] || {};
  var exports = $PS["Data.Unit"];
  var $foreign = $PS["Data.Unit"];
  exports["unit"] = $foreign.unit;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.2
  "use strict";
  $PS["Data.Functor"] = $PS["Data.Functor"] || {};
  var exports = $PS["Data.Functor"];
  var $foreign = $PS["Data.Functor"];
  var Data_Function = $PS["Data.Function"];
  var Data_Unit = $PS["Data.Unit"];                
  var Functor = function (map) {
      this.map = map;
  };
  var map = function (dict) {
      return dict.map;
  };
  var $$void = function (dictFunctor) {
      return map(dictFunctor)(Data_Function["const"](Data_Unit.unit));
  };                                                                                             
  var functorArray = new Functor($foreign.arrayMap);
  exports["Functor"] = Functor;
  exports["map"] = map;
  exports["void"] = $$void;
  exports["functorArray"] = functorArray;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.2
  "use strict";
  $PS["Control.Apply"] = $PS["Control.Apply"] || {};
  var exports = $PS["Control.Apply"];
  var Data_Functor = $PS["Data.Functor"];                
  var Apply = function (Functor0, apply) {
      this.Functor0 = Functor0;
      this.apply = apply;
  };                      
  var apply = function (dict) {
      return dict.apply;
  };
  var lift2 = function (dictApply) {
      return function (f) {
          return function (a) {
              return function (b) {
                  return apply(dictApply)(Data_Functor.map(dictApply.Functor0())(f)(a))(b);
              };
          };
      };
  };
  exports["Apply"] = Apply;
  exports["apply"] = apply;
  exports["lift2"] = lift2;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.2
  "use strict";
  $PS["Control.Applicative"] = $PS["Control.Applicative"] || {};
  var exports = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];        
  var Applicative = function (Apply0, pure) {
      this.Apply0 = Apply0;
      this.pure = pure;
  };
  var pure = function (dict) {
      return dict.pure;
  };
  var liftA1 = function (dictApplicative) {
      return function (f) {
          return function (a) {
              return Control_Apply.apply(dictApplicative.Apply0())(pure(dictApplicative)(f))(a);
          };
      };
  };
  exports["Applicative"] = Applicative;
  exports["pure"] = pure;
  exports["liftA1"] = liftA1;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.2
  "use strict";
  $PS["Control.Bind"] = $PS["Control.Bind"] || {};
  var exports = $PS["Control.Bind"];
  var Bind = function (Apply0, bind) {
      this.Apply0 = Apply0;
      this.bind = bind;
  };                     
  var bind = function (dict) {
      return dict.bind;
  };
  exports["Bind"] = Bind;
  exports["bind"] = bind;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.2
  "use strict";
  $PS["Control.Semigroupoid"] = $PS["Control.Semigroupoid"] || {};
  var exports = $PS["Control.Semigroupoid"];
  var Semigroupoid = function (compose) {
      this.compose = compose;
  };
  var semigroupoidFn = new Semigroupoid(function (f) {
      return function (g) {
          return function (x) {
              return f(g(x));
          };
      };
  });
  var compose = function (dict) {
      return dict.compose;
  };
  exports["compose"] = compose;
  exports["Semigroupoid"] = Semigroupoid;
  exports["semigroupoidFn"] = semigroupoidFn;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.2
  "use strict";
  $PS["Control.Category"] = $PS["Control.Category"] || {};
  var exports = $PS["Control.Category"];
  var Control_Semigroupoid = $PS["Control.Semigroupoid"];                
  var Category = function (Semigroupoid0, identity) {
      this.Semigroupoid0 = Semigroupoid0;
      this.identity = identity;
  };
  var identity = function (dict) {
      return dict.identity;
  };
  var categoryFn = new Category(function () {
      return Control_Semigroupoid.semigroupoidFn;
  }, function (x) {
      return x;
  });
  exports["Category"] = Category;
  exports["identity"] = identity;
  exports["categoryFn"] = categoryFn;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.2
  "use strict";
  $PS["Data.Bifunctor"] = $PS["Data.Bifunctor"] || {};
  var exports = $PS["Data.Bifunctor"];
  var Control_Category = $PS["Control.Category"];                
  var Bifunctor = function (bimap) {
      this.bimap = bimap;
  };
  var bimap = function (dict) {
      return dict.bimap;
  };
  var lmap = function (dictBifunctor) {
      return function (f) {
          return bimap(dictBifunctor)(f)(Control_Category.identity(Control_Category.categoryFn));
      };
  };
  exports["bimap"] = bimap;
  exports["Bifunctor"] = Bifunctor;
  exports["lmap"] = lmap;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.2
  "use strict";
  $PS["Data.Either"] = $PS["Data.Either"] || {};
  var exports = $PS["Data.Either"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Data_Bifunctor = $PS["Data.Bifunctor"];
  var Data_Functor = $PS["Data.Functor"];          
  var Left = (function () {
      function Left(value0) {
          this.value0 = value0;
      };
      Left.create = function (value0) {
          return new Left(value0);
      };
      return Left;
  })();
  var Right = (function () {
      function Right(value0) {
          this.value0 = value0;
      };
      Right.create = function (value0) {
          return new Right(value0);
      };
      return Right;
  })();
  var functorEither = new Data_Functor.Functor(function (f) {
      return function (m) {
          if (m instanceof Left) {
              return new Left(m.value0);
          };
          if (m instanceof Right) {
              return new Right(f(m.value0));
          };
          throw new Error("Failed pattern match at Data.Either (line 38, column 1 - line 38, column 52): " + [ m.constructor.name ]);
      };
  });
  var either = function (v) {
      return function (v1) {
          return function (v2) {
              if (v2 instanceof Left) {
                  return v(v2.value0);
              };
              if (v2 instanceof Right) {
                  return v1(v2.value0);
              };
              throw new Error("Failed pattern match at Data.Either (line 238, column 1 - line 238, column 64): " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
          };
      };
  };
  var bifunctorEither = new Data_Bifunctor.Bifunctor(function (v) {
      return function (v1) {
          return function (v2) {
              if (v2 instanceof Left) {
                  return new Left(v(v2.value0));
              };
              if (v2 instanceof Right) {
                  return new Right(v1(v2.value0));
              };
              throw new Error("Failed pattern match at Data.Either (line 46, column 1 - line 48, column 36): " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
          };
      };
  });
  var applyEither = new Control_Apply.Apply(function () {
      return functorEither;
  }, function (v) {
      return function (v1) {
          if (v instanceof Left) {
              return new Left(v.value0);
          };
          if (v instanceof Right) {
              return Data_Functor.map(functorEither)(v.value0)(v1);
          };
          throw new Error("Failed pattern match at Data.Either (line 82, column 1 - line 84, column 30): " + [ v.constructor.name, v1.constructor.name ]);
      };
  });
  var bindEither = new Control_Bind.Bind(function () {
      return applyEither;
  }, either(function (e) {
      return function (v) {
          return new Left(e);
      };
  })(function (a) {
      return function (f) {
          return f(a);
      };
  }));
  var applicativeEither = new Control_Applicative.Applicative(function () {
      return applyEither;
  }, Right.create);
  exports["Left"] = Left;
  exports["Right"] = Right;
  exports["either"] = either;
  exports["functorEither"] = functorEither;
  exports["bifunctorEither"] = bifunctorEither;
  exports["applyEither"] = applyEither;
  exports["applicativeEither"] = applicativeEither;
  exports["bindEither"] = bindEither;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.2
  "use strict";
  $PS["Control.Alt"] = $PS["Control.Alt"] || {};
  var exports = $PS["Control.Alt"];                          
  var Alt = function (Functor0, alt) {
      this.Functor0 = Functor0;
      this.alt = alt;
  };                                                       
  var alt = function (dict) {
      return dict.alt;
  };
  exports["Alt"] = Alt;
  exports["alt"] = alt;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.2
  "use strict";
  $PS["Data.Maybe"] = $PS["Data.Maybe"] || {};
  var exports = $PS["Data.Maybe"];
  var Control_Alt = $PS["Control.Alt"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Category = $PS["Control.Category"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];          
  var Nothing = (function () {
      function Nothing() {

      };
      Nothing.value = new Nothing();
      return Nothing;
  })();
  var Just = (function () {
      function Just(value0) {
          this.value0 = value0;
      };
      Just.create = function (value0) {
          return new Just(value0);
      };
      return Just;
  })();
  var maybe = function (v) {
      return function (v1) {
          return function (v2) {
              if (v2 instanceof Nothing) {
                  return v;
              };
              if (v2 instanceof Just) {
                  return v1(v2.value0);
              };
              throw new Error("Failed pattern match at Data.Maybe (line 217, column 1 - line 217, column 51): " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
          };
      };
  };
  var isNothing = maybe(true)(Data_Function["const"](false));
  var functorMaybe = new Data_Functor.Functor(function (v) {
      return function (v1) {
          if (v1 instanceof Just) {
              return new Just(v(v1.value0));
          };
          return Nothing.value;
      };
  });
  var fromMaybe = function (a) {
      return maybe(a)(Control_Category.identity(Control_Category.categoryFn));
  };
  var fromJust = function (dictPartial) {
      return function (v) {
          if (v instanceof Just) {
              return v.value0;
          };
          throw new Error("Failed pattern match at Data.Maybe (line 268, column 1 - line 268, column 46): " + [ v.constructor.name ]);
      };
  };
  var applyMaybe = new Control_Apply.Apply(function () {
      return functorMaybe;
  }, function (v) {
      return function (v1) {
          if (v instanceof Just) {
              return Data_Functor.map(functorMaybe)(v.value0)(v1);
          };
          if (v instanceof Nothing) {
              return Nothing.value;
          };
          throw new Error("Failed pattern match at Data.Maybe (line 67, column 1 - line 69, column 30): " + [ v.constructor.name, v1.constructor.name ]);
      };
  });
  var bindMaybe = new Control_Bind.Bind(function () {
      return applyMaybe;
  }, function (v) {
      return function (v1) {
          if (v instanceof Just) {
              return v1(v.value0);
          };
          if (v instanceof Nothing) {
              return Nothing.value;
          };
          throw new Error("Failed pattern match at Data.Maybe (line 125, column 1 - line 127, column 28): " + [ v.constructor.name, v1.constructor.name ]);
      };
  });
  var altMaybe = new Control_Alt.Alt(function () {
      return functorMaybe;
  }, function (v) {
      return function (v1) {
          if (v instanceof Nothing) {
              return v1;
          };
          return v;
      };
  });
  exports["Nothing"] = Nothing;
  exports["Just"] = Just;
  exports["maybe"] = maybe;
  exports["fromMaybe"] = fromMaybe;
  exports["isNothing"] = isNothing;
  exports["fromJust"] = fromJust;
  exports["functorMaybe"] = functorMaybe;
  exports["applyMaybe"] = applyMaybe;
  exports["altMaybe"] = altMaybe;
  exports["bindMaybe"] = bindMaybe;
})(PS);
(function(exports) {
  "use strict"

  exports.length = function(xs) {
    return xs.length
  }

  exports.indexUnsafe = function(xs) {
    return function(i) {
      return xs[i]
    }
  }

  exports.slice = function(xs) {
    return function(start) {
      return function(end) {
        return xs.slice(start, end)
      }
    }
  }
})(PS["Proto.Uint8ArrayExt"] = PS["Proto.Uint8ArrayExt"] || {});
(function($PS) {
  // Generated by purs version 0.13.2
  "use strict";
  $PS["Proto.Uint8ArrayExt"] = $PS["Proto.Uint8ArrayExt"] || {};
  var exports = $PS["Proto.Uint8ArrayExt"];
  var $foreign = $PS["Proto.Uint8ArrayExt"];
  var Data_Either = $PS["Data.Either"];                
  var index = function (xs) {
      return function (pos) {
          var len = $foreign.length(xs);
          var $0 = 0 <= pos && pos < len;
          if ($0) {
              return new Data_Either.Right($foreign.indexUnsafe(xs)(pos));
          };
          return new Data_Either.Left({
              pos: pos,
              len: len
          });
      };
  };
  exports["index"] = index;
  exports["length"] = $foreign.length;
  exports["slice"] = $foreign.slice;
})(PS);
(function(exports) {
  "use strict"

  exports.toString = function(buffer) {
    var start = 0
    var end = buffer.length
    var len = end - start
    if (len < 1)
      return ""
    var parts = null,
      chunk = [],
      i = 0, // char offset
      t     // temporary
    while (start < end) {
      t = buffer[start++]
      if (t < 128)
        chunk[i++] = t
      else if (t > 191 && t < 224)
        chunk[i++] = (t & 31) << 6 | buffer[start++] & 63
      else if (t > 239 && t < 365) {
        t = ((t & 7) << 18 | (buffer[start++] & 63) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63) - 0x10000
        chunk[i++] = 0xD800 + (t >> 10)
        chunk[i++] = 0xDC00 + (t & 1023)
      } else
        chunk[i++] = (t & 15) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63
      if (i > 8191) {
        (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk))
        i = 0
      }
    }
    if (parts) {
      if (i)
        parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)))
      return parts.join("")
    }
    return String.fromCharCode.apply(String, chunk.slice(0, i))
  }
})(PS["Proto.Utf8"] = PS["Proto.Utf8"] || {});
(function($PS) {
  // Generated by purs version 0.13.2
  "use strict";
  $PS["Proto.Utf8"] = $PS["Proto.Utf8"] || {};
  var exports = $PS["Proto.Utf8"];
  var $foreign = $PS["Proto.Utf8"];
  exports["toString"] = $foreign.toString;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.2
  "use strict";
  $PS["Proto.Decode"] = $PS["Proto.Decode"] || {};
  var exports = $PS["Proto.Decode"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Data_Bifunctor = $PS["Data.Bifunctor"];
  var Data_Either = $PS["Data.Either"];
  var Data_Unit = $PS["Data.Unit"];
  var Proto_Uint8ArrayExt = $PS["Proto.Uint8ArrayExt"];
  var Proto_Utf8 = $PS["Proto.Utf8"];                
  var OutOfBound = (function () {
      function OutOfBound(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      OutOfBound.create = function (value0) {
          return function (value1) {
              return new OutOfBound(value0, value1);
          };
      };
      return OutOfBound;
  })();
  var BadWireType = (function () {
      function BadWireType(value0) {
          this.value0 = value0;
      };
      BadWireType.create = function (value0) {
          return new BadWireType(value0);
      };
      return BadWireType;
  })();
  var BadType = (function () {
      function BadType(value0) {
          this.value0 = value0;
      };
      BadType.create = function (value0) {
          return new BadType(value0);
      };
      return BadType;
  })();
  var MissingFields = (function () {
      function MissingFields(value0) {
          this.value0 = value0;
      };
      MissingFields.create = function (value0) {
          return new MissingFields(value0);
      };
      return MissingFields;
  })();
  var IntTooLong = (function () {
      function IntTooLong() {

      };
      IntTooLong.value = new IntTooLong();
      return IntTooLong;
  })();
  var skip = function (n) {
      return function (xs) {
          return function (pos0) {
              var len = Proto_Uint8ArrayExt.length(xs);
              var $27 = (pos0 + n | 0) > len;
              if ($27) {
                  return new Data_Either.Left(new OutOfBound(pos0 + n | 0, len));
              };
              return Control_Applicative.pure(Data_Either.applicativeEither)({
                  pos: pos0 + n | 0,
                  val: Data_Unit.unit
              });
          };
      };
  }; 
  var index = function (xs) {
      return function (pos) {
          return Data_Bifunctor.lmap(Data_Either.bifunctorEither)(function (x) {
              return new OutOfBound(x.pos, x.len);
          })(Proto_Uint8ArrayExt.index(xs)(pos));
      };
  };
  var skip$prime = function ($copy_xs) {
      return function ($copy_pos) {
          var $tco_var_xs = $copy_xs;
          var $tco_done = false;
          var $tco_result;
          function $tco_loop(xs, pos) {
              var v = index(xs)(pos);
              if (v instanceof Data_Either.Left) {
                  $tco_done = true;
                  return new Data_Either.Left(v.value0);
              };
              if (v instanceof Data_Either.Right && (v.value0 & 128) === 0) {
                  $tco_done = true;
                  return Control_Applicative.pure(Data_Either.applicativeEither)({
                      pos: pos + 1 | 0,
                      val: Data_Unit.unit
                  });
              };
              if (v instanceof Data_Either.Right) {
                  $tco_var_xs = xs;
                  $copy_pos = pos + 1 | 0;
                  return;
              };
              throw new Error("Failed pattern match at Proto.Decode (line 113, column 3 - line 116, column 32): " + [ v.constructor.name ]);
          };
          while (!$tco_done) {
              $tco_result = $tco_loop($tco_var_xs, $copy_pos);
          };
          return $tco_result;
      };
  };
  var uint32 = function (xs) {
      return function (pos) {
          return Control_Bind.bind(Data_Either.bindEither)(index(xs)(pos))(function (v) {
              var val = (v & 127) >>> 0;
              var $41 = v < 128;
              if ($41) {
                  return Control_Applicative.pure(Data_Either.applicativeEither)({
                      pos: pos + 1 | 0,
                      val: val
                  });
              };
              return Control_Bind.bind(Data_Either.bindEither)(index(xs)(pos + 1 | 0))(function (v1) {
                  var val1 = (val | (v1 & 127) << 7) >>> 0;
                  var $43 = v1 < 128;
                  if ($43) {
                      return Control_Applicative.pure(Data_Either.applicativeEither)({
                          pos: pos + 2 | 0,
                          val: val1
                      });
                  };
                  return Control_Bind.bind(Data_Either.bindEither)(index(xs)(pos + 2 | 0))(function (v2) {
                      var val2 = (val1 | (v2 & 127) << 14) >>> 0;
                      var $45 = v2 < 128;
                      if ($45) {
                          return Control_Applicative.pure(Data_Either.applicativeEither)({
                              pos: pos + 3 | 0,
                              val: val2
                          });
                      };
                      return Control_Bind.bind(Data_Either.bindEither)(index(xs)(pos + 3 | 0))(function (v3) {
                          var val3 = (val2 | (v3 & 127) << 21) >>> 0;
                          var $47 = v3 < 128;
                          if ($47) {
                              return Control_Applicative.pure(Data_Either.applicativeEither)({
                                  pos: pos + 4 | 0,
                                  val: val3
                              });
                          };
                          return Control_Bind.bind(Data_Either.bindEither)(index(xs)(pos + 4 | 0))(function (v4) {
                              var val4 = val3 | (v4 & 15) << 28;
                              var $49 = v4 < 128;
                              if ($49) {
                                  return Control_Applicative.pure(Data_Either.applicativeEither)({
                                      pos: pos + 5 | 0,
                                      val: val4 >>> 0
                                  });
                              };
                              var len = Proto_Uint8ArrayExt.length(xs);
                              return Control_Bind.bind(Data_Either.bindEither)(index(xs)(pos + 5 | 0))(function (v5) {
                                  var $51 = v5 < 128;
                                  if ($51) {
                                      return Control_Applicative.pure(Data_Either.applicativeEither)({
                                          pos: pos + 6 | 0,
                                          val: val
                                      });
                                  };
                                  return Control_Bind.bind(Data_Either.bindEither)(index(xs)(pos + 6 | 0))(function (v6) {
                                      var $53 = v6 < 128;
                                      if ($53) {
                                          return Control_Applicative.pure(Data_Either.applicativeEither)({
                                              pos: pos + 7 | 0,
                                              val: val
                                          });
                                      };
                                      return Control_Bind.bind(Data_Either.bindEither)(index(xs)(pos + 7 | 0))(function (v7) {
                                          var $55 = v7 < 128;
                                          if ($55) {
                                              return Control_Applicative.pure(Data_Either.applicativeEither)({
                                                  pos: pos + 8 | 0,
                                                  val: val
                                              });
                                          };
                                          return Control_Bind.bind(Data_Either.bindEither)(index(xs)(pos + 8 | 0))(function (v8) {
                                              var $57 = v8 < 128;
                                              if ($57) {
                                                  return Control_Applicative.pure(Data_Either.applicativeEither)({
                                                      pos: pos + 9 | 0,
                                                      val: val
                                                  });
                                              };
                                              return Control_Bind.bind(Data_Either.bindEither)(index(xs)(pos + 9 | 0))(function (v9) {
                                                  var $59 = v9 < 128;
                                                  if ($59) {
                                                      return Control_Applicative.pure(Data_Either.applicativeEither)({
                                                          pos: pos + 10 | 0,
                                                          val: val
                                                      });
                                                  };
                                                  return Data_Either.Left.create(IntTooLong.value);
                                              });
                                          });
                                      });
                                  });
                              });
                          });
                      });
                  });
              });
          });
      };
  };                 
  var skipType = function (v) {
      return function (v1) {
          return function (v2) {
              var xs = v;
              if (v2 === 0) {
                  return skip$prime(xs)(v1);
              };
              var xs = v;
              if (v2 === 1) {
                  return skip(8)(xs)(v1);
              };
              var xs = v;
              if (v2 === 2) {
                  return Control_Bind.bind(Data_Either.bindEither)(uint32(xs)(v1))(function (v3) {
                      return skip(v3.val)(xs)(v3.pos);
                  });
              };
              if (v2 === 3) {
                  var loop = function (xs) {
                      return function (pos) {
                          return Control_Bind.bind(Data_Either.bindEither)(uint32(xs)(pos))(function (v3) {
                              var wireType = v3.val & 7;
                              var $67 = wireType !== 4;
                              if ($67) {
                                  return Control_Bind.bind(Data_Either.bindEither)(skipType(xs)(v3.pos)(wireType))(function (v4) {
                                      return loop(xs)(v4.pos);
                                  });
                              };
                              return Control_Applicative.pure(Data_Either.applicativeEither)({
                                  pos: v3.pos,
                                  val: Data_Unit.unit
                              });
                          });
                      };
                  };
                  return loop(v)(v1);
              };
              if (v2 === 5) {
                  return skip(4)(v)(v1);
              };
              return Data_Either.Left.create(new BadWireType(v2));
          };
      };
  };
  var bytes = function (xs) {
      return function (pos0) {
          return Control_Bind.bind(Data_Either.bindEither)(uint32(xs)(pos0))(function (v) {
              var end = v.pos + v.val | 0;
              var len = Proto_Uint8ArrayExt.length(xs);
              var $83 = end > len;
              if ($83) {
                  return new Data_Either.Left(new OutOfBound(end, len));
              };
              return Control_Applicative.pure(Data_Either.applicativeEither)({
                  pos: v.pos + v.val | 0,
                  val: Proto_Uint8ArrayExt.slice(xs)(v.pos)(end)
              });
          });
      };
  };
  var string = function (xs) {
      return function (pos0) {
          return Control_Bind.bind(Data_Either.bindEither)(bytes(xs)(pos0))(function (v) {
              return Control_Applicative.pure(Data_Either.applicativeEither)({
                  pos: v.pos,
                  val: Proto_Utf8.toString(v.val)
              });
          });
      };
  };
  exports["OutOfBound"] = OutOfBound;
  exports["BadWireType"] = BadWireType;
  exports["BadType"] = BadType;
  exports["MissingFields"] = MissingFields;
  exports["IntTooLong"] = IntTooLong;
  exports["index"] = index;
  exports["uint32"] = uint32;
  exports["bytes"] = bytes;
  exports["string"] = string;
  exports["skip"] = skip;
  exports["skipType"] = skipType;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.2
  "use strict";
  $PS["Api"] = $PS["Api"] || {};
  var exports = $PS["Api"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Data_Either = $PS["Data.Either"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Proto_Decode = $PS["Proto.Decode"];                
  var MetricStat = (function () {
      function MetricStat(value0) {
          this.value0 = value0;
      };
      MetricStat.create = function (value0) {
          return new MetricStat(value0);
      };
      return MetricStat;
  })();
  var MeasureStat = (function () {
      function MeasureStat(value0) {
          this.value0 = value0;
      };
      MeasureStat.create = function (value0) {
          return new MeasureStat(value0);
      };
      return MeasureStat;
  })();
  var ErrorStat = (function () {
      function ErrorStat(value0) {
          this.value0 = value0;
      };
      ErrorStat.create = function (value0) {
          return new ErrorStat(value0);
      };
      return ErrorStat;
  })();
  var ActionStat = (function () {
      function ActionStat(value0) {
          this.value0 = value0;
      };
      ActionStat.create = function (value0) {
          return new ActionStat(value0);
      };
      return ActionStat;
  })();
  var decodeMetricStat = function (_xs_) {
      return function (pos0) {
          var decode = function ($copy_end) {
              return function ($copy_acc) {
                  return function ($copy_pos1) {
                      var $tco_var_end = $copy_end;
                      var $tco_var_acc = $copy_acc;
                      var $tco_done = false;
                      var $tco_result;
                      function $tco_loop(end, acc, pos1) {
                          var $99 = pos1 < end;
                          if ($99) {
                              var v = Proto_Decode.uint32(_xs_)(pos1);
                              if (v instanceof Data_Either.Left) {
                                  $tco_done = true;
                                  return new Data_Either.Left(v.value0);
                              };
                              if (v instanceof Data_Either.Right) {
                                  var v1 = v.value0.val >>> 3;
                                  if (v1 === 1) {
                                      var v2 = Proto_Decode.string(_xs_)(v.value0.pos);
                                      if (v2 instanceof Data_Either.Left) {
                                          $tco_done = true;
                                          return new Data_Either.Left(v2.value0);
                                      };
                                      if (v2 instanceof Data_Either.Right) {
                                          $tco_var_end = end;
                                          $tco_var_acc = {
                                              name: new Data_Maybe.Just(v2.value0.val),
                                              value: acc.value,
                                              time: acc.time,
                                              addr: acc.addr
                                          };
                                          $copy_pos1 = v2.value0.pos;
                                          return;
                                      };
                                      throw new Error("Failed pattern match at Api (line 93, column 17 - line 96, column 62): " + [ v2.constructor.name ]);
                                  };
                                  if (v1 === 2) {
                                      var v2 = Proto_Decode.string(_xs_)(v.value0.pos);
                                      if (v2 instanceof Data_Either.Left) {
                                          $tco_done = true;
                                          return new Data_Either.Left(v2.value0);
                                      };
                                      if (v2 instanceof Data_Either.Right) {
                                          $tco_var_end = end;
                                          $tco_var_acc = {
                                              name: acc.name,
                                              value: new Data_Maybe.Just(v2.value0.val),
                                              time: acc.time,
                                              addr: acc.addr
                                          };
                                          $copy_pos1 = v2.value0.pos;
                                          return;
                                      };
                                      throw new Error("Failed pattern match at Api (line 98, column 17 - line 101, column 63): " + [ v2.constructor.name ]);
                                  };
                                  if (v1 === 3) {
                                      var v2 = Proto_Decode.string(_xs_)(v.value0.pos);
                                      if (v2 instanceof Data_Either.Left) {
                                          $tco_done = true;
                                          return new Data_Either.Left(v2.value0);
                                      };
                                      if (v2 instanceof Data_Either.Right) {
                                          $tco_var_end = end;
                                          $tco_var_acc = {
                                              name: acc.name,
                                              value: acc.value,
                                              time: new Data_Maybe.Just(v2.value0.val),
                                              addr: acc.addr
                                          };
                                          $copy_pos1 = v2.value0.pos;
                                          return;
                                      };
                                      throw new Error("Failed pattern match at Api (line 103, column 17 - line 106, column 62): " + [ v2.constructor.name ]);
                                  };
                                  if (v1 === 4) {
                                      var v2 = Proto_Decode.string(_xs_)(v.value0.pos);
                                      if (v2 instanceof Data_Either.Left) {
                                          $tco_done = true;
                                          return new Data_Either.Left(v2.value0);
                                      };
                                      if (v2 instanceof Data_Either.Right) {
                                          $tco_var_end = end;
                                          $tco_var_acc = {
                                              name: acc.name,
                                              value: acc.value,
                                              time: acc.time,
                                              addr: new Data_Maybe.Just(v2.value0.val)
                                          };
                                          $copy_pos1 = v2.value0.pos;
                                          return;
                                      };
                                      throw new Error("Failed pattern match at Api (line 108, column 17 - line 111, column 62): " + [ v2.constructor.name ]);
                                  };
                                  var v2 = Proto_Decode.skipType(_xs_)(v.value0.pos)(v.value0.val & 7);
                                  if (v2 instanceof Data_Either.Left) {
                                      $tco_done = true;
                                      return new Data_Either.Left(v2.value0);
                                  };
                                  if (v2 instanceof Data_Either.Right) {
                                      $tco_var_end = end;
                                      $tco_var_acc = acc;
                                      $copy_pos1 = v2.value0.pos;
                                      return;
                                  };
                                  throw new Error("Failed pattern match at Api (line 113, column 17 - line 116, column 40): " + [ v2.constructor.name ]);
                              };
                              throw new Error("Failed pattern match at Api (line 88, column 9 - line 116, column 40): " + [ v.constructor.name ]);
                          };
                          $tco_done = true;
                          return Control_Applicative.pure(Data_Either.applicativeEither)({
                              pos: pos1,
                              val: acc
                          });
                      };
                      while (!$tco_done) {
                          $tco_result = $tco_loop($tco_var_end, $tco_var_acc, $copy_pos1);
                      };
                      return $tco_result;
                  };
              };
          };
          return Control_Bind.bind(Data_Either.bindEither)(Proto_Decode.uint32(_xs_)(pos0))(function (v) {
              var end = v.pos + v.val | 0;
              return Control_Bind.bind(Data_Either.bindEither)(decode(end)({
                  name: Data_Maybe.Nothing.value,
                  value: Data_Maybe.Nothing.value,
                  time: Data_Maybe.Nothing.value,
                  addr: Data_Maybe.Nothing.value
              })(v.pos))(function (v1) {
                  if (v1.val.name instanceof Data_Maybe.Just && (v1.val.value instanceof Data_Maybe.Just && (v1.val.time instanceof Data_Maybe.Just && v1.val.addr instanceof Data_Maybe.Just))) {
                      return Control_Applicative.pure(Data_Either.applicativeEither)({
                          pos: v1.pos,
                          val: {
                              name: v1.val.name.value0,
                              value: v1.val.value.value0,
                              time: v1.val.time.value0,
                              addr: v1.val.addr.value0
                          }
                      });
                  };
                  return Data_Either.Left.create(new Proto_Decode.MissingFields("MetricStat"));
              });
          });
      };
  };
  var decodeMeasureStat = function (_xs_) {
      return function (pos0) {
          var decode = function ($copy_end) {
              return function ($copy_acc) {
                  return function ($copy_pos1) {
                      var $tco_var_end = $copy_end;
                      var $tco_var_acc = $copy_acc;
                      var $tco_done = false;
                      var $tco_result;
                      function $tco_loop(end, acc, pos1) {
                          var $145 = pos1 < end;
                          if ($145) {
                              var v = Proto_Decode.uint32(_xs_)(pos1);
                              if (v instanceof Data_Either.Left) {
                                  $tco_done = true;
                                  return new Data_Either.Left(v.value0);
                              };
                              if (v instanceof Data_Either.Right) {
                                  var v1 = v.value0.val >>> 3;
                                  if (v1 === 1) {
                                      var v2 = Proto_Decode.string(_xs_)(v.value0.pos);
                                      if (v2 instanceof Data_Either.Left) {
                                          $tco_done = true;
                                          return new Data_Either.Left(v2.value0);
                                      };
                                      if (v2 instanceof Data_Either.Right) {
                                          $tco_var_end = end;
                                          $tco_var_acc = {
                                              name: new Data_Maybe.Just(v2.value0.val),
                                              value: acc.value,
                                              time: acc.time,
                                              addr: acc.addr
                                          };
                                          $copy_pos1 = v2.value0.pos;
                                          return;
                                      };
                                      throw new Error("Failed pattern match at Api (line 136, column 17 - line 139, column 62): " + [ v2.constructor.name ]);
                                  };
                                  if (v1 === 2) {
                                      var v2 = Proto_Decode.string(_xs_)(v.value0.pos);
                                      if (v2 instanceof Data_Either.Left) {
                                          $tco_done = true;
                                          return new Data_Either.Left(v2.value0);
                                      };
                                      if (v2 instanceof Data_Either.Right) {
                                          $tco_var_end = end;
                                          $tco_var_acc = {
                                              name: acc.name,
                                              value: new Data_Maybe.Just(v2.value0.val),
                                              time: acc.time,
                                              addr: acc.addr
                                          };
                                          $copy_pos1 = v2.value0.pos;
                                          return;
                                      };
                                      throw new Error("Failed pattern match at Api (line 141, column 17 - line 144, column 63): " + [ v2.constructor.name ]);
                                  };
                                  if (v1 === 3) {
                                      var v2 = Proto_Decode.string(_xs_)(v.value0.pos);
                                      if (v2 instanceof Data_Either.Left) {
                                          $tco_done = true;
                                          return new Data_Either.Left(v2.value0);
                                      };
                                      if (v2 instanceof Data_Either.Right) {
                                          $tco_var_end = end;
                                          $tco_var_acc = {
                                              name: acc.name,
                                              value: acc.value,
                                              time: new Data_Maybe.Just(v2.value0.val),
                                              addr: acc.addr
                                          };
                                          $copy_pos1 = v2.value0.pos;
                                          return;
                                      };
                                      throw new Error("Failed pattern match at Api (line 146, column 17 - line 149, column 62): " + [ v2.constructor.name ]);
                                  };
                                  if (v1 === 4) {
                                      var v2 = Proto_Decode.string(_xs_)(v.value0.pos);
                                      if (v2 instanceof Data_Either.Left) {
                                          $tco_done = true;
                                          return new Data_Either.Left(v2.value0);
                                      };
                                      if (v2 instanceof Data_Either.Right) {
                                          $tco_var_end = end;
                                          $tco_var_acc = {
                                              name: acc.name,
                                              value: acc.value,
                                              time: acc.time,
                                              addr: new Data_Maybe.Just(v2.value0.val)
                                          };
                                          $copy_pos1 = v2.value0.pos;
                                          return;
                                      };
                                      throw new Error("Failed pattern match at Api (line 151, column 17 - line 154, column 62): " + [ v2.constructor.name ]);
                                  };
                                  var v2 = Proto_Decode.skipType(_xs_)(v.value0.pos)(v.value0.val & 7);
                                  if (v2 instanceof Data_Either.Left) {
                                      $tco_done = true;
                                      return new Data_Either.Left(v2.value0);
                                  };
                                  if (v2 instanceof Data_Either.Right) {
                                      $tco_var_end = end;
                                      $tco_var_acc = acc;
                                      $copy_pos1 = v2.value0.pos;
                                      return;
                                  };
                                  throw new Error("Failed pattern match at Api (line 156, column 17 - line 159, column 40): " + [ v2.constructor.name ]);
                              };
                              throw new Error("Failed pattern match at Api (line 131, column 9 - line 159, column 40): " + [ v.constructor.name ]);
                          };
                          $tco_done = true;
                          return Control_Applicative.pure(Data_Either.applicativeEither)({
                              pos: pos1,
                              val: acc
                          });
                      };
                      while (!$tco_done) {
                          $tco_result = $tco_loop($tco_var_end, $tco_var_acc, $copy_pos1);
                      };
                      return $tco_result;
                  };
              };
          };
          return Control_Bind.bind(Data_Either.bindEither)(Proto_Decode.uint32(_xs_)(pos0))(function (v) {
              var end = v.pos + v.val | 0;
              return Control_Bind.bind(Data_Either.bindEither)(decode(end)({
                  name: Data_Maybe.Nothing.value,
                  value: Data_Maybe.Nothing.value,
                  time: Data_Maybe.Nothing.value,
                  addr: Data_Maybe.Nothing.value
              })(v.pos))(function (v1) {
                  if (v1.val.name instanceof Data_Maybe.Just && (v1.val.value instanceof Data_Maybe.Just && (v1.val.time instanceof Data_Maybe.Just && v1.val.addr instanceof Data_Maybe.Just))) {
                      return Control_Applicative.pure(Data_Either.applicativeEither)({
                          pos: v1.pos,
                          val: {
                              name: v1.val.name.value0,
                              value: v1.val.value.value0,
                              time: v1.val.time.value0,
                              addr: v1.val.addr.value0
                          }
                      });
                  };
                  return Data_Either.Left.create(new Proto_Decode.MissingFields("MeasureStat"));
              });
          });
      };
  };
  var decodeErrorStat = function (_xs_) {
      return function (pos0) {
          var decode = function ($copy_end) {
              return function ($copy_acc) {
                  return function ($copy_pos1) {
                      var $tco_var_end = $copy_end;
                      var $tco_var_acc = $copy_acc;
                      var $tco_done = false;
                      var $tco_result;
                      function $tco_loop(end, acc, pos1) {
                          var $191 = pos1 < end;
                          if ($191) {
                              var v = Proto_Decode.uint32(_xs_)(pos1);
                              if (v instanceof Data_Either.Left) {
                                  $tco_done = true;
                                  return new Data_Either.Left(v.value0);
                              };
                              if (v instanceof Data_Either.Right) {
                                  var v1 = v.value0.val >>> 3;
                                  if (v1 === 1) {
                                      var v2 = Proto_Decode.string(_xs_)(v.value0.pos);
                                      if (v2 instanceof Data_Either.Left) {
                                          $tco_done = true;
                                          return new Data_Either.Left(v2.value0);
                                      };
                                      if (v2 instanceof Data_Either.Right) {
                                          $tco_var_end = end;
                                          $tco_var_acc = {
                                              exception: new Data_Maybe.Just(v2.value0.val),
                                              stacktrace: acc.stacktrace,
                                              toptrace: acc.toptrace,
                                              time: acc.time,
                                              addr: acc.addr
                                          };
                                          $copy_pos1 = v2.value0.pos;
                                          return;
                                      };
                                      throw new Error("Failed pattern match at Api (line 179, column 17 - line 182, column 67): " + [ v2.constructor.name ]);
                                  };
                                  if (v1 === 2) {
                                      var v2 = Proto_Decode.string(_xs_)(v.value0.pos);
                                      if (v2 instanceof Data_Either.Left) {
                                          $tco_done = true;
                                          return new Data_Either.Left(v2.value0);
                                      };
                                      if (v2 instanceof Data_Either.Right) {
                                          $tco_var_end = end;
                                          $tco_var_acc = {
                                              exception: acc.exception,
                                              stacktrace: new Data_Maybe.Just(v2.value0.val),
                                              toptrace: acc.toptrace,
                                              time: acc.time,
                                              addr: acc.addr
                                          };
                                          $copy_pos1 = v2.value0.pos;
                                          return;
                                      };
                                      throw new Error("Failed pattern match at Api (line 184, column 17 - line 187, column 68): " + [ v2.constructor.name ]);
                                  };
                                  if (v1 === 3) {
                                      var v2 = Proto_Decode.string(_xs_)(v.value0.pos);
                                      if (v2 instanceof Data_Either.Left) {
                                          $tco_done = true;
                                          return new Data_Either.Left(v2.value0);
                                      };
                                      if (v2 instanceof Data_Either.Right) {
                                          $tco_var_end = end;
                                          $tco_var_acc = {
                                              exception: acc.exception,
                                              stacktrace: acc.stacktrace,
                                              toptrace: new Data_Maybe.Just(v2.value0.val),
                                              time: acc.time,
                                              addr: acc.addr
                                          };
                                          $copy_pos1 = v2.value0.pos;
                                          return;
                                      };
                                      throw new Error("Failed pattern match at Api (line 189, column 17 - line 192, column 66): " + [ v2.constructor.name ]);
                                  };
                                  if (v1 === 4) {
                                      var v2 = Proto_Decode.string(_xs_)(v.value0.pos);
                                      if (v2 instanceof Data_Either.Left) {
                                          $tco_done = true;
                                          return new Data_Either.Left(v2.value0);
                                      };
                                      if (v2 instanceof Data_Either.Right) {
                                          $tco_var_end = end;
                                          $tco_var_acc = {
                                              exception: acc.exception,
                                              stacktrace: acc.stacktrace,
                                              toptrace: acc.toptrace,
                                              time: new Data_Maybe.Just(v2.value0.val),
                                              addr: acc.addr
                                          };
                                          $copy_pos1 = v2.value0.pos;
                                          return;
                                      };
                                      throw new Error("Failed pattern match at Api (line 194, column 17 - line 197, column 62): " + [ v2.constructor.name ]);
                                  };
                                  if (v1 === 5) {
                                      var v2 = Proto_Decode.string(_xs_)(v.value0.pos);
                                      if (v2 instanceof Data_Either.Left) {
                                          $tco_done = true;
                                          return new Data_Either.Left(v2.value0);
                                      };
                                      if (v2 instanceof Data_Either.Right) {
                                          $tco_var_end = end;
                                          $tco_var_acc = {
                                              exception: acc.exception,
                                              stacktrace: acc.stacktrace,
                                              toptrace: acc.toptrace,
                                              time: acc.time,
                                              addr: new Data_Maybe.Just(v2.value0.val)
                                          };
                                          $copy_pos1 = v2.value0.pos;
                                          return;
                                      };
                                      throw new Error("Failed pattern match at Api (line 199, column 17 - line 202, column 62): " + [ v2.constructor.name ]);
                                  };
                                  var v2 = Proto_Decode.skipType(_xs_)(v.value0.pos)(v.value0.val & 7);
                                  if (v2 instanceof Data_Either.Left) {
                                      $tco_done = true;
                                      return new Data_Either.Left(v2.value0);
                                  };
                                  if (v2 instanceof Data_Either.Right) {
                                      $tco_var_end = end;
                                      $tco_var_acc = acc;
                                      $copy_pos1 = v2.value0.pos;
                                      return;
                                  };
                                  throw new Error("Failed pattern match at Api (line 204, column 17 - line 207, column 40): " + [ v2.constructor.name ]);
                              };
                              throw new Error("Failed pattern match at Api (line 174, column 9 - line 207, column 40): " + [ v.constructor.name ]);
                          };
                          $tco_done = true;
                          return Control_Applicative.pure(Data_Either.applicativeEither)({
                              pos: pos1,
                              val: acc
                          });
                      };
                      while (!$tco_done) {
                          $tco_result = $tco_loop($tco_var_end, $tco_var_acc, $copy_pos1);
                      };
                      return $tco_result;
                  };
              };
          };
          return Control_Bind.bind(Data_Either.bindEither)(Proto_Decode.uint32(_xs_)(pos0))(function (v) {
              var end = v.pos + v.val | 0;
              return Control_Bind.bind(Data_Either.bindEither)(decode(end)({
                  exception: Data_Maybe.Nothing.value,
                  stacktrace: Data_Maybe.Nothing.value,
                  toptrace: Data_Maybe.Nothing.value,
                  time: Data_Maybe.Nothing.value,
                  addr: Data_Maybe.Nothing.value
              })(v.pos))(function (v1) {
                  if (v1.val.exception instanceof Data_Maybe.Just && (v1.val.stacktrace instanceof Data_Maybe.Just && (v1.val.toptrace instanceof Data_Maybe.Just && (v1.val.time instanceof Data_Maybe.Just && v1.val.addr instanceof Data_Maybe.Just)))) {
                      return Control_Applicative.pure(Data_Either.applicativeEither)({
                          pos: v1.pos,
                          val: {
                              exception: v1.val.exception.value0,
                              stacktrace: v1.val.stacktrace.value0,
                              toptrace: v1.val.toptrace.value0,
                              time: v1.val.time.value0,
                              addr: v1.val.addr.value0
                          }
                      });
                  };
                  return Data_Either.Left.create(new Proto_Decode.MissingFields("ErrorStat"));
              });
          });
      };
  };
  var decodeActionStat = function (_xs_) {
      return function (pos0) {
          var decode = function ($copy_end) {
              return function ($copy_acc) {
                  return function ($copy_pos1) {
                      var $tco_var_end = $copy_end;
                      var $tco_var_acc = $copy_acc;
                      var $tco_done = false;
                      var $tco_result;
                      function $tco_loop(end, acc, pos1) {
                          var $244 = pos1 < end;
                          if ($244) {
                              var v = Proto_Decode.uint32(_xs_)(pos1);
                              if (v instanceof Data_Either.Left) {
                                  $tco_done = true;
                                  return new Data_Either.Left(v.value0);
                              };
                              if (v instanceof Data_Either.Right) {
                                  var v1 = v.value0.val >>> 3;
                                  if (v1 === 1) {
                                      var v2 = Proto_Decode.string(_xs_)(v.value0.pos);
                                      if (v2 instanceof Data_Either.Left) {
                                          $tco_done = true;
                                          return new Data_Either.Left(v2.value0);
                                      };
                                      if (v2 instanceof Data_Either.Right) {
                                          $tco_var_end = end;
                                          $tco_var_acc = {
                                              action: new Data_Maybe.Just(v2.value0.val),
                                              time: acc.time,
                                              addr: acc.addr
                                          };
                                          $copy_pos1 = v2.value0.pos;
                                          return;
                                      };
                                      throw new Error("Failed pattern match at Api (line 227, column 17 - line 230, column 64): " + [ v2.constructor.name ]);
                                  };
                                  if (v1 === 4) {
                                      var v2 = Proto_Decode.string(_xs_)(v.value0.pos);
                                      if (v2 instanceof Data_Either.Left) {
                                          $tco_done = true;
                                          return new Data_Either.Left(v2.value0);
                                      };
                                      if (v2 instanceof Data_Either.Right) {
                                          $tco_var_end = end;
                                          $tco_var_acc = {
                                              action: acc.action,
                                              time: new Data_Maybe.Just(v2.value0.val),
                                              addr: acc.addr
                                          };
                                          $copy_pos1 = v2.value0.pos;
                                          return;
                                      };
                                      throw new Error("Failed pattern match at Api (line 232, column 17 - line 235, column 62): " + [ v2.constructor.name ]);
                                  };
                                  if (v1 === 5) {
                                      var v2 = Proto_Decode.string(_xs_)(v.value0.pos);
                                      if (v2 instanceof Data_Either.Left) {
                                          $tco_done = true;
                                          return new Data_Either.Left(v2.value0);
                                      };
                                      if (v2 instanceof Data_Either.Right) {
                                          $tco_var_end = end;
                                          $tco_var_acc = {
                                              action: acc.action,
                                              time: acc.time,
                                              addr: new Data_Maybe.Just(v2.value0.val)
                                          };
                                          $copy_pos1 = v2.value0.pos;
                                          return;
                                      };
                                      throw new Error("Failed pattern match at Api (line 237, column 17 - line 240, column 62): " + [ v2.constructor.name ]);
                                  };
                                  var v2 = Proto_Decode.skipType(_xs_)(v.value0.pos)(v.value0.val & 7);
                                  if (v2 instanceof Data_Either.Left) {
                                      $tco_done = true;
                                      return new Data_Either.Left(v2.value0);
                                  };
                                  if (v2 instanceof Data_Either.Right) {
                                      $tco_var_end = end;
                                      $tco_var_acc = acc;
                                      $copy_pos1 = v2.value0.pos;
                                      return;
                                  };
                                  throw new Error("Failed pattern match at Api (line 242, column 17 - line 245, column 40): " + [ v2.constructor.name ]);
                              };
                              throw new Error("Failed pattern match at Api (line 222, column 9 - line 245, column 40): " + [ v.constructor.name ]);
                          };
                          $tco_done = true;
                          return Control_Applicative.pure(Data_Either.applicativeEither)({
                              pos: pos1,
                              val: acc
                          });
                      };
                      while (!$tco_done) {
                          $tco_result = $tco_loop($tco_var_end, $tco_var_acc, $copy_pos1);
                      };
                      return $tco_result;
                  };
              };
          };
          return Control_Bind.bind(Data_Either.bindEither)(Proto_Decode.uint32(_xs_)(pos0))(function (v) {
              var end = v.pos + v.val | 0;
              return Control_Bind.bind(Data_Either.bindEither)(decode(end)({
                  action: Data_Maybe.Nothing.value,
                  time: Data_Maybe.Nothing.value,
                  addr: Data_Maybe.Nothing.value
              })(v.pos))(function (v1) {
                  if (v1.val.action instanceof Data_Maybe.Just && (v1.val.time instanceof Data_Maybe.Just && v1.val.addr instanceof Data_Maybe.Just)) {
                      return Control_Applicative.pure(Data_Either.applicativeEither)({
                          pos: v1.pos,
                          val: {
                              action: v1.val.action.value0,
                              time: v1.val.time.value0,
                              addr: v1.val.addr.value0
                          }
                      });
                  };
                  return Data_Either.Left.create(new Proto_Decode.MissingFields("ActionStat"));
              });
          });
      };
  };
  var decodeStatMsg = function (_xs_) {
      return Control_Bind.bind(Data_Either.bindEither)(Proto_Decode.uint32(_xs_)(0))(function (v) {
          var v1 = v.val >>> 3;
          if (v1 === 1) {
              return Control_Bind.bind(Data_Either.bindEither)(decodeMetricStat(_xs_)(v.pos))(function (v2) {
                  return Control_Applicative.pure(Data_Either.applicativeEither)({
                      pos: v2.pos,
                      val: new MetricStat(v2.val)
                  });
              });
          };
          if (v1 === 2) {
              return Control_Bind.bind(Data_Either.bindEither)(decodeMeasureStat(_xs_)(v.pos))(function (v2) {
                  return Control_Applicative.pure(Data_Either.applicativeEither)({
                      pos: v2.pos,
                      val: new MeasureStat(v2.val)
                  });
              });
          };
          if (v1 === 3) {
              return Control_Bind.bind(Data_Either.bindEither)(decodeErrorStat(_xs_)(v.pos))(function (v2) {
                  return Control_Applicative.pure(Data_Either.applicativeEither)({
                      pos: v2.pos,
                      val: new ErrorStat(v2.val)
                  });
              });
          };
          if (v1 === 4) {
              return Control_Bind.bind(Data_Either.bindEither)(decodeActionStat(_xs_)(v.pos))(function (v2) {
                  return Control_Applicative.pure(Data_Either.applicativeEither)({
                      pos: v2.pos,
                      val: new ActionStat(v2.val)
                  });
              });
          };
          return Data_Either.Left.create(new Proto_Decode.BadType(v1));
      });
  };
  exports["MetricStat"] = MetricStat;
  exports["MeasureStat"] = MeasureStat;
  exports["ErrorStat"] = ErrorStat;
  exports["ActionStat"] = ActionStat;
  exports["decodeStatMsg"] = decodeStatMsg;
  exports["decodeMetricStat"] = decodeMetricStat;
  exports["decodeMeasureStat"] = decodeMeasureStat;
  exports["decodeErrorStat"] = decodeErrorStat;
  exports["decodeActionStat"] = decodeActionStat;
})(PS);
(function(exports) {
  "use strict"

  exports.destroyChart = function(chart) {
    return function() {
      chart.destroy()
    }
  }

  exports.updateChart = function(chart) {
    return function(values) {
      return function() {
        chart.config.data.datasets[0].data = values.points
        chart.config.data.datasets[0].customLabels = values.labels
        chart.update()
      }
    }
  }

  exports.createChart = function(ref) {
    return function(values) {
      return function() {
        const ctx = ref.current.getContext('2d')

        const gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);
        gradientStroke.addColorStop(1, 'rgba(29,140,248,0.2)');
        gradientStroke.addColorStop(0.4, 'rgba(29,140,248,0.0)');
        gradientStroke.addColorStop(0, 'rgba(29,140,248,0)'); //blue colors

        return new Chart(ctx, {
          type: 'bar',
          responsive: true,
          legend: {
            display: false
          },
          data: {
            labels: values.points.map(function() { return '' }),
            datasets: [{
              fill: true,
              backgroundColor: gradientStroke,
              hoverBackgroundColor: gradientStroke,
              borderColor: '#1f8ef1',
              borderWidth: 2,
              borderDash: [],
              borderDashOffset: 0.0,
              data: values.points,
              customLabels: values.labels,
            }]
          },
          options: {
            maintainAspectRatio: false,
            legend: {
              display: false
            },
            tooltips: {
              backgroundColor: '#f5f5f5',
              titleFontColor: '#333',
              bodyFontColor: '#666',
              bodySpacing: 4,
              xPadding: 12,
              mode: "nearest",
              intersect: 0,
              position: "nearest",
              callbacks: {
                title: function(items, data) { return data.datasets[0].customLabels[items[0].index] },
                label: function(item, data) { return item.yLabel+" ms" },
              },
            },
            responsive: true,
            scales: {
              yAxes: [{
                type: 'logarithmic',
                gridLines: {
                  drawBorder: false,
                  color: 'rgba(29,140,248,0.1)',
                  zeroLineColor: "transparent",
                },
                ticks: {
                  suggestedMin: 1,
                  padding: 15,
                  fontColor: "#9e9e9e",
                  callback: function(v) { return v<1000 ? v : (v/1000|0)+"k" },
                }
              }],
              xAxes: [{
                display: false,
              }]
            }
          }
        })
      }
    }
  }
})(PS["BarChart"] = PS["BarChart"] || {});
(function(exports) {
  "use strict";

  exports.pureE = function (a) {
    return function () {
      return a;
    };
  };

  exports.bindE = function (a) {
    return function (f) {
      return function () {
        return f(a())();
      };
    };
  };
})(PS["Effect"] = PS["Effect"] || {});
(function($PS) {
  // Generated by purs version 0.13.2
  "use strict";
  $PS["Control.Monad"] = $PS["Control.Monad"] || {};
  var exports = $PS["Control.Monad"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];                
  var Monad = function (Applicative0, Bind1) {
      this.Applicative0 = Applicative0;
      this.Bind1 = Bind1;
  };
  var ap = function (dictMonad) {
      return function (f) {
          return function (a) {
              return Control_Bind.bind(dictMonad.Bind1())(f)(function (v) {
                  return Control_Bind.bind(dictMonad.Bind1())(a)(function (v1) {
                      return Control_Applicative.pure(dictMonad.Applicative0())(v(v1));
                  });
              });
          };
      };
  };
  exports["Monad"] = Monad;
  exports["ap"] = ap;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.2
  "use strict";
  $PS["Effect"] = $PS["Effect"] || {};
  var exports = $PS["Effect"];
  var $foreign = $PS["Effect"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad = $PS["Control.Monad"];
  var Data_Functor = $PS["Data.Functor"];                    
  var monadEffect = new Control_Monad.Monad(function () {
      return applicativeEffect;
  }, function () {
      return bindEffect;
  });
  var bindEffect = new Control_Bind.Bind(function () {
      return applyEffect;
  }, $foreign.bindE);
  var applyEffect = new Control_Apply.Apply(function () {
      return functorEffect;
  }, Control_Monad.ap(monadEffect));
  var applicativeEffect = new Control_Applicative.Applicative(function () {
      return applyEffect;
  }, $foreign.pureE);
  var functorEffect = new Data_Functor.Functor(Control_Applicative.liftA1(applicativeEffect));
  exports["functorEffect"] = functorEffect;
  exports["applyEffect"] = applyEffect;
  exports["applicativeEffect"] = applicativeEffect;
  exports["bindEffect"] = bindEffect;
  exports["monadEffect"] = monadEffect;
})(PS);
(function(exports) {
  "use strict";

  exports.error = function (s) {
    return function () {
      console.error(s);
      return {};
    };
  };
})(PS["Effect.Console"] = PS["Effect.Console"] || {});
(function($PS) {
  // Generated by purs version 0.13.2
  "use strict";
  $PS["Effect.Console"] = $PS["Effect.Console"] || {};
  var exports = $PS["Effect.Console"];
  var $foreign = $PS["Effect.Console"];
  exports["error"] = $foreign.error;
})(PS);
(function(exports) {
  "use strict";

  exports.new = function (val) {
    return function () {
      return { value: val };
    };
  };

  exports.read = function (ref) {
    return function () {
      return ref.value;
    };
  };

  exports.write = function (val) {
    return function (ref) {
      return function () {
        ref.value = val;
        return {};
      };
    };
  };
})(PS["Effect.Ref"] = PS["Effect.Ref"] || {});
(function($PS) {
  // Generated by purs version 0.13.2
  "use strict";
  $PS["Effect.Ref"] = $PS["Effect.Ref"] || {};
  var exports = $PS["Effect.Ref"];
  var $foreign = $PS["Effect.Ref"];
  exports["new"] = $foreign["new"];
  exports["read"] = $foreign.read;
  exports["write"] = $foreign.write;
})(PS);
(function(exports) {
  /* global exports */
  "use strict";
  var React =require("react"); 

  function createClass(baseClass) {
    function bindProperty(instance, prop, value) {
      switch (prop) {
        case 'state':
        case 'render':
        case 'componentDidMount':
        case 'componentWillUnmount':
          instance[prop] = value;
          break;

        case 'componentDidCatch':
        case 'componentWillUpdate':
        case 'shouldComponentUpdate':
        case 'getSnapshotBeforeUpdate':
          instance[prop] = function (a, b) { return value(a)(b)(); };
          break;

        case 'componentDidUpdate':
          instance[prop] = function (a, b, c) { return value(a)(b)(c)(); };
          break;

        case 'unsafeComponentWillMount':
          instance['UNSAFE_componentWillMount'] = value;
          break;

        case 'unsafeComponentWillReceiveProps':
          instance['UNSAFE_componentWillReceiveProps'] = function (a) { return value(a)(); };
          break;

        case 'unsafeComponentWillUpdate':
          instance['UNSAFE_componentWillUpdate'] = function (a, b) { return value(a)(b)(); };
          break;

        default:
          throw new Error('[purescript-react] Not a component property: ' + prop);
      }
    }

    return function (displayName) {
      return function (ctrFn) {
        var Constructor = function (props) {
          baseClass.call(this, props);
          var spec = ctrFn(this)();
          for (var k in spec) {
            bindProperty(this, k, spec[k]);
          }
        };

        Constructor.displayName = displayName;
        Constructor.prototype = Object.create(baseClass.prototype);
        Constructor.prototype.constructor = Constructor;

        return Constructor;
      };
    };
  }

  function createClassWithDerivedState(classCtr) {
    return function(displayName) {
      return function(getDerivedStateFromProps) {
        return function(ctrFn) {
          var Constructor = componentImpl(displayName)(ctrFn);
          Constructor.getDerivedStateFromProps = function(a, b) { return getDerivedStateFromProps(a)(b); };
          return Constructor;
        };
      };
    };
  }

  var componentImpl = createClass(React.Component);
  exports.componentImpl = componentImpl;

  function getProps(this_) {
    return function(){
      return this_.props;
    };
  }
  exports.getProps = getProps;                 

  function setStateImpl(this_) {
    return function(state){
      return function(){
        this_.setState(state);
      };
    };
  }
  exports.setStateImpl = setStateImpl;

  function setStateWithCallbackImpl(this_) {
    return function(state){
      return function(cb){
        return function() {
          this_.setState(state, cb);
        };
      };
    };
  }                                                           

  function getState(this_) {
    return function(){
      if (!this_.state) {
        throw new Error('[purescript-react] Cannot get state within constructor');
      }
      return this_.state;
    };
  }
  exports.getState = getState;

  function forceUpdateWithCallback(this_) {
    return function(cb) {
      return function() {
        this_.forceUpdate(cb);
      };
    };
  }                                                         

  function createElement(class_) {
    return function(props){
      return function(children){
        return React.createElement.apply(React, [class_, props].concat(children));
      };
    };
  }                                         
  exports.createElementTagName = createElement;

  function createLeafElement(class_) {
    return function(props) {
      return React.createElement(class_, props);
    };
  }
  exports.createLeafElementImpl = createLeafElement;

  function createElementDynamic(class_) {
    return function(props) {
      return function(children){
        return React.createElement(class_, props, children);
      };
    };
  };                                                      
  exports.createElementTagNameDynamic = createElementDynamic;

  function createContext(defaultValue) {
    var context = React.createContext(defaultValue);
    return {
      consumer: context.Consumer,
      provider: context.Provider
    };
  }
})(PS["React"] = PS["React"] || {});
(function($PS) {
  // Generated by purs version 0.13.2
  "use strict";
  $PS["React"] = $PS["React"] || {};
  var exports = $PS["React"];
  var $foreign = $PS["React"];    
  var ReactPropFields = {};
  var ReactComponentSpec = {};
  var reactPropFields = function (dictUnion) {
      return function (dictUnion1) {
          return ReactPropFields;
      };
  };
  var reactComponentSpec = function (dictUnion) {
      return function (dictNub) {
          return ReactComponentSpec;
      };
  };                                                              
  var modifyState = $foreign.setStateImpl;
  var createLeafElement = function (dictReactPropFields) {
      return $foreign.createLeafElementImpl;
  };
  var component = function (dictReactComponentSpec) {
      return $foreign.componentImpl;
  };
  exports["ReactComponentSpec"] = ReactComponentSpec;
  exports["component"] = component;
  exports["modifyState"] = modifyState;
  exports["ReactPropFields"] = ReactPropFields;
  exports["createLeafElement"] = createLeafElement;
  exports["reactComponentSpec"] = reactComponentSpec;
  exports["reactPropFields"] = reactPropFields;
  exports["getProps"] = $foreign.getProps;
  exports["getState"] = $foreign.getState;
  exports["createElementTagName"] = $foreign.createElementTagName;
  exports["createElementTagNameDynamic"] = $foreign.createElementTagNameDynamic;
})(PS);
(function(exports) {
  /* global exports */
  "use strict";
  var React =require("react"); 

  function unsafeMkProps(key) {
    return function(value){
      var result = {};
      result[key] = value;
      return result;
    };
  }
  exports.unsafeMkProps = unsafeMkProps;

  function unsafeUnfoldProps(key) {
    return function(value){
      var result = {};
      var props = {};
      props[key] = result;

      for (var subprop in value) {
        if (value.hasOwnProperty(subprop)) {
          result[subprop] = value[subprop];
        }
      }

      return props;
    };
  }
  exports.unsafeUnfoldProps = unsafeUnfoldProps;

  function unsafePrefixProps(prefix) {
    return function(value){
      var result = {};

      for (var prop in value) {
        if (value.hasOwnProperty(prop)) {
          result[prefix + prop] = value[prop];
        }
      }

      return result;
    };
  }                                             

  function unsafeFromPropsArray(props) {
    var result = {};

    for (var i = 0, len = props.length; i < len; i++) {
      var prop = props[i];

      for (var key in prop) {
        if (prop.hasOwnProperty(key)) {
          result[key] = prop[key];
        }
      }
    }

    return result;
  };
  exports.unsafeFromPropsArray = unsafeFromPropsArray;
})(PS["React.DOM.Props"] = PS["React.DOM.Props"] || {});
(function(exports) {
  "use strict";

  exports.mkEffectFn1 = function mkEffectFn1(fn) {
    return function(x) {
      return fn(x)();
    };
  };
})(PS["Effect.Uncurried"] = PS["Effect.Uncurried"] || {});
(function($PS) {
  // Generated by purs version 0.13.2
  "use strict";
  $PS["Effect.Uncurried"] = $PS["Effect.Uncurried"] || {};
  var exports = $PS["Effect.Uncurried"];
  var $foreign = $PS["Effect.Uncurried"];
  exports["mkEffectFn1"] = $foreign.mkEffectFn1;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.2
  "use strict";
  $PS["React.DOM.Props"] = $PS["React.DOM.Props"] || {};
  var exports = $PS["React.DOM.Props"];
  var $foreign = $PS["React.DOM.Props"];
  var Effect_Uncurried = $PS["Effect.Uncurried"];
  var target = $foreign.unsafeMkProps("target");  
  var style = $foreign.unsafeUnfoldProps("style");
  var onClick = function (f) {
      return $foreign.unsafeMkProps("onClick")(Effect_Uncurried.mkEffectFn1(f));
  };                                                
  var href = $foreign.unsafeMkProps("href");  
  var colSpan = $foreign.unsafeMkProps("colSpan");
  var className = $foreign.unsafeMkProps("className");
  exports["style"] = style;
  exports["className"] = className;
  exports["colSpan"] = colSpan;
  exports["href"] = href;
  exports["target"] = target;
  exports["onClick"] = onClick;
  exports["unsafeMkProps"] = $foreign.unsafeMkProps;
  exports["unsafeFromPropsArray"] = $foreign.unsafeFromPropsArray;
})(PS);
(function(exports) {
  "use strict";

  // module Unsafe.Coerce

  exports.unsafeCoerce = function (x) {
    return x;
  };
})(PS["Unsafe.Coerce"] = PS["Unsafe.Coerce"] || {});
(function($PS) {
  // Generated by purs version 0.13.2
  "use strict";
  $PS["Unsafe.Coerce"] = $PS["Unsafe.Coerce"] || {};
  var exports = $PS["Unsafe.Coerce"];
  var $foreign = $PS["Unsafe.Coerce"];
  exports["unsafeCoerce"] = $foreign.unsafeCoerce;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.2
  "use strict";
  $PS["React.DOM"] = $PS["React.DOM"] || {};
  var exports = $PS["React.DOM"];
  var React = $PS["React"];
  var React_DOM_Props = $PS["React.DOM.Props"];
  var Unsafe_Coerce = $PS["Unsafe.Coerce"];
  var text = Unsafe_Coerce.unsafeCoerce;  
  var mkDOM = function (dynamic) {
      return function (tag) {
          return function (props) {
              var createElement = (function () {
                  if (!dynamic) {
                      return React.createElementTagName;
                  };
                  if (dynamic) {
                      return React.createElementTagNameDynamic;
                  };
                  throw new Error("Failed pattern match at React.DOM (line 15, column 5 - line 17, column 55): " + [ dynamic.constructor.name ]);
              })();
              return createElement(tag)(React_DOM_Props.unsafeFromPropsArray(props));
          };
      };
  };
  var nav = mkDOM(false)("nav");  
  var p = mkDOM(false)("p");
  var p$prime = p([  ]);          
  var span = mkDOM(false)("span");
  var span$prime = span([  ]);
  var table = mkDOM(false)("table");
  var tbody = mkDOM(false)("tbody");
  var tbody$prime = tbody([  ]);
  var td = mkDOM(false)("td");
  var td$prime = td([  ]);      
  var th = mkDOM(false)("th");
  var th$prime = th([  ]);
  var thead = mkDOM(false)("thead");
  var tr = mkDOM(false)("tr");
  var tr$prime = tr([  ]);
  var ul = mkDOM(false)("ul");
  var li = mkDOM(false)("li");    
  var label = mkDOM(false)("label");
  var i = mkDOM(false)("i");
  var h5 = mkDOM(false)("h5");
  var h4 = mkDOM(false)("h4");
  var h3 = mkDOM(false)("h3");
  var h2 = mkDOM(false)("h2");
  var div = mkDOM(false)("div");
  var div$prime = div([  ]);        
  var canvas = mkDOM(false)("canvas");
  var button = mkDOM(false)("button");
  var a = mkDOM(false)("a");
  exports["mkDOM"] = mkDOM;
  exports["text"] = text;
  exports["a"] = a;
  exports["button"] = button;
  exports["canvas"] = canvas;
  exports["div"] = div;
  exports["div'"] = div$prime;
  exports["h2"] = h2;
  exports["h3"] = h3;
  exports["h4"] = h4;
  exports["h5"] = h5;
  exports["i"] = i;
  exports["label"] = label;
  exports["li"] = li;
  exports["nav"] = nav;
  exports["p"] = p;
  exports["p'"] = p$prime;
  exports["span"] = span;
  exports["span'"] = span$prime;
  exports["table"] = table;
  exports["tbody"] = tbody;
  exports["tbody'"] = tbody$prime;
  exports["td"] = td;
  exports["td'"] = td$prime;
  exports["th"] = th;
  exports["th'"] = th$prime;
  exports["thead"] = thead;
  exports["tr"] = tr;
  exports["tr'"] = tr$prime;
  exports["ul"] = ul;
})(PS);
(function(exports) {
  "use strict"
  var React =require("react");

  exports.createRef = React.createRef()
})(PS["ReactOps"] = PS["ReactOps"] || {});
(function($PS) {
  // Generated by purs version 0.13.2
  "use strict";
  $PS["ReactOps"] = $PS["ReactOps"] || {};
  var exports = $PS["ReactOps"];
  var $foreign = $PS["ReactOps"];
  var React_DOM_Props = $PS["React.DOM.Props"];                
  var ref$prime = React_DOM_Props.unsafeMkProps("ref");
  exports["ref'"] = ref$prime;
  exports["createRef"] = $foreign.createRef;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.2
  "use strict";
  $PS["BarChart"] = $PS["BarChart"] || {};
  var exports = $PS["BarChart"];
  var $foreign = $PS["BarChart"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Effect = $PS["Effect"];
  var Effect_Console = $PS["Effect.Console"];
  var Effect_Ref = $PS["Effect.Ref"];
  var React = $PS["React"];
  var React_DOM = $PS["React.DOM"];
  var ReactOps = $PS["ReactOps"];                
  var reactClass = React.component(React.reactComponentSpec()())("BarChart")(function ($$this) {
      return function __do() {
          var v = React.getProps($$this)();
          var v1 = Effect_Ref["new"](Data_Maybe.Nothing.value)();
          return {
              state: {},
              render: Control_Applicative.pure(Effect.applicativeEffect)(React_DOM.canvas([ ReactOps["ref'"](ReactOps.createRef) ])([  ])),
              componentDidMount: function __do() {
                  var v2 = Effect_Ref.read(v1)();
                  if (v2 instanceof Data_Maybe.Just) {
                      return Effect_Console.error("chart already exists")();
                  };
                  if (v2 instanceof Data_Maybe.Nothing) {
                      var v3 = $foreign.createChart(ReactOps.createRef)(v)();
                      return Effect_Ref.write(new Data_Maybe.Just(v3))(v1)();
                  };
                  throw new Error("Failed pattern match at BarChart (line 30, column 9 - line 34, column 36): " + [ v2.constructor.name ]);
              },
              componentDidUpdate: function (p) {
                  return function (v2) {
                      return function (v3) {
                          return function __do() {
                              var v4 = Effect_Ref.read(v1)();
                              if (v4 instanceof Data_Maybe.Just) {
                                  return $foreign.updateChart(v4.value0)(p)();
                              };
                              if (v4 instanceof Data_Maybe.Nothing) {
                                  return Effect_Console.error("chart doesn't exists")();
                              };
                              throw new Error("Failed pattern match at BarChart (line 37, column 9 - line 39, column 50): " + [ v4.constructor.name ]);
                          };
                      };
                  };
              },
              componentWillUnmount: function __do() {
                  var v2 = Effect_Ref.read(v1)();
                  if (v2 instanceof Data_Maybe.Just) {
                      $foreign.destroyChart(v2.value0)();
                      return Effect_Ref.write(Data_Maybe.Nothing.value)(v1)();
                  };
                  if (v2 instanceof Data_Maybe.Nothing) {
                      return Effect_Console.error("chart doesn't exists")();
                  };
                  throw new Error("Failed pattern match at BarChart (line 42, column 9 - line 46, column 50): " + [ v2.constructor.name ]);
              }
          };
      };
  });
  exports["reactClass"] = reactClass;
})(PS);
(function(exports) {
  "use strict"

  exports.destroyChart = function(chart) {
    return function() {
      chart.destroy()
    }
  }

  exports.updateChart = function(chart) {
    return function(values) {
      return function() {
        chart.config.data.datasets[0].data = values.cpuPoints
        chart.config.data.datasets[1].data = values.actPoints
        chart.config.data.datasets[1].actLabels = values.actLabels
        chart.config.data.datasets[2].data = values.memPoints
        chart.update()
      }
    }
  }

  exports.createChart = function(ref) {
    return function(values) {
      return function() {
        const ctx = ref.current.getContext('2d')
      
        const purpleBg = ctx.createLinearGradient(0, 230, 0, 50)
        purpleBg.addColorStop(1, 'rgba(72,72,176,0.1)')
        purpleBg.addColorStop(0.4, 'rgba(72,72,176,0.0)')
        purpleBg.addColorStop(0, 'rgba(119,52,169,0)')
      
        return new Chart(ctx, {
          type: 'line',
          data: {
            datasets: [{
              backgroundColor: purpleBg,
              borderColor: '#d346b1',
              borderDash: [],
              borderDashOffset: 0.0,
              borderWidth: 2,
              cubicInterpolationMode: 'monotone',
              data: values.cpuPoints,
              fill: true,
              label: "CPU Load",
              pointBackgroundColor: '#d346b1',
              pointBorderColor: 'rgba(255,255,255,0)',
              pointBorderWidth: 20,
              pointHoverBackgroundColor: '#d346b1',
              pointHoverBorderWidth: 15,
              pointHoverRadius: 4,
              pointRadius: 4,
              yAxisID: 'left-y-axis'
            }, {
              borderColor: '#1f8ef1',
              borderDash: [],
              borderDashOffset: 0.0,
              borderWidth: 2,
              actLabels: values.actLabels,
              data: values.actPoints,
              fill: false,
              label: "Events",
              pointBackgroundColor: '#1f8ef1',
              pointBorderColor: 'rgba(255,255,255,0)',
              pointBorderWidth: 20,
              pointHoverBackgroundColor: '#1f8ef1',
              pointHoverBorderWidth: 15,
              pointHoverRadius: 4,
              pointRadius: 4,
              showLine: false,
              yAxisID: 'left-y-axis'
            }, {
              borderColor: '#00d6b4',
              borderDash: [],
              borderDashOffset: 0.0,
              borderWidth: 2,
              data: values.memPoints,
              fill: false,
              label: "Memory Usage",
              lineTension: 0,
              pointBackgroundColor: '#00d6b4',
              pointBorderColor: 'rgba(255,255,255,0)',
              pointBorderWidth: 20,
              pointHoverBackgroundColor: '#00d6b4',
              pointHoverBorderWidth: 15,
              pointHoverRadius: 4,
              pointRadius: 4,
              yAxisID: 'right-y-axis'
            }]
          },
          options: {
            maintainAspectRatio: false,
            legend: {
              display: false
            },
            tooltips: {
              backgroundColor: '#f5f5f5',
              titleFontColor: '#333',
              bodyFontColor: '#666',
              bodySpacing: 4,
              xPadding: 12,
              mode: "nearest",
              position: "nearest",
              callbacks: {
                label: function(item, data) {
                  var datasetIndex = item.datasetIndex
                  var dataset = data.datasets[item.datasetIndex]
                  var datasetLabel = dataset.label + ": "
                  switch (datasetIndex) {
                    case 0: return datasetLabel + item.yLabel + "%"
                    case 1: return datasetLabel + data.datasets[1].actLabels[item.index]
                    case 2: return datasetLabel + item.yLabel + " GB"
                  }
                },
              },
            },
            responsive: true,
            scales: {
              yAxes: [{
                id: 'left-y-axis',
                type: 'logarithmic',
                position: 'left',
                barPercentage: 1.6,
                gridLines: {
                  drawBorder: false,
                  color: 'rgba(29,140,248,0.0)',
                  zeroLineColor: "transparent",
                },
                ticks: {
                  suggestedMin: 0,
                  suggestedMax: 5,
                  fontColor: "#9a9a9a",
                  callback: function(value) { return value+"%" },
                }
              }, {
                id: 'right-y-axis',
                type: 'linear',
                position: 'right',
                barPercentage: 1.6,
                gridLines: {
                  drawBorder: false,
                  color: 'rgba(29,140,248,0.0)',
                  zeroLineColor: "transparent",
                },
                ticks: {
                  fontColor: "#9a9a9a",
                  stepSize: 0.5,
                  callback: function(value) { return value+" GB" },
                },
                gridLines: {
                  drawOnChartArea: false,
                },
              }],
              xAxes: [{
                type: 'time',
                time: {
                  tooltipFormat: "DD.MM.YYYY HH:mm:ss",
                },
                barPercentage: 1.6,
                gridLines: {
                  drawBorder: false,
                  color: 'rgba(225,78,202,0.1)',
                  zeroLineColor: "transparent",
                },
                ticks: {
                  fontColor: "#9a9a9a"
                }
              }]
            }
          }
        })
      }
    }
  }
})(PS["BigChart"] = PS["BigChart"] || {});
(function($PS) {
  // Generated by purs version 0.13.2
  "use strict";
  $PS["BigChart"] = $PS["BigChart"] || {};
  var exports = $PS["BigChart"];
  var $foreign = $PS["BigChart"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Effect = $PS["Effect"];
  var Effect_Console = $PS["Effect.Console"];
  var Effect_Ref = $PS["Effect.Ref"];
  var React = $PS["React"];
  var React_DOM = $PS["React.DOM"];
  var ReactOps = $PS["ReactOps"];                
  var reactClass = React.component(React.reactComponentSpec()())("BigChart")(function ($$this) {
      return function __do() {
          var v = React.getProps($$this)();
          var v1 = Effect_Ref["new"](Data_Maybe.Nothing.value)();
          return {
              state: {},
              render: Control_Applicative.pure(Effect.applicativeEffect)(React_DOM.canvas([ ReactOps["ref'"](ReactOps.createRef) ])([  ])),
              componentDidMount: function __do() {
                  var v2 = Effect_Ref.read(v1)();
                  if (v2 instanceof Data_Maybe.Just) {
                      return Effect_Console.error("chart already exists")();
                  };
                  if (v2 instanceof Data_Maybe.Nothing) {
                      var v3 = $foreign.createChart(ReactOps.createRef)(v)();
                      return Effect_Ref.write(new Data_Maybe.Just(v3))(v1)();
                  };
                  throw new Error("Failed pattern match at BigChart (line 33, column 9 - line 37, column 36): " + [ v2.constructor.name ]);
              },
              componentDidUpdate: function (p) {
                  return function (v2) {
                      return function (v3) {
                          return function __do() {
                              var v4 = Effect_Ref.read(v1)();
                              if (v4 instanceof Data_Maybe.Just) {
                                  return $foreign.updateChart(v4.value0)(p)();
                              };
                              if (v4 instanceof Data_Maybe.Nothing) {
                                  return Effect_Console.error("chart doesn't exists")();
                              };
                              throw new Error("Failed pattern match at BigChart (line 40, column 9 - line 42, column 50): " + [ v4.constructor.name ]);
                          };
                      };
                  };
              },
              componentWillUnmount: function __do() {
                  var v2 = Effect_Ref.read(v1)();
                  if (v2 instanceof Data_Maybe.Just) {
                      $foreign.destroyChart(v2.value0)();
                      return Effect_Ref.write(Data_Maybe.Nothing.value)(v1)();
                  };
                  if (v2 instanceof Data_Maybe.Nothing) {
                      return Effect_Console.error("chart doesn't exists")();
                  };
                  throw new Error("Failed pattern match at BigChart (line 45, column 9 - line 49, column 50): " + [ v2.constructor.name ]);
              }
          };
      };
  });
  exports["reactClass"] = reactClass;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.2
  "use strict";
  $PS["Control.Monad.Error.Class"] = $PS["Control.Monad.Error.Class"] || {};
  var exports = $PS["Control.Monad.Error.Class"];                
  var MonadThrow = function (Monad0, throwError) {
      this.Monad0 = Monad0;
      this.throwError = throwError;
  };
  var throwError = function (dict) {
      return dict.throwError;
  };
  exports["throwError"] = throwError;
  exports["MonadThrow"] = MonadThrow;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.2
  "use strict";
  $PS["Control.Monad.Except.Trans"] = $PS["Control.Monad.Except.Trans"] || {};
  var exports = $PS["Control.Monad.Except.Trans"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad = $PS["Control.Monad"];
  var Control_Monad_Error_Class = $PS["Control.Monad.Error.Class"];
  var Data_Either = $PS["Data.Either"];
  var Data_Functor = $PS["Data.Functor"];                
  var ExceptT = function (x) {
      return x;
  };
  var runExceptT = function (v) {
      return v;
  }; 
  var mapExceptT = function (f) {
      return function (v) {
          return f(v);
      };
  };
  var functorExceptT = function (dictFunctor) {
      return new Data_Functor.Functor(function (f) {
          return mapExceptT(Data_Functor.map(dictFunctor)(Data_Functor.map(Data_Either.functorEither)(f)));
      });
  };
  var monadExceptT = function (dictMonad) {
      return new Control_Monad.Monad(function () {
          return applicativeExceptT(dictMonad);
      }, function () {
          return bindExceptT(dictMonad);
      });
  };
  var bindExceptT = function (dictMonad) {
      return new Control_Bind.Bind(function () {
          return applyExceptT(dictMonad);
      }, function (v) {
          return function (k) {
              return Control_Bind.bind(dictMonad.Bind1())(v)(Data_Either.either((function () {
                  var $98 = Control_Applicative.pure(dictMonad.Applicative0());
                  return function ($99) {
                      return $98(Data_Either.Left.create($99));
                  };
              })())(function (a) {
                  var v1 = k(a);
                  return v1;
              }));
          };
      });
  };
  var applyExceptT = function (dictMonad) {
      return new Control_Apply.Apply(function () {
          return functorExceptT(((dictMonad.Bind1()).Apply0()).Functor0());
      }, Control_Monad.ap(monadExceptT(dictMonad)));
  };
  var applicativeExceptT = function (dictMonad) {
      return new Control_Applicative.Applicative(function () {
          return applyExceptT(dictMonad);
      }, (function () {
          var $100 = Control_Applicative.pure(dictMonad.Applicative0());
          return function ($101) {
              return ExceptT($100(Data_Either.Right.create($101)));
          };
      })());
  };
  var monadThrowExceptT = function (dictMonad) {
      return new Control_Monad_Error_Class.MonadThrow(function () {
          return monadExceptT(dictMonad);
      }, (function () {
          var $110 = Control_Applicative.pure(dictMonad.Applicative0());
          return function ($111) {
              return ExceptT($110(Data_Either.Left.create($111)));
          };
      })());
  };
  exports["ExceptT"] = ExceptT;
  exports["runExceptT"] = runExceptT;
  exports["mapExceptT"] = mapExceptT;
  exports["functorExceptT"] = functorExceptT;
  exports["applyExceptT"] = applyExceptT;
  exports["applicativeExceptT"] = applicativeExceptT;
  exports["bindExceptT"] = bindExceptT;
  exports["monadExceptT"] = monadExceptT;
  exports["monadThrowExceptT"] = monadThrowExceptT;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.2
  "use strict";
  $PS["Data.Newtype"] = $PS["Data.Newtype"] || {};
  var exports = $PS["Data.Newtype"];                                   
  var Newtype = function (unwrap, wrap) {
      this.unwrap = unwrap;
      this.wrap = wrap;
  };
  var wrap = function (dict) {
      return dict.wrap;
  };
  var unwrap = function (dict) {
      return dict.unwrap;
  };
  exports["unwrap"] = unwrap;
  exports["wrap"] = wrap;
  exports["Newtype"] = Newtype;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.2
  "use strict";
  $PS["Data.Identity"] = $PS["Data.Identity"] || {};
  var exports = $PS["Data.Identity"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad = $PS["Control.Monad"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Newtype = $PS["Data.Newtype"];          
  var Identity = function (x) {
      return x;
  };
  var newtypeIdentity = new Data_Newtype.Newtype(function (n) {
      return n;
  }, Identity);
  var functorIdentity = new Data_Functor.Functor(function (f) {
      return function (m) {
          return f(m);
      };
  });
  var applyIdentity = new Control_Apply.Apply(function () {
      return functorIdentity;
  }, function (v) {
      return function (v1) {
          return v(v1);
      };
  });
  var bindIdentity = new Control_Bind.Bind(function () {
      return applyIdentity;
  }, function (v) {
      return function (f) {
          return f(v);
      };
  });
  var applicativeIdentity = new Control_Applicative.Applicative(function () {
      return applyIdentity;
  }, Identity);
  var monadIdentity = new Control_Monad.Monad(function () {
      return applicativeIdentity;
  }, function () {
      return bindIdentity;
  });
  exports["Identity"] = Identity;
  exports["newtypeIdentity"] = newtypeIdentity;
  exports["functorIdentity"] = functorIdentity;
  exports["applyIdentity"] = applyIdentity;
  exports["applicativeIdentity"] = applicativeIdentity;
  exports["bindIdentity"] = bindIdentity;
  exports["monadIdentity"] = monadIdentity;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.2
  "use strict";
  $PS["Control.Monad.Except"] = $PS["Control.Monad.Except"] || {};
  var exports = $PS["Control.Monad.Except"];
  var Control_Monad_Except_Trans = $PS["Control.Monad.Except.Trans"];
  var Data_Identity = $PS["Data.Identity"];
  var Data_Newtype = $PS["Data.Newtype"];                                                
  var runExcept = (function () {
      var $0 = Data_Newtype.unwrap(Data_Identity.newtypeIdentity);
      return function ($1) {
          return $0(Control_Monad_Except_Trans.runExceptT($1));
      };
  })();
  exports["runExcept"] = runExcept;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.2
  "use strict";
  $PS["Control.Plus"] = $PS["Control.Plus"] || {};
  var exports = $PS["Control.Plus"];                   
  var Plus = function (Alt0, empty) {
      this.Alt0 = Alt0;
      this.empty = empty;
  };       
  var empty = function (dict) {
      return dict.empty;
  };
  exports["Plus"] = Plus;
  exports["empty"] = empty;
})(PS);
(function(exports) {
  "use strict"

  exports.destroyChart = function(chart) {
    return function() {
      chart.destroy()
    }
  }

  exports.updateChart = function(chart) {
    return function(values) {
      return function() {
        chart.config.data.datasets[0].data = values.cpuPoints
        chart.update()
      }
    }
  }

  exports.createChart = function(ref) {
    return function(values) {
      return function() {
        const ctx = ref.current.getContext('2d')
      
        const purpleBg = ctx.createLinearGradient(0, 230, 0, 50)
        purpleBg.addColorStop(1, 'rgba(72,72,176,0.1)')
        purpleBg.addColorStop(0.4, 'rgba(72,72,176,0.0)')
        purpleBg.addColorStop(0, 'rgba(119,52,169,0)')
      
        return new Chart(ctx, {
          type: 'line',
          data: {
            datasets: [{
              backgroundColor: purpleBg,
              borderColor: '#d346b1',
              borderDash: [],
              borderDashOffset: 0.0,
              borderWidth: 2,
              cubicInterpolationMode: 'monotone',
              data: values.cpuPoints,
              fill: true,
              label: "CPU Load",
              pointBackgroundColor: '#d346b1',
              pointBorderColor: 'rgba(255,255,255,0)',
              pointBorderWidth: 20,
              pointHoverBackgroundColor: '#d346b1',
              pointHoverBorderWidth: 15,
              pointHoverRadius: 4,
              pointRadius: 4,
              yAxisID: 'left-y-axis'
            }]
          },
          options: {
            maintainAspectRatio: false,
            legend: {
              display: false
            },
            tooltips: {
              backgroundColor: '#f5f5f5',
              titleFontColor: '#333',
              bodyFontColor: '#666',
              bodySpacing: 4,
              xPadding: 12,
              mode: "nearest",
              position: "nearest",
              callbacks: {
                label: function(item, data) {
                  var dataset = data.datasets[item.datasetIndex]
                  return dataset.label + ": " + item.yLabel + "%"
                },
              },
            },
            responsive: true,
            scales: {
              yAxes: [{
                id: 'left-y-axis',
                position: 'left',
                barPercentage: 1.6,
                gridLines: {
                  drawBorder: false,
                  color: 'rgba(29,140,248,0.0)',
                  zeroLineColor: "transparent",
                },
                ticks: {
                  fontColor: "#9a9a9a",
                  callback: function(value) { return value+"%" },
                }
              }],
              xAxes: [{
                type: 'time',
                time: {
                  tooltipFormat: "DD.MM.YYYY HH:mm:ss",
                },
                barPercentage: 1.6,
                gridLines: {
                  drawBorder: false,
                  color: 'rgba(225,78,202,0.1)',
                  zeroLineColor: "transparent",
                },
                ticks: {
                  fontColor: "#9a9a9a"
                }
              }]
            }
          }
        })
      }
    }
  }
})(PS["CpuChart"] = PS["CpuChart"] || {});
(function($PS) {
  // Generated by purs version 0.13.2
  "use strict";
  $PS["CpuChart"] = $PS["CpuChart"] || {};
  var exports = $PS["CpuChart"];
  var $foreign = $PS["CpuChart"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Effect = $PS["Effect"];
  var Effect_Console = $PS["Effect.Console"];
  var Effect_Ref = $PS["Effect.Ref"];
  var React = $PS["React"];
  var React_DOM = $PS["React.DOM"];
  var ReactOps = $PS["ReactOps"];                
  var reactClass = React.component(React.reactComponentSpec()())("CpuChart")(function ($$this) {
      return function __do() {
          var v = React.getProps($$this)();
          var v1 = Effect_Ref["new"](Data_Maybe.Nothing.value)();
          return {
              state: {},
              render: Control_Applicative.pure(Effect.applicativeEffect)(React_DOM.canvas([ ReactOps["ref'"](ReactOps.createRef) ])([  ])),
              componentDidMount: function __do() {
                  var v2 = Effect_Ref.read(v1)();
                  if (v2 instanceof Data_Maybe.Just) {
                      return Effect_Console.error("chart already exists")();
                  };
                  if (v2 instanceof Data_Maybe.Nothing) {
                      var v3 = $foreign.createChart(ReactOps.createRef)(v)();
                      return Effect_Ref.write(new Data_Maybe.Just(v3))(v1)();
                  };
                  throw new Error("Failed pattern match at CpuChart (line 30, column 9 - line 34, column 36): " + [ v2.constructor.name ]);
              },
              componentDidUpdate: function (p) {
                  return function (v2) {
                      return function (v3) {
                          return function __do() {
                              var v4 = Effect_Ref.read(v1)();
                              if (v4 instanceof Data_Maybe.Just) {
                                  return $foreign.updateChart(v4.value0)(p)();
                              };
                              if (v4 instanceof Data_Maybe.Nothing) {
                                  return Effect_Console.error("chart doesn't exists")();
                              };
                              throw new Error("Failed pattern match at CpuChart (line 37, column 9 - line 39, column 50): " + [ v4.constructor.name ]);
                          };
                      };
                  };
              },
              componentWillUnmount: function __do() {
                  var v2 = Effect_Ref.read(v1)();
                  if (v2 instanceof Data_Maybe.Just) {
                      $foreign.destroyChart(v2.value0)();
                      return Effect_Ref.write(Data_Maybe.Nothing.value)(v1)();
                  };
                  if (v2 instanceof Data_Maybe.Nothing) {
                      return Effect_Console.error("chart doesn't exists")();
                  };
                  throw new Error("Failed pattern match at CpuChart (line 42, column 9 - line 46, column 50): " + [ v2.constructor.name ]);
              }
          };
      };
  });
  exports["reactClass"] = reactClass;
})(PS);
(function(exports) {
  "use strict";                                                                                      

  exports.fromFoldableImpl = (function () {
    function Cons(head, tail) {
      this.head = head;
      this.tail = tail;
    }
    var emptyList = {};

    function curryCons(head) {
      return function (tail) {
        return new Cons(head, tail);
      };
    }

    function listToArray(list) {
      var result = [];
      var count = 0;
      var xs = list;
      while (xs !== emptyList) {
        result[count++] = xs.head;
        xs = xs.tail;
      }
      return result;
    }

    return function (foldr) {
      return function (xs) {
        return listToArray(foldr(curryCons)(emptyList)(xs));
      };
    };
  })();

  //------------------------------------------------------------------------------
  // Array size ------------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.length = function (xs) {
    return xs.length;
  };

  //------------------------------------------------------------------------------
  // Extending arrays ------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.cons = function (e) {
    return function (l) {
      return [e].concat(l);
    };
  };

  exports.snoc = function (l) {
    return function (e) {
      var l1 = l.slice();
      l1.push(e);
      return l1;
    };
  };

  //------------------------------------------------------------------------------
  // Indexed operations ----------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.indexImpl = function (just) {
    return function (nothing) {
      return function (xs) {
        return function (i) {
          return i < 0 || i >= xs.length ? nothing :  just(xs[i]);
        };
      };
    };
  };

  exports.concat = function (xss) {
    if (xss.length <= 10000) {
      // This method is faster, but it crashes on big arrays.
      // So we use it when can and fallback to simple variant otherwise.
      return Array.prototype.concat.apply([], xss);
    }

    var result = [];
    for (var i = 0, l = xss.length; i < l; i++) {
      var xs = xss[i];
      for (var j = 0, m = xs.length; j < m; j++) {
        result.push(xs[j]);
      }
    }
    return result;
  };

  exports.filter = function (f) {
    return function (xs) {
      return xs.filter(f);
    };
  };

  //------------------------------------------------------------------------------
  // Subarrays -------------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.slice = function (s) {
    return function (e) {
      return function (l) {
        return l.slice(s, e);
      };
    };
  };

  exports.take = function (n) {
    return function (l) {
      return n < 1 ? [] : l.slice(0, n);
    };
  };

  exports.drop = function (n) {
    return function (l) {
      return n < 1 ? l : l.slice(n);
    };
  };
})(PS["Data.Array"] = PS["Data.Array"] || {});
(function($PS) {
  // Generated by purs version 0.13.2
  "use strict";
  $PS["Data.Foldable"] = $PS["Data.Foldable"] || {};
  var exports = $PS["Data.Foldable"];              
  var Foldable = function (foldMap, foldl, foldr) {
      this.foldMap = foldMap;
      this.foldl = foldl;
      this.foldr = foldr;
  };
  var foldr = function (dict) {
      return dict.foldr;
  };
  var foldl = function (dict) {
      return dict.foldl;
  };
  var foldMap = function (dict) {
      return dict.foldMap;
  };
  exports["Foldable"] = Foldable;
  exports["foldr"] = foldr;
  exports["foldl"] = foldl;
  exports["foldMap"] = foldMap;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.2
  "use strict";
  $PS["Data.Array"] = $PS["Data.Array"] || {};
  var exports = $PS["Data.Array"];
  var $foreign = $PS["Data.Array"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Maybe = $PS["Data.Maybe"];
  var takeEnd = function (n) {
      return function (xs) {
          return $foreign.drop($foreign.length(xs) - n | 0)(xs);
      };
  };
  var singleton = function (a) {
      return [ a ];
  };
  var index = $foreign.indexImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
  var last = function (xs) {
      return index(xs)($foreign.length(xs) - 1 | 0);
  };
  var head = function (xs) {
      return index(xs)(0);
  };
  var fromFoldable = function (dictFoldable) {
      return $foreign.fromFoldableImpl(Data_Foldable.foldr(dictFoldable));
  };
  var dropEnd = function (n) {
      return function (xs) {
          return $foreign.take($foreign.length(xs) - n | 0)(xs);
      };
  };
  exports["fromFoldable"] = fromFoldable;
  exports["singleton"] = singleton;
  exports["head"] = head;
  exports["last"] = last;
  exports["index"] = index;
  exports["takeEnd"] = takeEnd;
  exports["dropEnd"] = dropEnd;
  exports["length"] = $foreign.length;
  exports["cons"] = $foreign.cons;
  exports["snoc"] = $foreign.snoc;
  exports["filter"] = $foreign.filter;
  exports["take"] = $foreign.take;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.2
  "use strict";
  $PS["Data.Boolean"] = $PS["Data.Boolean"] || {};
  var exports = $PS["Data.Boolean"];
  var otherwise = true;
  exports["otherwise"] = otherwise;
})(PS);
(function(exports) {
  "use strict";

  exports.topInt = 2147483647;
  exports.bottomInt = -2147483648;

  exports.topChar = String.fromCharCode(65535);
  exports.bottomChar = String.fromCharCode(0);
})(PS["Data.Bounded"] = PS["Data.Bounded"] || {});
(function(exports) {
  "use strict";

  var unsafeCompareImpl = function (lt) {
    return function (eq) {
      return function (gt) {
        return function (x) {
          return function (y) {
            return x < y ? lt : x === y ? eq : gt;
          };
        };
      };
    };
  };                                         
  exports.ordIntImpl = unsafeCompareImpl;
  exports.ordNumberImpl = unsafeCompareImpl;
  exports.ordStringImpl = unsafeCompareImpl;
  exports.ordCharImpl = unsafeCompareImpl;
})(PS["Data.Ord"] = PS["Data.Ord"] || {});
(function(exports) {
  "use strict";

  var refEq = function (r1) {
    return function (r2) {
      return r1 === r2;
    };
  };                            
  exports.eqIntImpl = refEq;
  exports.eqNumberImpl = refEq;
  exports.eqCharImpl = refEq;
  exports.eqStringImpl = refEq;
})(PS["Data.Eq"] = PS["Data.Eq"] || {});
(function($PS) {
  // Generated by purs version 0.13.2
  "use strict";
  $PS["Data.Eq"] = $PS["Data.Eq"] || {};
  var exports = $PS["Data.Eq"];
  var $foreign = $PS["Data.Eq"];
  var Eq = function (eq) {
      this.eq = eq;
  }; 
  var eqString = new Eq($foreign.eqStringImpl);
  var eqNumber = new Eq($foreign.eqNumberImpl);
  var eqInt = new Eq($foreign.eqIntImpl);
  var eqChar = new Eq($foreign.eqCharImpl);
  var eq = function (dict) {
      return dict.eq;
  };
  exports["Eq"] = Eq;
  exports["eq"] = eq;
  exports["eqInt"] = eqInt;
  exports["eqNumber"] = eqNumber;
  exports["eqChar"] = eqChar;
  exports["eqString"] = eqString;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.2
  "use strict";
  $PS["Data.Ordering"] = $PS["Data.Ordering"] || {};
  var exports = $PS["Data.Ordering"];              
  var LT = (function () {
      function LT() {

      };
      LT.value = new LT();
      return LT;
  })();
  var GT = (function () {
      function GT() {

      };
      GT.value = new GT();
      return GT;
  })();
  var EQ = (function () {
      function EQ() {

      };
      EQ.value = new EQ();
      return EQ;
  })();
  exports["LT"] = LT;
  exports["GT"] = GT;
  exports["EQ"] = EQ;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.2
  "use strict";
  $PS["Data.Ord"] = $PS["Data.Ord"] || {};
  var exports = $PS["Data.Ord"];
  var $foreign = $PS["Data.Ord"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Ordering = $PS["Data.Ordering"];
  var Ord = function (Eq0, compare) {
      this.Eq0 = Eq0;
      this.compare = compare;
  }; 
  var ordString = new Ord(function () {
      return Data_Eq.eqString;
  }, $foreign.ordStringImpl(Data_Ordering.LT.value)(Data_Ordering.EQ.value)(Data_Ordering.GT.value));
  var ordNumber = new Ord(function () {
      return Data_Eq.eqNumber;
  }, $foreign.ordNumberImpl(Data_Ordering.LT.value)(Data_Ordering.EQ.value)(Data_Ordering.GT.value));
  var ordInt = new Ord(function () {
      return Data_Eq.eqInt;
  }, $foreign.ordIntImpl(Data_Ordering.LT.value)(Data_Ordering.EQ.value)(Data_Ordering.GT.value));
  var ordChar = new Ord(function () {
      return Data_Eq.eqChar;
  }, $foreign.ordCharImpl(Data_Ordering.LT.value)(Data_Ordering.EQ.value)(Data_Ordering.GT.value));
  var compare = function (dict) {
      return dict.compare;
  };
  var max = function (dictOrd) {
      return function (x) {
          return function (y) {
              var v = compare(dictOrd)(x)(y);
              if (v instanceof Data_Ordering.LT) {
                  return y;
              };
              if (v instanceof Data_Ordering.EQ) {
                  return x;
              };
              if (v instanceof Data_Ordering.GT) {
                  return x;
              };
              throw new Error("Failed pattern match at Data.Ord (line 167, column 3 - line 170, column 12): " + [ v.constructor.name ]);
          };
      };
  };
  exports["Ord"] = Ord;
  exports["compare"] = compare;
  exports["max"] = max;
  exports["ordInt"] = ordInt;
  exports["ordNumber"] = ordNumber;
  exports["ordString"] = ordString;
  exports["ordChar"] = ordChar;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.2
  "use strict";
  $PS["Data.Bounded"] = $PS["Data.Bounded"] || {};
  var exports = $PS["Data.Bounded"];
  var $foreign = $PS["Data.Bounded"];
  var Data_Ord = $PS["Data.Ord"];                  
  var Bounded = function (Ord0, bottom, top) {
      this.Ord0 = Ord0;
      this.bottom = bottom;
      this.top = top;
  };
  var top = function (dict) {
      return dict.top;
  };                                            
  var boundedInt = new Bounded(function () {
      return Data_Ord.ordInt;
  }, $foreign.bottomInt, $foreign.topInt);
  var boundedChar = new Bounded(function () {
      return Data_Ord.ordChar;
  }, $foreign.bottomChar, $foreign.topChar);
  var bottom = function (dict) {
      return dict.bottom;
  };
  exports["Bounded"] = Bounded;
  exports["bottom"] = bottom;
  exports["top"] = top;
  exports["boundedInt"] = boundedInt;
  exports["boundedChar"] = boundedChar;
})(PS);
(function(exports) {
  "use strict";

  exports.intSub = function (x) {
    return function (y) {
      /* jshint bitwise: false */
      return x - y | 0;
    };
  };
})(PS["Data.Ring"] = PS["Data.Ring"] || {});
(function(exports) {
  "use strict";

  exports.intAdd = function (x) {
    return function (y) {
      /* jshint bitwise: false */
      return x + y | 0;
    };
  };

  exports.intMul = function (x) {
    return function (y) {
      /* jshint bitwise: false */
      return x * y | 0;
    };
  };
})(PS["Data.Semiring"] = PS["Data.Semiring"] || {});
(function($PS) {
  // Generated by purs version 0.13.2
  "use strict";
  $PS["Data.Semiring"] = $PS["Data.Semiring"] || {};
  var exports = $PS["Data.Semiring"];
  var $foreign = $PS["Data.Semiring"];
  var Semiring = function (add, mul, one, zero) {
      this.add = add;
      this.mul = mul;
      this.one = one;
      this.zero = zero;
  };
  var zero = function (dict) {
      return dict.zero;
  };                                                                            
  var semiringInt = new Semiring($foreign.intAdd, $foreign.intMul, 1, 0);
  var one = function (dict) {
      return dict.one;
  };
  var mul = function (dict) {
      return dict.mul;
  };
  var add = function (dict) {
      return dict.add;
  };
  exports["Semiring"] = Semiring;
  exports["add"] = add;
  exports["zero"] = zero;
  exports["mul"] = mul;
  exports["one"] = one;
  exports["semiringInt"] = semiringInt;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.2
  "use strict";
  $PS["Data.Ring"] = $PS["Data.Ring"] || {};
  var exports = $PS["Data.Ring"];
  var $foreign = $PS["Data.Ring"];
  var Data_Semiring = $PS["Data.Semiring"];
  var Ring = function (Semiring0, sub) {
      this.Semiring0 = Semiring0;
      this.sub = sub;
  };
  var sub = function (dict) {
      return dict.sub;
  };                  
  var ringInt = new Ring(function () {
      return Data_Semiring.semiringInt;
  }, $foreign.intSub);
  exports["Ring"] = Ring;
  exports["sub"] = sub;
  exports["ringInt"] = ringInt;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.2
  "use strict";
  $PS["Data.CommutativeRing"] = $PS["Data.CommutativeRing"] || {};
  var exports = $PS["Data.CommutativeRing"];
  var Data_Ring = $PS["Data.Ring"];
  var CommutativeRing = function (Ring0) {
      this.Ring0 = Ring0;
  }; 
  var commutativeRingInt = new CommutativeRing(function () {
      return Data_Ring.ringInt;
  });
  exports["CommutativeRing"] = CommutativeRing;
  exports["commutativeRingInt"] = commutativeRingInt;
})(PS);
(function(exports) {
  "use strict";

  exports.toCharCode = function (c) {
    return c.charCodeAt(0);
  };

  exports.fromCharCode = function (c) {
    return String.fromCharCode(c);
  };
})(PS["Data.Enum"] = PS["Data.Enum"] || {});
(function($PS) {
  // Generated by purs version 0.13.2
  "use strict";
  $PS["Data.Enum"] = $PS["Data.Enum"] || {};
  var exports = $PS["Data.Enum"];
  var $foreign = $PS["Data.Enum"];
  var Data_Bounded = $PS["Data.Bounded"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Ord = $PS["Data.Ord"];
  var Enum = function (Ord0, pred, succ) {
      this.Ord0 = Ord0;
      this.pred = pred;
      this.succ = succ;
  };
  var BoundedEnum = function (Bounded0, Enum1, cardinality, fromEnum, toEnum) {
      this.Bounded0 = Bounded0;
      this.Enum1 = Enum1;
      this.cardinality = cardinality;
      this.fromEnum = fromEnum;
      this.toEnum = toEnum;
  };
  var toEnum = function (dict) {
      return dict.toEnum;
  };
  var succ = function (dict) {
      return dict.succ;
  }; 
  var pred = function (dict) {
      return dict.pred;
  };              
  var fromEnum = function (dict) {
      return dict.fromEnum;
  };
  var toEnumWithDefaults = function (dictBoundedEnum) {
      return function (low) {
          return function (high) {
              return function (x) {
                  var v = toEnum(dictBoundedEnum)(x);
                  if (v instanceof Data_Maybe.Just) {
                      return v.value0;
                  };
                  if (v instanceof Data_Maybe.Nothing) {
                      var $54 = x < fromEnum(dictBoundedEnum)(Data_Bounded.bottom(dictBoundedEnum.Bounded0()));
                      if ($54) {
                          return low;
                      };
                      return high;
                  };
                  throw new Error("Failed pattern match at Data.Enum (line 158, column 33 - line 160, column 62): " + [ v.constructor.name ]);
              };
          };
      };
  };
  var defaultSucc = function (toEnum$prime) {
      return function (fromEnum$prime) {
          return function (a) {
              return toEnum$prime(fromEnum$prime(a) + 1 | 0);
          };
      };
  };
  var defaultPred = function (toEnum$prime) {
      return function (fromEnum$prime) {
          return function (a) {
              return toEnum$prime(fromEnum$prime(a) - 1 | 0);
          };
      };
  };
  var charToEnum = function (v) {
      if (v >= Data_Bounded.bottom(Data_Bounded.boundedInt) && v <= Data_Bounded.top(Data_Bounded.boundedInt)) {
          return new Data_Maybe.Just($foreign.fromCharCode(v));
      };
      return Data_Maybe.Nothing.value;
  };
  var enumChar = new Enum(function () {
      return Data_Ord.ordChar;
  }, defaultPred(charToEnum)($foreign.toCharCode), defaultSucc(charToEnum)($foreign.toCharCode));
  var cardinality = function (dict) {
      return dict.cardinality;
  }; 
  var boundedEnumChar = new BoundedEnum(function () {
      return Data_Bounded.boundedChar;
  }, function () {
      return enumChar;
  }, $foreign.toCharCode(Data_Bounded.top(Data_Bounded.boundedChar)) - $foreign.toCharCode(Data_Bounded.bottom(Data_Bounded.boundedChar)) | 0, $foreign.toCharCode, charToEnum);
  exports["Enum"] = Enum;
  exports["succ"] = succ;
  exports["pred"] = pred;
  exports["BoundedEnum"] = BoundedEnum;
  exports["cardinality"] = cardinality;
  exports["toEnum"] = toEnum;
  exports["fromEnum"] = fromEnum;
  exports["toEnumWithDefaults"] = toEnumWithDefaults;
  exports["defaultSucc"] = defaultSucc;
  exports["defaultPred"] = defaultPred;
  exports["enumChar"] = enumChar;
  exports["boundedEnumChar"] = boundedEnumChar;
})(PS);
(function(exports) {
  "use strict";

  exports.intDegree = function (x) {
    return Math.min(Math.abs(x), 2147483647);
  };

  // See the Euclidean definition in
  // https://en.m.wikipedia.org/wiki/Modulo_operation.
  exports.intDiv = function (x) {
    return function (y) {
      if (y === 0) return 0;
      return y > 0 ? Math.floor(x / y) : -Math.floor(x / -y);
    };
  };

  exports.intMod = function (x) {
    return function (y) {
      if (y === 0) return 0;
      var yy = Math.abs(y);
      return ((x % yy) + yy) % yy;
    };
  };
})(PS["Data.EuclideanRing"] = PS["Data.EuclideanRing"] || {});
(function($PS) {
  // Generated by purs version 0.13.2
  "use strict";
  $PS["Data.EuclideanRing"] = $PS["Data.EuclideanRing"] || {};
  var exports = $PS["Data.EuclideanRing"];
  var $foreign = $PS["Data.EuclideanRing"];
  var Data_CommutativeRing = $PS["Data.CommutativeRing"];  
  var EuclideanRing = function (CommutativeRing0, degree, div, mod) {
      this.CommutativeRing0 = CommutativeRing0;
      this.degree = degree;
      this.div = div;
      this.mod = mod;
  };
  var mod = function (dict) {
      return dict.mod;
  }; 
  var euclideanRingInt = new EuclideanRing(function () {
      return Data_CommutativeRing.commutativeRingInt;
  }, $foreign.intDegree, $foreign.intDiv, $foreign.intMod);
  var div = function (dict) {
      return dict.div;
  };
  var degree = function (dict) {
      return dict.degree;
  };
  exports["EuclideanRing"] = EuclideanRing;
  exports["degree"] = degree;
  exports["div"] = div;
  exports["mod"] = mod;
  exports["euclideanRingInt"] = euclideanRingInt;
})(PS);
(function(exports) {
  "use strict";

  exports.fromNumberImpl = function (just) {
    return function (nothing) {
      return function (n) {
        /* jshint bitwise: false */
        return (n | 0) === n ? just(n) : nothing;
      };
    };
  };

  exports.toNumber = function (n) {
    return n;
  };
})(PS["Data.Int"] = PS["Data.Int"] || {});
(function(exports) {
  /* globals exports */
  "use strict";         

  exports.infinity = Infinity;

  exports.readInt = function (radix) {
    return function (n) {
      return parseInt(n, radix);
    };
  };
})(PS["Global"] = PS["Global"] || {});
(function($PS) {
  // Generated by purs version 0.13.2
  "use strict";
  $PS["Global"] = $PS["Global"] || {};
  var exports = $PS["Global"];
  var $foreign = $PS["Global"];
  exports["infinity"] = $foreign.infinity;
  exports["readInt"] = $foreign.readInt;
})(PS);
(function(exports) {
  "use strict";          

  exports.floor = Math.floor;
})(PS["Math"] = PS["Math"] || {});
(function($PS) {
  // Generated by purs version 0.13.2
  "use strict";
  $PS["Math"] = $PS["Math"] || {};
  var exports = $PS["Math"];
  var $foreign = $PS["Math"];
  exports["floor"] = $foreign.floor;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.2
  "use strict";
  $PS["Data.Int"] = $PS["Data.Int"] || {};
  var exports = $PS["Data.Int"];
  var $foreign = $PS["Data.Int"];
  var Data_Boolean = $PS["Data.Boolean"];
  var Data_Bounded = $PS["Data.Bounded"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Global = $PS["Global"];
  var $$Math = $PS["Math"];         
  var fromNumber = $foreign.fromNumberImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
  var unsafeClamp = function (x) {
      if (x === Global.infinity) {
          return 0;
      };
      if (x === -Global.infinity) {
          return 0;
      };
      if (x >= $foreign.toNumber(Data_Bounded.top(Data_Bounded.boundedInt))) {
          return Data_Bounded.top(Data_Bounded.boundedInt);
      };
      if (x <= $foreign.toNumber(Data_Bounded.bottom(Data_Bounded.boundedInt))) {
          return Data_Bounded.bottom(Data_Bounded.boundedInt);
      };
      if (Data_Boolean.otherwise) {
          return Data_Maybe.fromMaybe(0)(fromNumber(x));
      };
      throw new Error("Failed pattern match at Data.Int (line 66, column 1 - line 66, column 29): " + [ x.constructor.name ]);
  };
  var floor = function ($24) {
      return unsafeClamp($$Math.floor($24));
  };
  exports["fromNumber"] = fromNumber;
  exports["floor"] = floor;
})(PS);
(function(exports) {
  /* global exports */
  "use strict";

  exports.now = function () {
    return new Date();
  };

  exports.dateMethod = function (method, date) {
    return date[method]();
  };

  exports.dateMethodEff = function (method, date) {
    return function () {
      return date[method]();
    };
  };

  exports.fromTime = function (time) {
    return new Date(time);
  };
})(PS["Data.JSDate"] = PS["Data.JSDate"] || {});
(function($PS) {
  // Generated by purs version 0.13.2
  "use strict";
  $PS["Data.JSDate"] = $PS["Data.JSDate"] || {};
  var exports = $PS["Data.JSDate"];
  var $foreign = $PS["Data.JSDate"];              
  var getUTCSeconds = function (dt) {
      return $foreign.dateMethod("getUTCSeconds", dt);
  };
  var getUTCMonth = function (dt) {
      return $foreign.dateMethod("getUTCMonth", dt);
  };
  var getUTCMinutes = function (dt) {
      return $foreign.dateMethod("getUTCMinutes", dt);
  };
  var getUTCHours = function (dt) {
      return $foreign.dateMethod("getUTCHours", dt);
  };
  var getUTCFullYear = function (dt) {
      return $foreign.dateMethod("getUTCFullYear", dt);
  };
  var getUTCDate = function (dt) {
      return $foreign.dateMethod("getUTCDate", dt);
  };
  var getTimezoneOffset = function (dt) {
      return $foreign.dateMethodEff("getTimezoneOffset", dt);
  };
  exports["getUTCDate"] = getUTCDate;
  exports["getUTCFullYear"] = getUTCFullYear;
  exports["getUTCHours"] = getUTCHours;
  exports["getUTCMinutes"] = getUTCMinutes;
  exports["getUTCMonth"] = getUTCMonth;
  exports["getUTCSeconds"] = getUTCSeconds;
  exports["getTimezoneOffset"] = getTimezoneOffset;
  exports["now"] = $foreign.now;
  exports["fromTime"] = $foreign.fromTime;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.2
  "use strict";
  $PS["Data.Monoid"] = $PS["Data.Monoid"] || {};
  var exports = $PS["Data.Monoid"];
  var mempty = function (dict) {
      return dict.mempty;
  };
  exports["mempty"] = mempty;
})(PS);
(function(exports) {
  "use strict";

  exports.concatArray = function (xs) {
    return function (ys) {
      if (xs.length === 0) return ys;
      if (ys.length === 0) return xs;
      return xs.concat(ys);
    };
  };
})(PS["Data.Semigroup"] = PS["Data.Semigroup"] || {});
(function($PS) {
  // Generated by purs version 0.13.2
  "use strict";
  $PS["Data.Semigroup"] = $PS["Data.Semigroup"] || {};
  var exports = $PS["Data.Semigroup"];
  var $foreign = $PS["Data.Semigroup"];
  var Semigroup = function (append) {
      this.append = append;
  }; 
  var semigroupArray = new Semigroup($foreign.concatArray);
  var append = function (dict) {
      return dict.append;
  };
  exports["Semigroup"] = Semigroup;
  exports["append"] = append;
  exports["semigroupArray"] = semigroupArray;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.2
  "use strict";
  $PS["Data.Traversable"] = $PS["Data.Traversable"] || {};
  var exports = $PS["Data.Traversable"];                                                       
  var Traversable = function (Foldable1, Functor0, sequence, traverse) {
      this.Foldable1 = Foldable1;
      this.Functor0 = Functor0;
      this.sequence = sequence;
      this.traverse = traverse;
  };
  var traverse = function (dict) {
      return dict.traverse;
  }; 
  var sequence = function (dict) {
      return dict.sequence;
  };
  exports["Traversable"] = Traversable;
  exports["traverse"] = traverse;
  exports["sequence"] = sequence;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.2
  "use strict";
  $PS["Data.List.Types"] = $PS["Data.List.Types"] || {};
  var exports = $PS["Data.List.Types"];
  var Control_Alt = $PS["Control.Alt"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Category = $PS["Control.Category"];
  var Control_Plus = $PS["Control.Plus"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Traversable = $PS["Data.Traversable"];                
  var Nil = (function () {
      function Nil() {

      };
      Nil.value = new Nil();
      return Nil;
  })();
  var Cons = (function () {
      function Cons(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Cons.create = function (value0) {
          return function (value1) {
              return new Cons(value0, value1);
          };
      };
      return Cons;
  })();
  var NonEmptyList = function (x) {
      return x;
  };
  var listMap = function (f) {
      var chunkedRevMap = function ($copy_chunksAcc) {
          return function ($copy_v) {
              var $tco_var_chunksAcc = $copy_chunksAcc;
              var $tco_done = false;
              var $tco_result;
              function $tco_loop(chunksAcc, v) {
                  if (v instanceof Cons && (v.value1 instanceof Cons && v.value1.value1 instanceof Cons)) {
                      $tco_var_chunksAcc = new Cons(v, chunksAcc);
                      $copy_v = v.value1.value1.value1;
                      return;
                  };
                  var unrolledMap = function (v1) {
                      if (v1 instanceof Cons && (v1.value1 instanceof Cons && v1.value1.value1 instanceof Nil)) {
                          return new Cons(f(v1.value0), new Cons(f(v1.value1.value0), Nil.value));
                      };
                      if (v1 instanceof Cons && v1.value1 instanceof Nil) {
                          return new Cons(f(v1.value0), Nil.value);
                      };
                      return Nil.value;
                  };
                  var reverseUnrolledMap = function ($copy_v1) {
                      return function ($copy_acc) {
                          var $tco_var_v1 = $copy_v1;
                          var $tco_done = false;
                          var $tco_result;
                          function $tco_loop(v1, acc) {
                              if (v1 instanceof Cons && (v1.value0 instanceof Cons && (v1.value0.value1 instanceof Cons && v1.value0.value1.value1 instanceof Cons))) {
                                  $tco_var_v1 = v1.value1;
                                  $copy_acc = new Cons(f(v1.value0.value0), new Cons(f(v1.value0.value1.value0), new Cons(f(v1.value0.value1.value1.value0), acc)));
                                  return;
                              };
                              $tco_done = true;
                              return acc;
                          };
                          while (!$tco_done) {
                              $tco_result = $tco_loop($tco_var_v1, $copy_acc);
                          };
                          return $tco_result;
                      };
                  };
                  $tco_done = true;
                  return reverseUnrolledMap(chunksAcc)(unrolledMap(v));
              };
              while (!$tco_done) {
                  $tco_result = $tco_loop($tco_var_chunksAcc, $copy_v);
              };
              return $tco_result;
          };
      };
      return chunkedRevMap(Nil.value);
  };
  var functorList = new Data_Functor.Functor(listMap);                 
  var foldableList = new Data_Foldable.Foldable(function (dictMonoid) {
      return function (f) {
          return Data_Foldable.foldl(foldableList)(function (acc) {
              var $202 = Data_Semigroup.append(dictMonoid.Semigroup0())(acc);
              return function ($203) {
                  return $202(f($203));
              };
          })(Data_Monoid.mempty(dictMonoid));
      };
  }, function (f) {
      var go = function ($copy_b) {
          return function ($copy_v) {
              var $tco_var_b = $copy_b;
              var $tco_done = false;
              var $tco_result;
              function $tco_loop(b, v) {
                  if (v instanceof Nil) {
                      $tco_done = true;
                      return b;
                  };
                  if (v instanceof Cons) {
                      $tco_var_b = f(b)(v.value0);
                      $copy_v = v.value1;
                      return;
                  };
                  throw new Error("Failed pattern match at Data.List.Types (line 109, column 12 - line 111, column 30): " + [ v.constructor.name ]);
              };
              while (!$tco_done) {
                  $tco_result = $tco_loop($tco_var_b, $copy_v);
              };
              return $tco_result;
          };
      };
      return go;
  }, function (f) {
      return function (b) {
          var rev = Data_Foldable.foldl(foldableList)(Data_Function.flip(Cons.create))(Nil.value);
          var $204 = Data_Foldable.foldl(foldableList)(Data_Function.flip(f))(b);
          return function ($205) {
              return $204(rev($205));
          };
      };
  });
  var semigroupList = new Data_Semigroup.Semigroup(function (xs) {
      return function (ys) {
          return Data_Foldable.foldr(foldableList)(Cons.create)(ys)(xs);
      };
  });
  var traversableList = new Data_Traversable.Traversable(function () {
      return foldableList;
  }, function () {
      return functorList;
  }, function (dictApplicative) {
      return Data_Traversable.traverse(traversableList)(dictApplicative)(Control_Category.identity(Control_Category.categoryFn));
  }, function (dictApplicative) {
      return function (f) {
          var $219 = Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Foldable.foldl(foldableList)(Data_Function.flip(Cons.create))(Nil.value));
          var $220 = Data_Foldable.foldl(foldableList)(function (acc) {
              var $222 = Control_Apply.lift2(dictApplicative.Apply0())(Data_Function.flip(Cons.create))(acc);
              return function ($223) {
                  return $222(f($223));
              };
          })(Control_Applicative.pure(dictApplicative)(Nil.value));
          return function ($221) {
              return $219($220($221));
          };
      };
  });
  var applyList = new Control_Apply.Apply(function () {
      return functorList;
  }, function (v) {
      return function (v1) {
          if (v instanceof Nil) {
              return Nil.value;
          };
          if (v instanceof Cons) {
              return Data_Semigroup.append(semigroupList)(Data_Functor.map(functorList)(v.value0)(v1))(Control_Apply.apply(applyList)(v.value1)(v1));
          };
          throw new Error("Failed pattern match at Data.List.Types (line 155, column 1 - line 157, column 48): " + [ v.constructor.name, v1.constructor.name ]);
      };
  });
  var applicativeList = new Control_Applicative.Applicative(function () {
      return applyList;
  }, function (a) {
      return new Cons(a, Nil.value);
  });                                              
  var altList = new Control_Alt.Alt(function () {
      return functorList;
  }, Data_Semigroup.append(semigroupList));
  var plusList = new Control_Plus.Plus(function () {
      return altList;
  }, Nil.value);
  exports["Nil"] = Nil;
  exports["Cons"] = Cons;
  exports["NonEmptyList"] = NonEmptyList;
  exports["semigroupList"] = semigroupList;
  exports["functorList"] = functorList;
  exports["foldableList"] = foldableList;
  exports["traversableList"] = traversableList;
  exports["applyList"] = applyList;
  exports["applicativeList"] = applicativeList;
  exports["altList"] = altList;
  exports["plusList"] = plusList;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.2
  "use strict";
  $PS["Data.List"] = $PS["Data.List"] || {};
  var exports = $PS["Data.List"];
  var Data_List_Types = $PS["Data.List.Types"];
  var singleton = function (a) {
      return new Data_List_Types.Cons(a, Data_List_Types.Nil.value);
  };
  exports["singleton"] = singleton;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.2
  "use strict";
  $PS["Data.NonEmpty"] = $PS["Data.NonEmpty"] || {};
  var exports = $PS["Data.NonEmpty"];
  var Control_Plus = $PS["Control.Plus"];                        
  var NonEmpty = (function () {
      function NonEmpty(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      NonEmpty.create = function (value0) {
          return function (value1) {
              return new NonEmpty(value0, value1);
          };
      };
      return NonEmpty;
  })();
  var singleton = function (dictPlus) {
      return function (a) {
          return new NonEmpty(a, Control_Plus.empty(dictPlus));
      };
  };
  exports["NonEmpty"] = NonEmpty;
  exports["singleton"] = singleton;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.2
  "use strict";
  $PS["Data.List.NonEmpty"] = $PS["Data.List.NonEmpty"] || {};
  var exports = $PS["Data.List.NonEmpty"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_NonEmpty = $PS["Data.NonEmpty"];
  var toList = function (v) {
      return new Data_List_Types.Cons(v.value0, v.value1);
  };
  var singleton = (function () {
      var $168 = Data_NonEmpty.singleton(Data_List_Types.plusList);
      return function ($169) {
          return Data_List_Types.NonEmptyList($168($169));
      };
  })();
  exports["toList"] = toList;
  exports["singleton"] = singleton;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.2
  "use strict";
  $PS["Data.Map.Internal"] = $PS["Data.Map.Internal"] || {};
  var exports = $PS["Data.Map.Internal"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Ordering = $PS["Data.Ordering"];
  var Data_Semigroup = $PS["Data.Semigroup"];                  
  var Leaf = (function () {
      function Leaf() {

      };
      Leaf.value = new Leaf();
      return Leaf;
  })();
  var Two = (function () {
      function Two(value0, value1, value2, value3) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
      };
      Two.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return new Two(value0, value1, value2, value3);
                  };
              };
          };
      };
      return Two;
  })();
  var Three = (function () {
      function Three(value0, value1, value2, value3, value4, value5, value6) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
          this.value4 = value4;
          this.value5 = value5;
          this.value6 = value6;
      };
      Three.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return function (value4) {
                          return function (value5) {
                              return function (value6) {
                                  return new Three(value0, value1, value2, value3, value4, value5, value6);
                              };
                          };
                      };
                  };
              };
          };
      };
      return Three;
  })();
  var TwoLeft = (function () {
      function TwoLeft(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      TwoLeft.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new TwoLeft(value0, value1, value2);
              };
          };
      };
      return TwoLeft;
  })();
  var TwoRight = (function () {
      function TwoRight(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      TwoRight.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new TwoRight(value0, value1, value2);
              };
          };
      };
      return TwoRight;
  })();
  var ThreeLeft = (function () {
      function ThreeLeft(value0, value1, value2, value3, value4, value5) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
          this.value4 = value4;
          this.value5 = value5;
      };
      ThreeLeft.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return function (value4) {
                          return function (value5) {
                              return new ThreeLeft(value0, value1, value2, value3, value4, value5);
                          };
                      };
                  };
              };
          };
      };
      return ThreeLeft;
  })();
  var ThreeMiddle = (function () {
      function ThreeMiddle(value0, value1, value2, value3, value4, value5) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
          this.value4 = value4;
          this.value5 = value5;
      };
      ThreeMiddle.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return function (value4) {
                          return function (value5) {
                              return new ThreeMiddle(value0, value1, value2, value3, value4, value5);
                          };
                      };
                  };
              };
          };
      };
      return ThreeMiddle;
  })();
  var ThreeRight = (function () {
      function ThreeRight(value0, value1, value2, value3, value4, value5) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
          this.value4 = value4;
          this.value5 = value5;
      };
      ThreeRight.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return function (value4) {
                          return function (value5) {
                              return new ThreeRight(value0, value1, value2, value3, value4, value5);
                          };
                      };
                  };
              };
          };
      };
      return ThreeRight;
  })();
  var KickUp = (function () {
      function KickUp(value0, value1, value2, value3) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
      };
      KickUp.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return new KickUp(value0, value1, value2, value3);
                  };
              };
          };
      };
      return KickUp;
  })();
  var values = function (v) {
      if (v instanceof Leaf) {
          return Data_List_Types.Nil.value;
      };
      if (v instanceof Two) {
          return Data_Semigroup.append(Data_List_Types.semigroupList)(values(v.value0))(Data_Semigroup.append(Data_List_Types.semigroupList)(Control_Applicative.pure(Data_List_Types.applicativeList)(v.value2))(values(v.value3)));
      };
      if (v instanceof Three) {
          return Data_Semigroup.append(Data_List_Types.semigroupList)(values(v.value0))(Data_Semigroup.append(Data_List_Types.semigroupList)(Control_Applicative.pure(Data_List_Types.applicativeList)(v.value2))(Data_Semigroup.append(Data_List_Types.semigroupList)(values(v.value3))(Data_Semigroup.append(Data_List_Types.semigroupList)(Control_Applicative.pure(Data_List_Types.applicativeList)(v.value5))(values(v.value6)))));
      };
      throw new Error("Failed pattern match at Data.Map.Internal (line 612, column 1 - line 612, column 40): " + [ v.constructor.name ]);
  };
  var lookup = function (dictOrd) {
      return function (k) {
          var comp = Data_Ord.compare(dictOrd);
          var go = function ($copy_v) {
              var $tco_done = false;
              var $tco_result;
              function $tco_loop(v) {
                  if (v instanceof Leaf) {
                      $tco_done = true;
                      return Data_Maybe.Nothing.value;
                  };
                  if (v instanceof Two) {
                      var v2 = comp(k)(v.value1);
                      if (v2 instanceof Data_Ordering.EQ) {
                          $tco_done = true;
                          return new Data_Maybe.Just(v.value2);
                      };
                      if (v2 instanceof Data_Ordering.LT) {
                          $copy_v = v.value0;
                          return;
                      };
                      $copy_v = v.value3;
                      return;
                  };
                  if (v instanceof Three) {
                      var v3 = comp(k)(v.value1);
                      if (v3 instanceof Data_Ordering.EQ) {
                          $tco_done = true;
                          return new Data_Maybe.Just(v.value2);
                      };
                      var v4 = comp(k)(v.value4);
                      if (v4 instanceof Data_Ordering.EQ) {
                          $tco_done = true;
                          return new Data_Maybe.Just(v.value5);
                      };
                      if (v3 instanceof Data_Ordering.LT) {
                          $copy_v = v.value0;
                          return;
                      };
                      if (v4 instanceof Data_Ordering.GT) {
                          $copy_v = v.value6;
                          return;
                      };
                      $copy_v = v.value3;
                      return;
                  };
                  throw new Error("Failed pattern match at Data.Map.Internal (line 200, column 5 - line 200, column 22): " + [ v.constructor.name ]);
              };
              while (!$tco_done) {
                  $tco_result = $tco_loop($copy_v);
              };
              return $tco_result;
          };
          return go;
      };
  }; 
  var fromZipper = function ($copy_dictOrd) {
      return function ($copy_v) {
          return function ($copy_tree) {
              var $tco_var_dictOrd = $copy_dictOrd;
              var $tco_var_v = $copy_v;
              var $tco_done = false;
              var $tco_result;
              function $tco_loop(dictOrd, v, tree) {
                  if (v instanceof Data_List_Types.Nil) {
                      $tco_done = true;
                      return tree;
                  };
                  if (v instanceof Data_List_Types.Cons) {
                      if (v.value0 instanceof TwoLeft) {
                          $tco_var_dictOrd = dictOrd;
                          $tco_var_v = v.value1;
                          $copy_tree = new Two(tree, v.value0.value0, v.value0.value1, v.value0.value2);
                          return;
                      };
                      if (v.value0 instanceof TwoRight) {
                          $tco_var_dictOrd = dictOrd;
                          $tco_var_v = v.value1;
                          $copy_tree = new Two(v.value0.value0, v.value0.value1, v.value0.value2, tree);
                          return;
                      };
                      if (v.value0 instanceof ThreeLeft) {
                          $tco_var_dictOrd = dictOrd;
                          $tco_var_v = v.value1;
                          $copy_tree = new Three(tree, v.value0.value0, v.value0.value1, v.value0.value2, v.value0.value3, v.value0.value4, v.value0.value5);
                          return;
                      };
                      if (v.value0 instanceof ThreeMiddle) {
                          $tco_var_dictOrd = dictOrd;
                          $tco_var_v = v.value1;
                          $copy_tree = new Three(v.value0.value0, v.value0.value1, v.value0.value2, tree, v.value0.value3, v.value0.value4, v.value0.value5);
                          return;
                      };
                      if (v.value0 instanceof ThreeRight) {
                          $tco_var_dictOrd = dictOrd;
                          $tco_var_v = v.value1;
                          $copy_tree = new Three(v.value0.value0, v.value0.value1, v.value0.value2, v.value0.value3, v.value0.value4, v.value0.value5, tree);
                          return;
                      };
                      throw new Error("Failed pattern match at Data.Map.Internal (line 418, column 3 - line 423, column 88): " + [ v.value0.constructor.name ]);
                  };
                  throw new Error("Failed pattern match at Data.Map.Internal (line 415, column 1 - line 415, column 80): " + [ v.constructor.name, tree.constructor.name ]);
              };
              while (!$tco_done) {
                  $tco_result = $tco_loop($tco_var_dictOrd, $tco_var_v, $copy_tree);
              };
              return $tco_result;
          };
      };
  };
  var insert = function (dictOrd) {
      return function (k) {
          return function (v) {
              var up = function ($copy_v1) {
                  return function ($copy_v2) {
                      var $tco_var_v1 = $copy_v1;
                      var $tco_done = false;
                      var $tco_result;
                      function $tco_loop(v1, v2) {
                          if (v1 instanceof Data_List_Types.Nil) {
                              $tco_done = true;
                              return new Two(v2.value0, v2.value1, v2.value2, v2.value3);
                          };
                          if (v1 instanceof Data_List_Types.Cons) {
                              if (v1.value0 instanceof TwoLeft) {
                                  $tco_done = true;
                                  return fromZipper(dictOrd)(v1.value1)(new Three(v2.value0, v2.value1, v2.value2, v2.value3, v1.value0.value0, v1.value0.value1, v1.value0.value2));
                              };
                              if (v1.value0 instanceof TwoRight) {
                                  $tco_done = true;
                                  return fromZipper(dictOrd)(v1.value1)(new Three(v1.value0.value0, v1.value0.value1, v1.value0.value2, v2.value0, v2.value1, v2.value2, v2.value3));
                              };
                              if (v1.value0 instanceof ThreeLeft) {
                                  $tco_var_v1 = v1.value1;
                                  $copy_v2 = new KickUp(new Two(v2.value0, v2.value1, v2.value2, v2.value3), v1.value0.value0, v1.value0.value1, new Two(v1.value0.value2, v1.value0.value3, v1.value0.value4, v1.value0.value5));
                                  return;
                              };
                              if (v1.value0 instanceof ThreeMiddle) {
                                  $tco_var_v1 = v1.value1;
                                  $copy_v2 = new KickUp(new Two(v1.value0.value0, v1.value0.value1, v1.value0.value2, v2.value0), v2.value1, v2.value2, new Two(v2.value3, v1.value0.value3, v1.value0.value4, v1.value0.value5));
                                  return;
                              };
                              if (v1.value0 instanceof ThreeRight) {
                                  $tco_var_v1 = v1.value1;
                                  $copy_v2 = new KickUp(new Two(v1.value0.value0, v1.value0.value1, v1.value0.value2, v1.value0.value3), v1.value0.value4, v1.value0.value5, new Two(v2.value0, v2.value1, v2.value2, v2.value3));
                                  return;
                              };
                              throw new Error("Failed pattern match at Data.Map.Internal (line 454, column 5 - line 459, column 108): " + [ v1.value0.constructor.name, v2.constructor.name ]);
                          };
                          throw new Error("Failed pattern match at Data.Map.Internal (line 451, column 3 - line 451, column 56): " + [ v1.constructor.name, v2.constructor.name ]);
                      };
                      while (!$tco_done) {
                          $tco_result = $tco_loop($tco_var_v1, $copy_v2);
                      };
                      return $tco_result;
                  };
              };
              var comp = Data_Ord.compare(dictOrd);
              var down = function ($copy_ctx) {
                  return function ($copy_v1) {
                      var $tco_var_ctx = $copy_ctx;
                      var $tco_done = false;
                      var $tco_result;
                      function $tco_loop(ctx, v1) {
                          if (v1 instanceof Leaf) {
                              $tco_done = true;
                              return up(ctx)(new KickUp(Leaf.value, k, v, Leaf.value));
                          };
                          if (v1 instanceof Two) {
                              var v2 = comp(k)(v1.value1);
                              if (v2 instanceof Data_Ordering.EQ) {
                                  $tco_done = true;
                                  return fromZipper(dictOrd)(ctx)(new Two(v1.value0, k, v, v1.value3));
                              };
                              if (v2 instanceof Data_Ordering.LT) {
                                  $tco_var_ctx = new Data_List_Types.Cons(new TwoLeft(v1.value1, v1.value2, v1.value3), ctx);
                                  $copy_v1 = v1.value0;
                                  return;
                              };
                              $tco_var_ctx = new Data_List_Types.Cons(new TwoRight(v1.value0, v1.value1, v1.value2), ctx);
                              $copy_v1 = v1.value3;
                              return;
                          };
                          if (v1 instanceof Three) {
                              var v3 = comp(k)(v1.value1);
                              if (v3 instanceof Data_Ordering.EQ) {
                                  $tco_done = true;
                                  return fromZipper(dictOrd)(ctx)(new Three(v1.value0, k, v, v1.value3, v1.value4, v1.value5, v1.value6));
                              };
                              var v4 = comp(k)(v1.value4);
                              if (v4 instanceof Data_Ordering.EQ) {
                                  $tco_done = true;
                                  return fromZipper(dictOrd)(ctx)(new Three(v1.value0, v1.value1, v1.value2, v1.value3, k, v, v1.value6));
                              };
                              if (v3 instanceof Data_Ordering.LT) {
                                  $tco_var_ctx = new Data_List_Types.Cons(new ThreeLeft(v1.value1, v1.value2, v1.value3, v1.value4, v1.value5, v1.value6), ctx);
                                  $copy_v1 = v1.value0;
                                  return;
                              };
                              if (v3 instanceof Data_Ordering.GT && v4 instanceof Data_Ordering.LT) {
                                  $tco_var_ctx = new Data_List_Types.Cons(new ThreeMiddle(v1.value0, v1.value1, v1.value2, v1.value4, v1.value5, v1.value6), ctx);
                                  $copy_v1 = v1.value3;
                                  return;
                              };
                              $tco_var_ctx = new Data_List_Types.Cons(new ThreeRight(v1.value0, v1.value1, v1.value2, v1.value3, v1.value4, v1.value5), ctx);
                              $copy_v1 = v1.value6;
                              return;
                          };
                          throw new Error("Failed pattern match at Data.Map.Internal (line 434, column 3 - line 434, column 55): " + [ ctx.constructor.name, v1.constructor.name ]);
                      };
                      while (!$tco_done) {
                          $tco_result = $tco_loop($tco_var_ctx, $copy_v1);
                      };
                      return $tco_result;
                  };
              };
              return down(Data_List_Types.Nil.value);
          };
      };
  };
  var foldableMap = new Data_Foldable.Foldable(function (dictMonoid) {
      return function (f) {
          return function (m) {
              return Data_Foldable.foldMap(Data_List_Types.foldableList)(dictMonoid)(f)(values(m));
          };
      };
  }, function (f) {
      return function (z) {
          return function (m) {
              return Data_Foldable.foldl(Data_List_Types.foldableList)(f)(z)(values(m));
          };
      };
  }, function (f) {
      return function (z) {
          return function (m) {
              return Data_Foldable.foldr(Data_List_Types.foldableList)(f)(z)(values(m));
          };
      };
  });
  var empty = Leaf.value;
  exports["empty"] = empty;
  exports["insert"] = insert;
  exports["lookup"] = lookup;
  exports["values"] = values;
  exports["foldableMap"] = foldableMap;
})(PS);
(function(exports) {
  "use strict";          

  exports.nullable = function (a, r, f) {
    return a == null ? r : f(a);
  };
})(PS["Data.Nullable"] = PS["Data.Nullable"] || {});
(function($PS) {
  // Generated by purs version 0.13.2
  "use strict";
  $PS["Data.Nullable"] = $PS["Data.Nullable"] || {};
  var exports = $PS["Data.Nullable"];
  var $foreign = $PS["Data.Nullable"];
  var Data_Maybe = $PS["Data.Maybe"];                                   
  var toMaybe = function (n) {
      return $foreign.nullable(n, Data_Maybe.Nothing.value, Data_Maybe.Just.create);
  };
  exports["toMaybe"] = toMaybe;
})(PS);
(function(exports) {
  "use strict";

  exports.showIntImpl = function (n) {
    return n.toString();
  };

  exports.showStringImpl = function (s) {
    var l = s.length;
    return "\"" + s.replace(
      /[\0-\x1F\x7F"\\]/g, // eslint-disable-line no-control-regex
      function (c, i) {
        switch (c) {
          case "\"":
          case "\\":
            return "\\" + c;
          case "\x07": return "\\a";
          case "\b": return "\\b";
          case "\f": return "\\f";
          case "\n": return "\\n";
          case "\r": return "\\r";
          case "\t": return "\\t";
          case "\v": return "\\v";
        }
        var k = i + 1;
        var empty = k < l && s[k] >= "0" && s[k] <= "9" ? "\\&" : "";
        return "\\" + c.charCodeAt(0).toString(10) + empty;
      }
    ) + "\"";
  };

  exports.showArrayImpl = function (f) {
    return function (xs) {
      var ss = [];
      for (var i = 0, l = xs.length; i < l; i++) {
        ss[i] = f(xs[i]);
      }
      return "[" + ss.join(",") + "]";
    };
  };

  exports.join = function (separator) {
    return function (xs) {
      return xs.join(separator);
    };
  };
})(PS["Data.Show"] = PS["Data.Show"] || {});
(function($PS) {
  // Generated by purs version 0.13.2
  "use strict";
  $PS["Data.Show"] = $PS["Data.Show"] || {};
  var exports = $PS["Data.Show"];
  var $foreign = $PS["Data.Show"];
  var Show = function (show) {
      this.show = show;
  };
  var showString = new Show($foreign.showStringImpl);
  var showInt = new Show($foreign.showIntImpl);
  var show = function (dict) {
      return dict.show;
  };
  var showArray = function (dictShow) {
      return new Show($foreign.showArrayImpl(show(dictShow)));
  };
  exports["Show"] = Show;
  exports["show"] = show;
  exports["showInt"] = showInt;
  exports["showString"] = showString;
  exports["showArray"] = showArray;
})(PS);
(function(exports) {
  "use strict";
  /* global Symbol */

  var hasArrayFrom = typeof Array.from === "function";
  var hasStringIterator =
    typeof Symbol !== "undefined" &&
    Symbol != null &&
    typeof Symbol.iterator !== "undefined" &&
    typeof String.prototype[Symbol.iterator] === "function";
  var hasFromCodePoint = typeof String.prototype.fromCodePoint === "function";
  var hasCodePointAt = typeof String.prototype.codePointAt === "function";

  exports._unsafeCodePointAt0 = function (fallback) {
    return hasCodePointAt
      ? function (str) { return str.codePointAt(0); }
      : fallback;
  };

  exports._singleton = function (fallback) {
    return hasFromCodePoint ? String.fromCodePoint : fallback;
  };

  exports._take = function (fallback) {
    return function (n) {
      if (hasStringIterator) {
        return function (str) {
          var accum = "";
          var iter = str[Symbol.iterator]();
          for (var i = 0; i < n; ++i) {
            var o = iter.next();
            if (o.done) return accum;
            accum += o.value;
          }
          return accum;
        };
      }
      return fallback(n);
    };
  };

  exports._toCodePointArray = function (fallback) {
    return function (unsafeCodePointAt0) {
      if (hasArrayFrom) {
        return function (str) {
          return Array.from(str, unsafeCodePointAt0);
        };
      }
      return fallback;
    };
  };
})(PS["Data.String.CodePoints"] = PS["Data.String.CodePoints"] || {});
(function(exports) {
  "use strict";

  exports.singleton = function (c) {
    return c;
  };

  exports.length = function (s) {
    return s.length;
  };

  exports.drop = function (n) {
    return function (s) {
      return s.substring(n);
    };
  };
})(PS["Data.String.CodeUnits"] = PS["Data.String.CodeUnits"] || {});
(function($PS) {
  // Generated by purs version 0.13.2
  "use strict";
  $PS["Data.String.CodeUnits"] = $PS["Data.String.CodeUnits"] || {};
  var exports = $PS["Data.String.CodeUnits"];
  var $foreign = $PS["Data.String.CodeUnits"];
  exports["singleton"] = $foreign.singleton;
  exports["length"] = $foreign.length;
  exports["drop"] = $foreign.drop;
})(PS);
(function(exports) {
  "use strict";

  exports.charAt = function (i) {
    return function (s) {
      if (i >= 0 && i < s.length) return s.charAt(i);
      throw new Error("Data.String.Unsafe.charAt: Invalid index.");
    };
  };
})(PS["Data.String.Unsafe"] = PS["Data.String.Unsafe"] || {});
(function($PS) {
  // Generated by purs version 0.13.2
  "use strict";
  $PS["Data.String.Unsafe"] = $PS["Data.String.Unsafe"] || {};
  var exports = $PS["Data.String.Unsafe"];
  var $foreign = $PS["Data.String.Unsafe"];
  exports["charAt"] = $foreign.charAt;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.2
  "use strict";
  $PS["Data.Tuple"] = $PS["Data.Tuple"] || {};
  var exports = $PS["Data.Tuple"];                         
  var Tuple = (function () {
      function Tuple(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Tuple.create = function (value0) {
          return function (value1) {
              return new Tuple(value0, value1);
          };
      };
      return Tuple;
  })();
  var snd = function (v) {
      return v.value1;
  };                                                                                                    
  var fst = function (v) {
      return v.value0;
  };
  exports["Tuple"] = Tuple;
  exports["fst"] = fst;
  exports["snd"] = snd;
})(PS);
(function(exports) {
  "use strict";

  exports.unfoldrArrayImpl = function (isNothing) {
    return function (fromJust) {
      return function (fst) {
        return function (snd) {
          return function (f) {
            return function (b) {
              var result = [];
              var value = b;
              while (true) { // eslint-disable-line no-constant-condition
                var maybe = f(value);
                if (isNothing(maybe)) return result;
                var tuple = fromJust(maybe);
                result.push(fst(tuple));
                value = snd(tuple);
              }
            };
          };
        };
      };
    };
  };
})(PS["Data.Unfoldable"] = PS["Data.Unfoldable"] || {});
(function(exports) {
  "use strict";

  exports.unfoldr1ArrayImpl = function (isNothing) {
    return function (fromJust) {
      return function (fst) {
        return function (snd) {
          return function (f) {
            return function (b) {
              var result = [];
              var value = b;
              while (true) { // eslint-disable-line no-constant-condition
                var tuple = f(value);
                result.push(fst(tuple));
                var maybe = snd(tuple);
                if (isNothing(maybe)) return result;
                value = fromJust(maybe);
              }
            };
          };
        };
      };
    };
  };
})(PS["Data.Unfoldable1"] = PS["Data.Unfoldable1"] || {});
(function($PS) {
  // Generated by purs version 0.13.2
  "use strict";
  $PS["Data.Unfoldable1"] = $PS["Data.Unfoldable1"] || {};
  var exports = $PS["Data.Unfoldable1"];
  var $foreign = $PS["Data.Unfoldable1"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Tuple = $PS["Data.Tuple"];                
  var Unfoldable1 = function (unfoldr1) {
      this.unfoldr1 = unfoldr1;
  };
  var unfoldr1 = function (dict) {
      return dict.unfoldr1;
  };
  var unfoldable1Array = new Unfoldable1($foreign.unfoldr1ArrayImpl(Data_Maybe.isNothing)(Data_Maybe.fromJust())(Data_Tuple.fst)(Data_Tuple.snd));
  exports["Unfoldable1"] = Unfoldable1;
  exports["unfoldr1"] = unfoldr1;
  exports["unfoldable1Array"] = unfoldable1Array;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.2
  "use strict";
  $PS["Data.Unfoldable"] = $PS["Data.Unfoldable"] || {};
  var exports = $PS["Data.Unfoldable"];
  var $foreign = $PS["Data.Unfoldable"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_Unfoldable1 = $PS["Data.Unfoldable1"];  
  var Unfoldable = function (Unfoldable10, unfoldr) {
      this.Unfoldable10 = Unfoldable10;
      this.unfoldr = unfoldr;
  };
  var unfoldr = function (dict) {
      return dict.unfoldr;
  };
  var unfoldableArray = new Unfoldable(function () {
      return Data_Unfoldable1.unfoldable1Array;
  }, $foreign.unfoldrArrayImpl(Data_Maybe.isNothing)(Data_Maybe.fromJust())(Data_Tuple.fst)(Data_Tuple.snd));
  exports["Unfoldable"] = Unfoldable;
  exports["unfoldr"] = unfoldr;
  exports["unfoldableArray"] = unfoldableArray;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.2
  "use strict";
  $PS["Data.String.CodePoints"] = $PS["Data.String.CodePoints"] || {};
  var exports = $PS["Data.String.CodePoints"];
  var $foreign = $PS["Data.String.CodePoints"];
  var Data_Array = $PS["Data.Array"];
  var Data_Bounded = $PS["Data.Bounded"];
  var Data_Enum = $PS["Data.Enum"];
  var Data_EuclideanRing = $PS["Data.EuclideanRing"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_String_CodeUnits = $PS["Data.String.CodeUnits"];
  var Data_String_Unsafe = $PS["Data.String.Unsafe"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_Unfoldable = $PS["Data.Unfoldable"];
  var unsurrogate = function (lead) {
      return function (trail) {
          return (((lead - 55296 | 0) * 1024 | 0) + (trail - 56320 | 0) | 0) + 65536 | 0;
      };
  }; 
  var isTrail = function (cu) {
      return 56320 <= cu && cu <= 57343;
  };
  var isLead = function (cu) {
      return 55296 <= cu && cu <= 56319;
  };
  var uncons = function (s) {
      var v = Data_String_CodeUnits.length(s);
      if (v === 0) {
          return Data_Maybe.Nothing.value;
      };
      if (v === 1) {
          return new Data_Maybe.Just({
              head: Data_Enum.fromEnum(Data_Enum.boundedEnumChar)(Data_String_Unsafe.charAt(0)(s)),
              tail: ""
          });
      };
      var cu1 = Data_Enum.fromEnum(Data_Enum.boundedEnumChar)(Data_String_Unsafe.charAt(1)(s));
      var cu0 = Data_Enum.fromEnum(Data_Enum.boundedEnumChar)(Data_String_Unsafe.charAt(0)(s));
      var $21 = isLead(cu0) && isTrail(cu1);
      if ($21) {
          return new Data_Maybe.Just({
              head: unsurrogate(cu0)(cu1),
              tail: Data_String_CodeUnits.drop(2)(s)
          });
      };
      return new Data_Maybe.Just({
          head: cu0,
          tail: Data_String_CodeUnits.drop(1)(s)
      });
  };
  var unconsButWithTuple = function (s) {
      return Data_Functor.map(Data_Maybe.functorMaybe)(function (v) {
          return new Data_Tuple.Tuple(v.head, v.tail);
      })(uncons(s));
  };
  var toCodePointArrayFallback = function (s) {
      return Data_Unfoldable.unfoldr(Data_Unfoldable.unfoldableArray)(unconsButWithTuple)(s);
  };
  var unsafeCodePointAt0Fallback = function (s) {
      var cu0 = Data_Enum.fromEnum(Data_Enum.boundedEnumChar)(Data_String_Unsafe.charAt(0)(s));
      var $25 = isLead(cu0) && Data_String_CodeUnits.length(s) > 1;
      if ($25) {
          var cu1 = Data_Enum.fromEnum(Data_Enum.boundedEnumChar)(Data_String_Unsafe.charAt(1)(s));
          var $26 = isTrail(cu1);
          if ($26) {
              return unsurrogate(cu0)(cu1);
          };
          return cu0;
      };
      return cu0;
  };
  var unsafeCodePointAt0 = $foreign["_unsafeCodePointAt0"](unsafeCodePointAt0Fallback);
  var toCodePointArray = $foreign["_toCodePointArray"](toCodePointArrayFallback)(unsafeCodePointAt0);
  var length = function ($52) {
      return Data_Array.length(toCodePointArray($52));
  };
  var fromCharCode = (function () {
      var $53 = Data_Enum.toEnumWithDefaults(Data_Enum.boundedEnumChar)(Data_Bounded.bottom(Data_Bounded.boundedChar))(Data_Bounded.top(Data_Bounded.boundedChar));
      return function ($54) {
          return Data_String_CodeUnits.singleton($53($54));
      };
  })();
  var singletonFallback = function (v) {
      if (v <= 65535) {
          return fromCharCode(v);
      };
      var lead = Data_EuclideanRing.div(Data_EuclideanRing.euclideanRingInt)(v - 65536 | 0)(1024) + 55296 | 0;
      var trail = Data_EuclideanRing.mod(Data_EuclideanRing.euclideanRingInt)(v - 65536 | 0)(1024) + 56320 | 0;
      return fromCharCode(lead) + fromCharCode(trail);
  };                                                                          
  var singleton = $foreign["_singleton"](singletonFallback);
  var takeFallback = function (n) {
      return function (v) {
          if (n < 1) {
              return "";
          };
          var v1 = uncons(v);
          if (v1 instanceof Data_Maybe.Just) {
              return singleton(v1.value0.head) + takeFallback(n - 1 | 0)(v1.value0.tail);
          };
          return v;
      };
  };
  var take = $foreign["_take"](takeFallback);
  var drop = function (n) {
      return function (s) {
          return Data_String_CodeUnits.drop(Data_String_CodeUnits.length(take(n)(s)))(s);
      };
  };
  exports["singleton"] = singleton;
  exports["toCodePointArray"] = toCodePointArray;
  exports["uncons"] = uncons;
  exports["length"] = length;
  exports["take"] = take;
  exports["drop"] = drop;
})(PS);
(function(exports) {
  "use strict";

  exports.split = function (sep) {
    return function (s) {
      return s.split(sep);
    };
  };
})(PS["Data.String.Common"] = PS["Data.String.Common"] || {});
(function($PS) {
  // Generated by purs version 0.13.2
  "use strict";
  $PS["Data.String.Common"] = $PS["Data.String.Common"] || {};
  var exports = $PS["Data.String.Common"];
  var $foreign = $PS["Data.String.Common"];                
  var $$null = function (s) {
      return s === "";
  };
  exports["null"] = $$null;
  exports["split"] = $foreign.split;
})(PS);
(function(exports) {
  "use strict";

  exports.error = function (msg) {
    return new Error(msg);
  };

  exports.throwException = function (e) {
    return function () {
      throw e;
    };
  };
})(PS["Effect.Exception"] = PS["Effect.Exception"] || {});
(function($PS) {
  // Generated by purs version 0.13.2
  "use strict";
  $PS["Effect.Exception"] = $PS["Effect.Exception"] || {};
  var exports = $PS["Effect.Exception"];
  var $foreign = $PS["Effect.Exception"];
  var $$throw = function ($2) {
      return $foreign.throwException($foreign.error($2));
  };
  exports["throw"] = $$throw;
})(PS);
(function(exports) {
  "use strict";

  exports._getElementById = function (id) {
    return function (node) {
      return function () {
        return node.getElementById(id);
      };
    };
  };
})(PS["Web.DOM.NonElementParentNode"] = PS["Web.DOM.NonElementParentNode"] || {});
(function($PS) {
  // Generated by purs version 0.13.2
  "use strict";
  $PS["Web.DOM.NonElementParentNode"] = $PS["Web.DOM.NonElementParentNode"] || {};
  var exports = $PS["Web.DOM.NonElementParentNode"];
  var $foreign = $PS["Web.DOM.NonElementParentNode"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Nullable = $PS["Data.Nullable"];
  var Effect = $PS["Effect"];                
  var getElementById = function (eid) {
      var $0 = Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe);
      var $1 = $foreign["_getElementById"](eid);
      return function ($2) {
          return $0($1($2));
      };
  };
  exports["getElementById"] = getElementById;
})(PS);
(function(exports) {
  /* global window */
  "use strict";

  exports.window = function () {
    return window;
  };
})(PS["Web.HTML"] = PS["Web.HTML"] || {});
(function($PS) {
  // Generated by purs version 0.13.2
  "use strict";
  $PS["Web.HTML"] = $PS["Web.HTML"] || {};
  var exports = $PS["Web.HTML"];
  var $foreign = $PS["Web.HTML"];
  exports["window"] = $foreign.window;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.2
  "use strict";
  $PS["Web.HTML.HTMLDocument"] = $PS["Web.HTML.HTMLDocument"] || {};
  var exports = $PS["Web.HTML.HTMLDocument"];
  var Unsafe_Coerce = $PS["Unsafe.Coerce"];     
  var toNonElementParentNode = Unsafe_Coerce.unsafeCoerce;
  exports["toNonElementParentNode"] = toNonElementParentNode;
})(PS);
(function(exports) {
  "use strict";

  // ----------------------------------------------------------------------------

  exports.host = function (location) {
    return function () {
      return location.host;
    };
  };
})(PS["Web.HTML.Location"] = PS["Web.HTML.Location"] || {});
(function($PS) {
  // Generated by purs version 0.13.2
  "use strict";
  $PS["Web.HTML.Location"] = $PS["Web.HTML.Location"] || {};
  var exports = $PS["Web.HTML.Location"];
  var $foreign = $PS["Web.HTML.Location"];
  exports["host"] = $foreign.host;
})(PS);
(function(exports) {
  "use strict";

  exports.document = function (window) {
    return function () {
      return window.document;
    };
  };

  exports.location = function (window) {
    return function () {
      return window.location;
    };
  };
})(PS["Web.HTML.Window"] = PS["Web.HTML.Window"] || {});
(function($PS) {
  // Generated by purs version 0.13.2
  "use strict";
  $PS["Web.HTML.Window"] = $PS["Web.HTML.Window"] || {};
  var exports = $PS["Web.HTML.Window"];
  var $foreign = $PS["Web.HTML.Window"];
  exports["document"] = $foreign.document;
  exports["location"] = $foreign.location;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.2
  "use strict";
  $PS["DomOps"] = $PS["DomOps"] || {};
  var exports = $PS["DomOps"];
  var Control_Bind = $PS["Control.Bind"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_String_Common = $PS["Data.String.Common"];
  var Effect = $PS["Effect"];
  var Effect_Exception = $PS["Effect.Exception"];
  var React_DOM_Props = $PS["React.DOM.Props"];
  var Web_DOM_NonElementParentNode = $PS["Web.DOM.NonElementParentNode"];
  var Web_HTML = $PS["Web.HTML"];
  var Web_HTML_HTMLDocument = $PS["Web.HTML.HTMLDocument"];
  var Web_HTML_Location = $PS["Web.HTML.Location"];
  var Web_HTML_Window = $PS["Web.HTML.Window"];
  var host = function __do() {
      var v = Control_Bind.bind(Effect.bindEffect)(Web_HTML.window)(Web_HTML_Window.location)();
      var v1 = Web_HTML_Location.host(v)();
      var $6 = Data_String_Common["null"](v1);
      if ($6) {
          return Data_Maybe.Nothing.value;
      };
      return new Data_Maybe.Just(v1);
  };
  var doc = Control_Bind.bind(Effect.bindEffect)(Web_HTML.window)(Web_HTML_Window.document);
  var cn = React_DOM_Props.className;
  var byId = function (id) {
      return function __do() {
          var v = Data_Functor.map(Effect.functorEffect)(Web_HTML_HTMLDocument.toNonElementParentNode)(doc)();
          var v1 = Web_DOM_NonElementParentNode.getElementById(id)(v)();
          if (v1 instanceof Data_Maybe.Just) {
              return v1.value0;
          };
          if (v1 instanceof Data_Maybe.Nothing) {
              return Effect_Exception["throw"]("not found=" + id)();
          };
          throw new Error("Failed pattern match at DomOps (line 25, column 3 - line 27, column 40): " + [ v1.constructor.name ]);
      };
  };
  exports["byId"] = byId;
  exports["host"] = host;
  exports["cn"] = cn;
})(PS);
(function(exports) {
  "use strict"

  exports.formatNum = function(num) {
    return num.toLocaleString("en-GB")
  }
})(PS["FormatOps"] = PS["FormatOps"] || {});
(function($PS) {
  // Generated by purs version 0.13.2
  "use strict";
  $PS["FormatOps"] = $PS["FormatOps"] || {};
  var exports = $PS["FormatOps"];
  var $foreign = $PS["FormatOps"];
  var Control_Bind = $PS["Control.Bind"];
  var Data_EuclideanRing = $PS["Data.EuclideanRing"];
  var Data_Int = $PS["Data.Int"];
  var Data_JSDate = $PS["Data.JSDate"];
  var Data_Show = $PS["Data.Show"];
  var Data_String_CodePoints = $PS["Data.String.CodePoints"];
  var Effect = $PS["Effect"];
  var Global = $PS["Global"];                
  var duration = function (sec) {
      var sec$prime = Data_Int.floor(Global.readInt(10)(sec));
      var $1 = sec$prime >= 3600;
      if ($1) {
          return {
              value: Data_Show.show(Data_Show.showInt)(Data_EuclideanRing.div(Data_EuclideanRing.euclideanRingInt)(sec$prime)(3600)),
              unit: "hour"
          };
      };
      var $2 = sec$prime >= 60;
      if ($2) {
          return {
              value: Data_Show.show(Data_Show.showInt)(Data_EuclideanRing.div(Data_EuclideanRing.euclideanRingInt)(sec$prime)(60)),
              unit: "min"
          };
      };
      return {
          value: Data_Show.show(Data_Show.showInt)(sec$prime),
          unit: "sec"
      };
  };
  var datePart = function (num) {
      var str = Data_Show.show(Data_Show.showInt)(Data_Int.floor(num));
      var $3 = Data_String_CodePoints.length(str) < 2;
      if ($3) {
          return "0" + str;
      };
      return str;
  };
  var dateTime = function (ms$prime) {
      return function __do() {
          var v = Control_Bind.bind(Effect.bindEffect)(Data_JSDate.now)(Data_JSDate.getTimezoneOffset)();
          var ms = ms$prime - v * 60.0 * 1000.0;
          var d = Data_JSDate.fromTime(ms);
          var day = datePart(Data_JSDate.getUTCDate(d));
          var month = datePart(Data_JSDate.getUTCMonth(d) + 1.0);
          var year = datePart(Data_JSDate.getUTCFullYear(d));
          var hours = datePart(Data_JSDate.getUTCHours(d));
          var minutes = datePart(Data_JSDate.getUTCMinutes(d));
          var seconds = datePart(Data_JSDate.getUTCSeconds(d));
          return day + ("." + (month + ("." + (year + (" " + (hours + (":" + (minutes + (":" + seconds)))))))));
      };
  };
  exports["dateTime"] = dateTime;
  exports["duration"] = duration;
  exports["formatNum"] = $foreign.formatNum;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.2
  "use strict";
  $PS["Errors"] = $PS["Errors"] || {};
  var exports = $PS["Errors"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Data_Array = $PS["Data.Array"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var DomOps = $PS["DomOps"];
  var Effect = $PS["Effect"];
  var FormatOps = $PS["FormatOps"];
  var Global = $PS["Global"];
  var React = $PS["React"];
  var React_DOM = $PS["React.DOM"];
  var React_DOM_Props = $PS["React.DOM.Props"];                
  var errorReactClass = (function () {
      var render = function ($$this) {
          var shortStack = React.modifyState($$this)(function (v) {
              return {
                  expandStack: false
              };
          });
          var fullStack = React.modifyState($$this)(function (v) {
              return {
                  expandStack: true
              };
          });
          return function __do() {
              var v = React.getState($$this)();
              var v1 = React.getProps($$this)();
              var v2 = FormatOps.dateTime(Global.readInt(10)(v1.err.time))();
              var nocause = v1.err.toptrace === "--";
              return React_DOM["tr'"](Data_Semigroup.append(Data_Semigroup.semigroupArray)((function () {
                  if (v1.showAddr) {
                      return [ React_DOM.td([ DomOps.cn("align-top") ])([ React_DOM.text(v1.err.addr) ]) ];
                  };
                  return [  ];
              })())(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ React_DOM.td([ DomOps.cn("align-top") ])([ React_DOM.text(v2) ]), React_DOM.td([ DomOps.cn("align-top"), React_DOM_Props.style({
                  width: "40%"
              }), React_DOM_Props.colSpan((function () {
                  if (nocause) {
                      return 2;
                  };
                  return 1;
              })()) ])(Data_Functor.map(Data_Functor.functorArray)(function (y) {
                  return React_DOM.div([ React_DOM_Props.style({
                      wordBreak: "break-all"
                  }) ])([ React_DOM.text(y) ]);
              })(v1.err.exception)) ])((function () {
                  if (nocause) {
                      return [  ];
                  };
                  return Data_Array.singleton((function () {
                      if (!v.expandStack) {
                          return React_DOM.td([ DomOps.cn("align-top"), React_DOM_Props.onClick(function (v3) {
                              return fullStack;
                          }), React_DOM_Props.style({
                              cursor: "zoom-in",
                              fontFamily: "Fira Code",
                              wordBreak: "break-all"
                          }) ])([ React_DOM.text(v1.err.toptrace) ]);
                      };
                      if (v.expandStack) {
                          return React_DOM.td([ DomOps.cn("align-top"), React_DOM_Props.onClick(function (v3) {
                              return shortStack;
                          }), React_DOM_Props.style({
                              cursor: "zoom-out"
                          }) ])([ React_DOM.div([ React_DOM_Props.style({
                              fontFamily: "Fira Code",
                              wordBreak: "break-all"
                          }) ])(Data_Functor.map(Data_Functor.functorArray)(function (y) {
                              return React_DOM["div'"]([ React_DOM.text(y) ]);
                          })(v1.err.stacktrace)) ]);
                      };
                      throw new Error("Failed pattern match at Errors (line 90, column 11 - line 98, column 16): " + [ v.expandStack.constructor.name ]);
                  })());
              })())));
          };
      };
      return React.component(React.reactComponentSpec()())("Error")(function ($$this) {
          return Control_Applicative.pure(Effect.applicativeEffect)({
              state: {
                  expandStack: false
              },
              render: render($$this)
          });
      });
  })();
  var reactClass = (function () {
      var render = function ($$this) {
          return function __do() {
              var v = React.getProps($$this)();
              return React_DOM.div([ DomOps.cn("row") ])([ React_DOM.div([ DomOps.cn("col-md-12") ])([ React_DOM.div([ DomOps.cn("card") ])([ React_DOM.div([ DomOps.cn("card-header") ])([ React_DOM.h4([ DomOps.cn("card-title") ])([ React_DOM.text("Errors") ]) ]), React_DOM.div([ DomOps.cn("card-body") ])([ React_DOM.div([ DomOps.cn("table-responsive") ])([ React_DOM.table([ DomOps.cn("table tablesorter") ])([ React_DOM.thead([ DomOps.cn("text-primary") ])([ React_DOM["tr'"](Data_Semigroup.append(Data_Semigroup.semigroupArray)((function () {
                  if (v.showAddr) {
                      return [ React_DOM["th'"]([ React_DOM.text("Address") ]) ];
                  };
                  return [  ];
              })())([ React_DOM["th'"]([ React_DOM.text("Time") ]), React_DOM["th'"]([ React_DOM.text("Exception") ]), React_DOM["th'"]([ React_DOM.text("Stacktrace") ]) ])) ]), React_DOM["tbody'"](Data_Functor.map(Data_Functor.functorArray)(function (x) {
                  return React.createLeafElement(React.reactPropFields()())(errorReactClass)({
                      err: x,
                      showAddr: v.showAddr
                  });
              })(v.errors)) ]) ]) ]) ]) ]) ]);
          };
      };
      return React.component(React.reactComponentSpec()())("Errors")(function ($$this) {
          return Control_Applicative.pure(Effect.applicativeEffect)({
              state: {},
              render: render($$this)
          });
      });
  })();
  exports["reactClass"] = reactClass;
})(PS);
(function(exports) {
  "use strict";

  exports.unsafeFromForeign = function (value) {
    return value;
  };

  exports.tagOf = function (value) {
    return Object.prototype.toString.call(value).slice(8, -1);
  };
})(PS["Foreign"] = PS["Foreign"] || {});
(function($PS) {
  // Generated by purs version 0.13.2
  "use strict";
  $PS["Foreign"] = $PS["Foreign"] || {};
  var exports = $PS["Foreign"];
  var $foreign = $PS["Foreign"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Monad_Error_Class = $PS["Control.Monad.Error.Class"];
  var Control_Monad_Except_Trans = $PS["Control.Monad.Except.Trans"];
  var Data_Boolean = $PS["Data.Boolean"];
  var Data_Identity = $PS["Data.Identity"];
  var Data_List_NonEmpty = $PS["Data.List.NonEmpty"];
  var Data_Show = $PS["Data.Show"];                                        
  var ForeignError = (function () {
      function ForeignError(value0) {
          this.value0 = value0;
      };
      ForeignError.create = function (value0) {
          return new ForeignError(value0);
      };
      return ForeignError;
  })();
  var TypeMismatch = (function () {
      function TypeMismatch(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      TypeMismatch.create = function (value0) {
          return function (value1) {
              return new TypeMismatch(value0, value1);
          };
      };
      return TypeMismatch;
  })();
  var ErrorAtIndex = (function () {
      function ErrorAtIndex(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      ErrorAtIndex.create = function (value0) {
          return function (value1) {
              return new ErrorAtIndex(value0, value1);
          };
      };
      return ErrorAtIndex;
  })();
  var ErrorAtProperty = (function () {
      function ErrorAtProperty(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      ErrorAtProperty.create = function (value0) {
          return function (value1) {
              return new ErrorAtProperty(value0, value1);
          };
      };
      return ErrorAtProperty;
  })();
  var renderForeignError = function (v) {
      if (v instanceof ForeignError) {
          return v.value0;
      };
      if (v instanceof ErrorAtIndex) {
          return "Error at array index " + (Data_Show.show(Data_Show.showInt)(v.value0) + (": " + renderForeignError(v.value1)));
      };
      if (v instanceof ErrorAtProperty) {
          return "Error at property " + (Data_Show.show(Data_Show.showString)(v.value0) + (": " + renderForeignError(v.value1)));
      };
      if (v instanceof TypeMismatch) {
          return "Type mismatch: expected " + (v.value0 + (", found " + v.value1));
      };
      throw new Error("Failed pattern match at Foreign (line 72, column 1 - line 72, column 45): " + [ v.constructor.name ]);
  };
  var fail = (function () {
      var $107 = Control_Monad_Error_Class.throwError(Control_Monad_Except_Trans.monadThrowExceptT(Data_Identity.monadIdentity));
      return function ($108) {
          return $107(Data_List_NonEmpty.singleton($108));
      };
  })();
  var unsafeReadTagged = function (tag) {
      return function (value) {
          if ($foreign.tagOf(value) === tag) {
              return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))($foreign.unsafeFromForeign(value));
          };
          if (Data_Boolean.otherwise) {
              return fail(new TypeMismatch(tag, $foreign.tagOf(value)));
          };
          throw new Error("Failed pattern match at Foreign (line 106, column 1 - line 106, column 55): " + [ tag.constructor.name, value.constructor.name ]);
      };
  };
  exports["ForeignError"] = ForeignError;
  exports["TypeMismatch"] = TypeMismatch;
  exports["ErrorAtIndex"] = ErrorAtIndex;
  exports["ErrorAtProperty"] = ErrorAtProperty;
  exports["renderForeignError"] = renderForeignError;
  exports["unsafeReadTagged"] = unsafeReadTagged;
  exports["fail"] = fail;
})(PS);
(function(exports) {
  "use strict"

  exports.destroyChart = function(chart) {
    return function() {
      chart.destroy()
    }
  }

  exports.updateChart = function(chart) {
    return function(values) {
      return function() {
        chart.config.data.datasets[0].data = values.points
        chart.config.data.datasets[0].customLabels = values.labels
        chart.update()
      }
    }
  }

  exports.createChart = function(ref) {
    return function(values) {
      return function() {
        const ctx = ref.current.getContext('2d')

        const gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);
        gradientStroke.addColorStop(1, 'rgba(29,140,248,0.2)');
        gradientStroke.addColorStop(0.4, 'rgba(29,140,248,0.0)');
        gradientStroke.addColorStop(0, 'rgba(29,140,248,0)'); //blue colors

        return new Chart(ctx, {
          type: 'line',
          responsive: true,
          legend: {
            display: false
          },
          data: {
            labels: values.points.map(function() { return '' }),
            datasets: [{
              fill: true,
              borderColor: '#1f8ef1',
              borderWidth: 2,
              borderDash: [],
              borderDashOffset: 0.0,
              data: values.points,
              customLabels: values.labels,
              pointBackgroundColor: '#1f8ef1',
              pointBorderColor: 'rgba(255,255,255,0)',
              pointBorderWidth: 20,
              pointHoverBackgroundColor: '#1f8ef1',
              pointHoverBorderWidth: 15,
              pointHoverRadius: 4,
              pointRadius: 4,
            }]
          },
          options: {
            maintainAspectRatio: false,
            legend: {
              display: false
            },
            tooltips: {
              backgroundColor: '#f5f5f5',
              titleFontColor: '#333',
              bodyFontColor: '#666',
              bodySpacing: 4,
              xPadding: 12,
              mode: "nearest",
              intersect: 0,
              position: "nearest",
              callbacks: {
                title: function(items, data) { return data.datasets[0].customLabels[items[0].index] },
                label: function(item, data) { return item.yLabel+" ms" },
              },
            },
            responsive: true,
            scales: {
              yAxes: [{
                id: 'left-y-axis',
                position: 'left',
                barPercentage: 1.6,
                gridLines: {
                  drawBorder: false,
                  color: 'rgba(29,140,248,0.0)',
                  zeroLineColor: "transparent",
                },
                ticks: {
                  fontColor: "#9a9a9a",
                  callback: function(value) { return value+" ms" },
                  min: 0,
                }
              }],
              xAxes: [{
                display: false,
              }]
            }
          }
        })
      }
    }
  }
})(PS["MeasureChart"] = PS["MeasureChart"] || {});
(function($PS) {
  // Generated by purs version 0.13.2
  "use strict";
  $PS["MeasureChart"] = $PS["MeasureChart"] || {};
  var exports = $PS["MeasureChart"];
  var $foreign = $PS["MeasureChart"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Effect = $PS["Effect"];
  var Effect_Console = $PS["Effect.Console"];
  var Effect_Ref = $PS["Effect.Ref"];
  var React = $PS["React"];
  var React_DOM = $PS["React.DOM"];
  var ReactOps = $PS["ReactOps"];                
  var reactClass = React.component(React.reactComponentSpec()())("MeasureChart")(function ($$this) {
      return function __do() {
          var v = React.getProps($$this)();
          var v1 = Effect_Ref["new"](Data_Maybe.Nothing.value)();
          return {
              state: {},
              render: Control_Applicative.pure(Effect.applicativeEffect)(React_DOM.canvas([ ReactOps["ref'"](ReactOps.createRef) ])([  ])),
              componentDidMount: function __do() {
                  var v2 = Effect_Ref.read(v1)();
                  if (v2 instanceof Data_Maybe.Just) {
                      return Effect_Console.error("chart already exists")();
                  };
                  if (v2 instanceof Data_Maybe.Nothing) {
                      var v3 = $foreign.createChart(ReactOps.createRef)(v)();
                      return Effect_Ref.write(new Data_Maybe.Just(v3))(v1)();
                  };
                  throw new Error("Failed pattern match at MeasureChart (line 30, column 9 - line 34, column 36): " + [ v2.constructor.name ]);
              },
              componentDidUpdate: function (p) {
                  return function (v2) {
                      return function (v3) {
                          return function __do() {
                              var v4 = Effect_Ref.read(v1)();
                              if (v4 instanceof Data_Maybe.Just) {
                                  return $foreign.updateChart(v4.value0)(p)();
                              };
                              if (v4 instanceof Data_Maybe.Nothing) {
                                  return Effect_Console.error("chart doesn't exists")();
                              };
                              throw new Error("Failed pattern match at MeasureChart (line 37, column 9 - line 39, column 50): " + [ v4.constructor.name ]);
                          };
                      };
                  };
              },
              componentWillUnmount: function __do() {
                  var v2 = Effect_Ref.read(v1)();
                  if (v2 instanceof Data_Maybe.Just) {
                      $foreign.destroyChart(v2.value0)();
                      return Effect_Ref.write(Data_Maybe.Nothing.value)(v1)();
                  };
                  if (v2 instanceof Data_Maybe.Nothing) {
                      return Effect_Console.error("chart doesn't exists")();
                  };
                  throw new Error("Failed pattern match at MeasureChart (line 42, column 9 - line 46, column 50): " + [ v2.constructor.name ]);
              }
          };
      };
  });
  exports["reactClass"] = reactClass;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.2
  "use strict";
  $PS["Schema"] = $PS["Schema"] || {};
  var exports = $PS["Schema"];
  var Data_Eq = $PS["Data.Eq"];                
  var TsReindex = (function () {
      function TsReindex() {

      };
      TsReindex.value = new TsReindex();
      return TsReindex;
  })();
  var WcReindex = (function () {
      function WcReindex() {

      };
      WcReindex.value = new WcReindex();
      return WcReindex;
  })();
  var FilesReindex = (function () {
      function FilesReindex() {

      };
      FilesReindex.value = new FilesReindex();
      return FilesReindex;
  })();
  var Live = (function () {
      function Live() {

      };
      Live.value = new Live();
      return Live;
  })();
  var Hour = (function () {
      function Hour() {

      };
      Hour.value = new Hour();
      return Hour;
  })();
  var eqReindexChart = new Data_Eq.Eq(function (x) {
      return function (y) {
          if (x instanceof TsReindex && y instanceof TsReindex) {
              return true;
          };
          if (x instanceof WcReindex && y instanceof WcReindex) {
              return true;
          };
          if (x instanceof FilesReindex && y instanceof FilesReindex) {
              return true;
          };
          return false;
      };
  });
  var eqChartRange = new Data_Eq.Eq(function (x) {
      return function (y) {
          if (x instanceof Live && y instanceof Live) {
              return true;
          };
          if (x instanceof Hour && y instanceof Hour) {
              return true;
          };
          return false;
      };
  });
  exports["Live"] = Live;
  exports["Hour"] = Hour;
  exports["TsReindex"] = TsReindex;
  exports["WcReindex"] = WcReindex;
  exports["FilesReindex"] = FilesReindex;
  exports["eqChartRange"] = eqChartRange;
  exports["eqReindexChart"] = eqReindexChart;
})(PS);
(function(exports) {
  "use strict"

  exports.destroyChart = function(chart) {
    return function() {
      chart.destroy()
    }
  }

  exports.updateChart = function(chart) {
    return function(values) {
      return function() {
        chart.config.data.datasets[0].data = values.points
        chart.update()
      }
    }
  }

  exports.createChart = function(ref) {
    return function(values) {
      return function() {
        const ctx = ref.current.getContext('2d')
      
        const purpleBg = ctx.createLinearGradient(0, 230, 0, 50)
        purpleBg.addColorStop(1, 'rgba(72,72,176,0.1)')
        purpleBg.addColorStop(0.4, 'rgba(72,72,176,0.0)')
        purpleBg.addColorStop(0, 'rgba(119,52,169,0)')
      
        return new Chart(ctx, {
          type: 'line',
          data: {
            datasets: [{
              backgroundColor: purpleBg,
              borderColor: '#d346b1',
              borderDash: [],
              borderDashOffset: 0.0,
              borderWidth: 2,
              cubicInterpolationMode: 'monotone',
              data: values.points,
              fill: true,
              pointBackgroundColor: '#d346b1',
              pointBorderColor: 'rgba(255,255,255,0)',
              pointBorderWidth: 20,
              pointHoverBackgroundColor: '#d346b1',
              pointHoverBorderWidth: 15,
              pointHoverRadius: 4,
              pointRadius: 4,
              yAxisID: 'left-y-axis'
            }]
          },
          options: {
            maintainAspectRatio: false,
            legend: {
              display: false
            },
            tooltips: {
              backgroundColor: '#f5f5f5',
              titleFontColor: '#333',
              bodyFontColor: '#666',
              bodySpacing: 4,
              xPadding: 12,
              mode: "nearest",
              position: "nearest",
              callbacks: {
                label: function(item, data) {
                  return item.yLabel + values.label
                },
              },
            },
            responsive: true,
            scales: {
              yAxes: [{
                id: 'left-y-axis',
                position: 'left',
                barPercentage: 1.6,
                gridLines: {
                  drawBorder: false,
                  color: 'rgba(29,140,248,0.0)',
                  zeroLineColor: "transparent",
                },
                ticks: {
                  fontColor: "#9a9a9a",
                  callback: function(value) { return value+" "+values.label },
                  min: 0,
                }
              }],
              xAxes: [{
                type: 'time',
                time: {
                  tooltipFormat: "MMM YYYY",
                  unit: 'month'
                },
                barPercentage: 1.6,
                gridLines: {
                  drawBorder: false,
                  color: 'rgba(225,78,202,0.1)',
                  zeroLineColor: "transparent",
                },
                ticks: {
                  fontColor: "#9a9a9a"
                }
              }]
            }
          }
        })
      }
    }
  }
})(PS["YearChart"] = PS["YearChart"] || {});
(function($PS) {
  // Generated by purs version 0.13.2
  "use strict";
  $PS["YearChart"] = $PS["YearChart"] || {};
  var exports = $PS["YearChart"];
  var $foreign = $PS["YearChart"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Effect = $PS["Effect"];
  var Effect_Console = $PS["Effect.Console"];
  var Effect_Ref = $PS["Effect.Ref"];
  var React = $PS["React"];
  var React_DOM = $PS["React.DOM"];
  var ReactOps = $PS["ReactOps"];                
  var reactClass = React.component(React.reactComponentSpec()())("YearChart")(function ($$this) {
      return function __do() {
          var v = React.getProps($$this)();
          var v1 = Effect_Ref["new"](Data_Maybe.Nothing.value)();
          return {
              state: {},
              render: Control_Applicative.pure(Effect.applicativeEffect)(React_DOM.canvas([ ReactOps["ref'"](ReactOps.createRef) ])([  ])),
              componentDidMount: function __do() {
                  var v2 = Effect_Ref.read(v1)();
                  if (v2 instanceof Data_Maybe.Just) {
                      return Effect_Console.error("chart already exists")();
                  };
                  if (v2 instanceof Data_Maybe.Nothing) {
                      var v3 = $foreign.createChart(ReactOps.createRef)(v)();
                      return Effect_Ref.write(new Data_Maybe.Just(v3))(v1)();
                  };
                  throw new Error("Failed pattern match at YearChart (line 31, column 9 - line 35, column 36): " + [ v2.constructor.name ]);
              },
              componentDidUpdate: function (p) {
                  return function (v2) {
                      return function (v3) {
                          return function __do() {
                              var v4 = Effect_Ref.read(v1)();
                              if (v4 instanceof Data_Maybe.Just) {
                                  return $foreign.updateChart(v4.value0)(p)();
                              };
                              if (v4 instanceof Data_Maybe.Nothing) {
                                  return Effect_Console.error("chart doesn't exists")();
                              };
                              throw new Error("Failed pattern match at YearChart (line 38, column 9 - line 40, column 50): " + [ v4.constructor.name ]);
                          };
                      };
                  };
              },
              componentWillUnmount: function __do() {
                  var v2 = Effect_Ref.read(v1)();
                  if (v2 instanceof Data_Maybe.Just) {
                      $foreign.destroyChart(v2.value0)();
                      return Effect_Ref.write(Data_Maybe.Nothing.value)(v1)();
                  };
                  if (v2 instanceof Data_Maybe.Nothing) {
                      return Effect_Console.error("chart doesn't exists")();
                  };
                  throw new Error("Failed pattern match at YearChart (line 43, column 9 - line 47, column 50): " + [ v2.constructor.name ]);
              }
          };
      };
  });
  exports["reactClass"] = reactClass;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.2
  "use strict";
  $PS["Node"] = $PS["Node"] || {};
  var exports = $PS["Node"];
  var BarChart = $PS["BarChart"];
  var BigChart = $PS["BigChart"];
  var CpuChart = $PS["CpuChart"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var DomOps = $PS["DomOps"];
  var Errors = $PS["Errors"];
  var FormatOps = $PS["FormatOps"];
  var MeasureChart = $PS["MeasureChart"];
  var React = $PS["React"];
  var React_DOM = $PS["React.DOM"];
  var React_DOM_Props = $PS["React.DOM.Props"];
  var Schema = $PS["Schema"];
  var YearChart = $PS["YearChart"];                
  var reactClass = (function () {
      var card = function (title) {
          return function (xs) {
              return function (ys) {
                  return React_DOM.div([ DomOps.cn("col-lg-6 col-md-12") ])([ React_DOM.div([ DomOps.cn("card") ])([ React_DOM.div([ DomOps.cn("card-header") ])([ React_DOM.h4([ DomOps.cn("card-title") ])([ React_DOM.text(title) ]) ]), React_DOM.div([ DomOps.cn("card-body") ])([ React_DOM.div([ DomOps.cn("table-responsive") ])([ React_DOM.table([ DomOps.cn("table tablesorter") ])([ React_DOM.thead([ DomOps.cn("text-primary") ])([ React_DOM["tr'"](xs) ]), React_DOM["tbody'"](ys) ]) ]) ]) ]) ]);
              };
          };
      };
      var fdCard = function (x) {
          return card("File Descriptors")([ React_DOM["th'"]([ React_DOM.text("") ]), React_DOM["th'"]([ React_DOM.text("Count") ]) ])([ React_DOM["tr'"]([ React_DOM["td'"]([ React_DOM.text("Open") ]), React_DOM.td([ React_DOM_Props.style({
              fontFamily: "Fira Code"
          }) ])([ React_DOM.text(FormatOps.formatNum(x.open)) ]) ]), React_DOM["tr'"]([ React_DOM["td'"]([ React_DOM.text("Max") ]), React_DOM.td([ React_DOM_Props.style({
              fontFamily: "Fira Code"
          }) ])([ React_DOM.text(FormatOps.formatNum(x.max)) ]) ]) ]);
      };
      var fsCard = function (x) {
          return card("File System")([ React_DOM["th'"]([ React_DOM.text("") ]), React_DOM["th'"]([ React_DOM.text("Megabytes") ]) ])([ React_DOM["tr'"]([ React_DOM["td'"]([ React_DOM.text("Used") ]), React_DOM.td([ React_DOM_Props.style({
              fontFamily: "Fira Code"
          }) ])([ React_DOM.text(FormatOps.formatNum(x.used)) ]) ]), React_DOM["tr'"]([ React_DOM["td'"]([ React_DOM.text("Usable") ]), React_DOM.td([ React_DOM_Props.style({
              fontFamily: "Fira Code"
          }) ])([ React_DOM.text(FormatOps.formatNum(x.usable)) ]) ]), React_DOM["tr'"]([ React_DOM["td'"]([ React_DOM.text("Total") ]), React_DOM.td([ React_DOM_Props.style({
              fontFamily: "Fira Code"
          }) ])([ React_DOM.text(FormatOps.formatNum(x.total)) ]) ]) ]);
      };
      var othCard = function (p) {
          var uptime = Data_Functor.map(Data_Maybe.functorMaybe)(FormatOps.duration)(p.uptime);
          return card("Other Metrics")([ React_DOM["th'"]([ React_DOM.text("Name") ]), React_DOM.th([ DomOps.cn("text-right") ])([ React_DOM.text("Value") ]), React_DOM["th'"]([ React_DOM.text("Unit") ]) ])([ React_DOM["tr'"]([ React_DOM["td'"]([ React_DOM.text("Uptime") ]), React_DOM.td([ DomOps.cn("text-right"), React_DOM_Props.style({
              fontFamily: "Fira Code"
          }) ])([ React_DOM.text(Data_Maybe.fromMaybe("--")(Data_Functor.map(Data_Maybe.functorMaybe)(function (v) {
              return v.value;
          })(uptime))) ]), React_DOM["td'"]([ React_DOM.text(Data_Maybe.fromMaybe("--")(Data_Functor.map(Data_Maybe.functorMaybe)(function (v) {
              return v.unit;
          })(uptime))) ]) ]), React_DOM["tr'"]([ React_DOM["td'"]([ React_DOM.text("CPU Load") ]), React_DOM.td([ DomOps.cn("text-right"), React_DOM_Props.style({
              fontFamily: "Fira Code"
          }) ])([ React_DOM.text(Data_Maybe.fromMaybe("--")(p.cpuLast)) ]), React_DOM["td'"]([ React_DOM.text("%") ]) ]), React_DOM["tr'"]([ React_DOM["td'"]([ React_DOM.text("Memory: Used") ]), React_DOM.td([ DomOps.cn("text-right"), React_DOM_Props.style({
              fontFamily: "Fira Code"
          }) ])([ React_DOM.text(Data_Maybe.fromMaybe("--")(Data_Functor.map(Data_Maybe.functorMaybe)(FormatOps.formatNum)(p.memLast))) ]), React_DOM["td'"]([ React_DOM.text("MB") ]) ]), React_DOM["tr'"]([ React_DOM["td'"]([ React_DOM.text("Memory: Free") ]), React_DOM.td([ DomOps.cn("text-right"), React_DOM_Props.style({
              fontFamily: "Fira Code"
          }) ])([ React_DOM.text(Data_Maybe.fromMaybe("--")(Data_Functor.map(Data_Maybe.functorMaybe)(FormatOps.formatNum)(p.memFree))) ]), React_DOM["td'"]([ React_DOM.text("MB") ]) ]), React_DOM["tr'"]([ React_DOM["td'"]([ React_DOM.text("Memory: Total") ]), React_DOM.td([ DomOps.cn("text-right"), React_DOM_Props.style({
              fontFamily: "Fira Code"
          }) ])([ React_DOM.text(Data_Maybe.fromMaybe("--")(Data_Functor.map(Data_Maybe.functorMaybe)(FormatOps.formatNum)(p.memTotal))) ]), React_DOM["td'"]([ React_DOM.text("MB") ]) ]), React_DOM["tr'"]([ React_DOM["td'"]([ React_DOM.text("Version") ]), React_DOM.td([ DomOps.cn("text-center"), React_DOM_Props.style({
              fontFamily: "Fira Code"
          }), React_DOM_Props.colSpan(2) ])([ React_DOM.text(Data_Maybe.fromMaybe("--")(p.version)) ]) ]) ]);
      };
      var thrCard = function (x) {
          return card("Threads")([ React_DOM["th'"]([ React_DOM.text("") ]), React_DOM["th'"]([ React_DOM.text("Count") ]) ])([ React_DOM["tr'"]([ React_DOM["td'"]([ React_DOM.text("All") ]), React_DOM.td([ React_DOM_Props.style({
              fontFamily: "Fira Code"
          }) ])([ React_DOM.text(FormatOps.formatNum(x.all)) ]) ]), React_DOM["tr'"]([ React_DOM["td'"]([ React_DOM.text("Non-daemon") ]), React_DOM.td([ React_DOM_Props.style({
              fontFamily: "Fira Code"
          }) ])([ React_DOM.text(FormatOps.formatNum(x.nondaemon)) ]) ]), React_DOM["tr'"]([ React_DOM["td'"]([ React_DOM.text("Daemon") ]), React_DOM.td([ React_DOM_Props.style({
              fontFamily: "Fira Code"
          }) ])([ React_DOM.text(FormatOps.formatNum(x.daemon)) ]) ]), React_DOM["tr'"]([ React_DOM["td'"]([ React_DOM.text("Peak") ]), React_DOM.td([ React_DOM_Props.style({
              fontFamily: "Fira Code"
          }) ])([ React_DOM.text(FormatOps.formatNum(x.peak)) ]) ]), React_DOM["tr'"]([ React_DOM["td'"]([ React_DOM.text("Total") ]), React_DOM.td([ React_DOM_Props.style({
              fontFamily: "Fira Code"
          }) ])([ React_DOM.text(FormatOps.formatNum(x.total)) ]) ]) ]);
      };
      var barChart = function (title) {
          return function (thirdQ) {
              return function (values) {
                  return React_DOM.div([ DomOps.cn("col-lg-3 col-md-12") ])([ React_DOM.div([ DomOps.cn("card card-chart") ])([ React_DOM.div([ DomOps.cn("card-header") ])([ React_DOM.h5([ DomOps.cn("card-category") ])([ React_DOM.text(title) ]), React_DOM.h3([ DomOps.cn("card-title") ])([ React_DOM.i([ DomOps.cn("tim-icons icon-user-run text-info") ])([  ]), React_DOM.text(Data_Maybe.fromMaybe("--")(Data_Functor.map(Data_Maybe.functorMaybe)(function (v) {
                      return v + " ms";
                  })(thirdQ))) ]) ]), React_DOM.div([ DomOps.cn("card-body") ])([ React_DOM.div([ DomOps.cn("chart-area") ])([ React.createLeafElement(React.reactPropFields()())(BarChart.reactClass)({
                      points: Data_Functor.map(Data_Functor.functorArray)(function (v) {
                          return v.y;
                      })(values),
                      labels: Data_Functor.map(Data_Functor.functorArray)(function (v) {
                          return v.t;
                      })(values)
                  }) ]) ]) ]) ]);
              };
          };
      };
      var render = function ($$this) {
          return function __do() {
              var v = React.getProps($$this)();
              var v1 = React.getState($$this)();
              return React_DOM["div'"]([ React_DOM.div([ DomOps.cn("row") ])([ React_DOM.div([ DomOps.cn("col-12") ])([ React_DOM.div([ DomOps.cn("card card-chart") ])([ React_DOM.div([ DomOps.cn("card-header") ])([ React_DOM.div([ DomOps.cn("row") ])([ React_DOM.div([ DomOps.cn("col-7 col-sm-6 text-left") ])([ React_DOM.h5([ DomOps.cn("card-category") ])([ React_DOM.text("Performance") ]), React_DOM.h2([ DomOps.cn("card-title") ])([ React_DOM.i([ DomOps.cn("tim-icons icon-spaceship text-primary") ])([  ]), React_DOM.text(" " + (Data_Maybe.fromMaybe("--")(v.cpuLast) + ("% / " + (Data_Maybe.fromMaybe("--")(Data_Functor.map(Data_Maybe.functorMaybe)(FormatOps.formatNum)(v.memLast)) + " MB")))) ]) ]), React_DOM.div([ DomOps.cn("col-5 col-sm-6") ])([ React_DOM.div([ DomOps.cn("btn-group btn-group-toggle float-right") ])([ React_DOM.label([ DomOps.cn("btn btn-sm btn-primary btn-simple" + (function () {
                  var $28 = Data_Eq.eq(Schema.eqChartRange)(v1.bigChartRange)(Schema.Live.value);
                  if ($28) {
                      return " active";
                  };
                  return "";
              })()), React_DOM_Props.onClick(function (v2) {
                  return React.modifyState($$this)(function (v3) {
                      return {
                          bigChartRange: Schema.Live.value,
                          reindexChart: v3.reindexChart
                      };
                  });
              }) ])([ React_DOM.span([ DomOps.cn("d-none d-sm-block d-md-block d-lg-block d-xl-block") ])([ React_DOM.text("Live") ]), React_DOM.span([ DomOps.cn("d-block d-sm-none") ])([ React_DOM.text("L") ]) ]), React_DOM.label([ DomOps.cn("btn btn-sm btn-primary btn-simple" + (function () {
                  var $29 = Data_Eq.eq(Schema.eqChartRange)(v1.bigChartRange)(Schema.Hour.value);
                  if ($29) {
                      return " active";
                  };
                  return "";
              })()), React_DOM_Props.onClick(function (v2) {
                  return React.modifyState($$this)(function (v3) {
                      return {
                          bigChartRange: Schema.Hour.value,
                          reindexChart: v3.reindexChart
                      };
                  });
              }) ])([ React_DOM.span([ DomOps.cn("d-none d-sm-block d-md-block d-lg-block d-xl-block") ])([ React_DOM.text("Hour") ]), React_DOM.span([ DomOps.cn("d-block d-sm-none") ])([ React_DOM.text("H") ]) ]) ]) ]) ]) ]), React_DOM.div([ DomOps.cn("card-body") ])([ React_DOM.div([ DomOps.cn("chart-area" + (function () {
                  var $30 = Data_Eq.eq(Schema.eqChartRange)(v1.bigChartRange)(Schema.Live.value);
                  if ($30) {
                      return "";
                  };
                  return " d-none";
              })()) ])([ React.createLeafElement(React.reactPropFields()())(BigChart.reactClass)({
                  cpuPoints: v.cpuPoints,
                  memPoints: v.memPoints,
                  actPoints: Data_Functor.map(Data_Functor.functorArray)(function (x) {
                      return {
                          t: x.t,
                          y: 0.0
                      };
                  })(v.actPoints),
                  actLabels: Data_Functor.map(Data_Functor.functorArray)(function (v2) {
                      return v2.label;
                  })(v.actPoints)
              }) ]), React_DOM.div([ DomOps.cn("chart-area" + (function () {
                  var $31 = Data_Eq.eq(Schema.eqChartRange)(v1.bigChartRange)(Schema.Hour.value);
                  if ($31) {
                      return "";
                  };
                  return " d-none";
              })()) ])([ React.createLeafElement(React.reactPropFields()())(CpuChart.reactClass)({
                  cpuPoints: v.cpuHourPoints
              }) ]) ]) ]) ]) ]), React_DOM.div([ DomOps.cn("row") ])([ barChart("Translations: Search")(v.searchTs_thirdQ)(v.searchTs_points), barChart("Web Contents: Search")(v.searchWc_thirdQ)(v.searchWc_points), barChart("Static: Creation")(v.staticCreate_thirdQ)(v.staticCreate_points), barChart("Static: Generation")(v.staticGen_thirdQ)(v.staticGen_points) ]), (function () {
                  var thirdQ = (function () {
                      if (v1.reindexChart instanceof Schema.TsReindex) {
                          return v.reindexTs_thirdQ;
                      };
                      if (v1.reindexChart instanceof Schema.WcReindex) {
                          return v.reindexWc_thirdQ;
                      };
                      if (v1.reindexChart instanceof Schema.FilesReindex) {
                          return v.reindexFiles_thirdQ;
                      };
                      throw new Error("Failed pattern match at Node (line 89, column 22 - line 92, column 52): " + [ v1.reindexChart.constructor.name ]);
                  })();
                  return React_DOM.div([ DomOps.cn("row") ])([ React_DOM.div([ DomOps.cn("col-12") ])([ React_DOM.div([ DomOps.cn("card card-chart") ])([ React_DOM.div([ DomOps.cn("card-header") ])([ React_DOM.div([ DomOps.cn("row") ])([ React_DOM.div([ DomOps.cn("col-7 col-sm-6 text-left") ])([ React_DOM.h5([ DomOps.cn("card-category") ])([ React_DOM.text("Reindex") ]), React_DOM.h2([ DomOps.cn("card-title") ])([ React_DOM.i([ DomOps.cn("tim-icons icon-user-run text-info") ])([  ]), React_DOM.text(Data_Maybe.fromMaybe("--")(Data_Functor.map(Data_Maybe.functorMaybe)(function (v2) {
                      return v2 + " ms";
                  })(thirdQ))) ]) ]), React_DOM.div([ DomOps.cn("col-5 col-sm-6") ])([ React_DOM.div([ DomOps.cn("btn-group btn-group-toggle float-right") ])([ React_DOM.label([ DomOps.cn("btn btn-sm btn-primary btn-simple" + (function () {
                      var $33 = Data_Eq.eq(Schema.eqReindexChart)(v1.reindexChart)(Schema.TsReindex.value);
                      if ($33) {
                          return " active";
                      };
                      return "";
                  })()), React_DOM_Props.onClick(function (v2) {
                      return React.modifyState($$this)(function (v3) {
                          return {
                              bigChartRange: v3.bigChartRange,
                              reindexChart: Schema.TsReindex.value
                          };
                      });
                  }) ])([ React_DOM.span([ DomOps.cn("d-none d-sm-block d-md-block d-lg-block d-xl-block") ])([ React_DOM.text("Traslations") ]), React_DOM.span([ DomOps.cn("d-block d-sm-none") ])([ React_DOM.text("Ts") ]) ]), React_DOM.label([ DomOps.cn("btn btn-sm btn-primary btn-simple" + (function () {
                      var $34 = Data_Eq.eq(Schema.eqReindexChart)(v1.reindexChart)(Schema.WcReindex.value);
                      if ($34) {
                          return " active";
                      };
                      return "";
                  })()), React_DOM_Props.onClick(function (v2) {
                      return React.modifyState($$this)(function (v3) {
                          return {
                              bigChartRange: v3.bigChartRange,
                              reindexChart: Schema.WcReindex.value
                          };
                      });
                  }) ])([ React_DOM.span([ DomOps.cn("d-none d-sm-block d-md-block d-lg-block d-xl-block") ])([ React_DOM.text("Web Contents") ]), React_DOM.span([ DomOps.cn("d-block d-sm-none") ])([ React_DOM.text("Ws") ]) ]), React_DOM.label([ DomOps.cn("btn btn-sm btn-primary btn-simple" + (function () {
                      var $35 = Data_Eq.eq(Schema.eqReindexChart)(v1.reindexChart)(Schema.FilesReindex.value);
                      if ($35) {
                          return " active";
                      };
                      return "";
                  })()), React_DOM_Props.onClick(function (v2) {
                      return React.modifyState($$this)(function (v3) {
                          return {
                              bigChartRange: v3.bigChartRange,
                              reindexChart: Schema.FilesReindex.value
                          };
                      });
                  }) ])([ React_DOM.span([ DomOps.cn("d-none d-sm-block d-md-block d-lg-block d-xl-block") ])([ React_DOM.text("Files") ]), React_DOM.span([ DomOps.cn("d-block d-sm-none") ])([ React_DOM.text("Fs") ]) ]) ]) ]) ]) ]), React_DOM.div([ DomOps.cn("card-body") ])([ React_DOM.div([ DomOps.cn("chart-area" + (function () {
                      var $36 = Data_Eq.eq(Schema.eqReindexChart)(v1.reindexChart)(Schema.TsReindex.value);
                      if ($36) {
                          return "";
                      };
                      return " d-none";
                  })()) ])([ React.createLeafElement(React.reactPropFields()())(MeasureChart.reactClass)({
                      points: Data_Functor.map(Data_Functor.functorArray)(function (v2) {
                          return v2.y;
                      })(v.reindexTs_points),
                      labels: Data_Functor.map(Data_Functor.functorArray)(function (v2) {
                          return v2.t;
                      })(v.reindexTs_points)
                  }) ]), React_DOM.div([ DomOps.cn("chart-area" + (function () {
                      var $37 = Data_Eq.eq(Schema.eqReindexChart)(v1.reindexChart)(Schema.WcReindex.value);
                      if ($37) {
                          return "";
                      };
                      return " d-none";
                  })()) ])([ React.createLeafElement(React.reactPropFields()())(MeasureChart.reactClass)({
                      points: Data_Functor.map(Data_Functor.functorArray)(function (v2) {
                          return v2.y;
                      })(v.reindexWc_points),
                      labels: Data_Functor.map(Data_Functor.functorArray)(function (v2) {
                          return v2.t;
                      })(v.reindexWc_points)
                  }) ]), React_DOM.div([ DomOps.cn("chart-area" + (function () {
                      var $38 = Data_Eq.eq(Schema.eqReindexChart)(v1.reindexChart)(Schema.FilesReindex.value);
                      if ($38) {
                          return "";
                      };
                      return " d-none";
                  })()) ])([ React.createLeafElement(React.reactPropFields()())(MeasureChart.reactClass)({
                      points: Data_Functor.map(Data_Functor.functorArray)(function (v2) {
                          return v2.y;
                      })(v.reindexFiles_points),
                      labels: Data_Functor.map(Data_Functor.functorArray)(function (v2) {
                          return v2.t;
                      })(v.reindexFiles_points)
                  }) ]) ]) ]) ]) ]);
              })(), React_DOM.div([ DomOps.cn("row") ])([ React_DOM.div([ DomOps.cn("col-12") ])([ React_DOM.div([ DomOps.cn("card card-chart") ])([ React_DOM.div([ DomOps.cn("card-header") ])([ React_DOM.h5([ DomOps.cn("card-category") ])([ React_DOM.text("Static: Creation") ]) ]), React_DOM.div([ DomOps.cn("card-body") ])([ React_DOM.div([ DomOps.cn("chart-area") ])([ React.createLeafElement(React.reactPropFields()())(YearChart.reactClass)({
                  points: v.staticCreateYear_points,
                  label: "ms"
              }) ]) ]) ]) ]) ]), React_DOM.div([ DomOps.cn("row") ])([ React_DOM.div([ DomOps.cn("col-12") ])([ React_DOM.div([ DomOps.cn("card card-chart") ])([ React_DOM.div([ DomOps.cn("card-header") ])([ React_DOM.h5([ DomOps.cn("card-category") ])([ React_DOM.text("Static: Generation") ]) ]), React_DOM.div([ DomOps.cn("card-body") ])([ React_DOM.div([ DomOps.cn("chart-area") ])([ React.createLeafElement(React.reactPropFields()())(YearChart.reactClass)({
                  points: v.staticGenYear_points,
                  label: "ms"
              }) ]) ]) ]) ]) ]), React_DOM.div([ DomOps.cn("row") ])([ React_DOM.div([ DomOps.cn("col-12") ])([ React_DOM.div([ DomOps.cn("card card-chart") ])([ React_DOM.div([ DomOps.cn("card-header") ])([ React_DOM.h5([ DomOps.cn("card-category") ])([ React_DOM.text("Kvs size") ]) ]), React_DOM.div([ DomOps.cn("card-body") ])([ React_DOM.div([ DomOps.cn("chart-area") ])([ React.createLeafElement(React.reactPropFields()())(YearChart.reactClass)({
                  points: v.kvsSizeYearPoints,
                  label: "mb"
              }) ]) ]) ]) ]) ]), React_DOM.div([ DomOps.cn("row") ])([ Data_Maybe.fromMaybe(React_DOM["div'"]([  ]))(Data_Functor.map(Data_Maybe.functorMaybe)(fsCard)(v.fs)), Data_Maybe.fromMaybe(React_DOM["div'"]([  ]))(Data_Functor.map(Data_Maybe.functorMaybe)(fdCard)(v.fd)) ]), React_DOM.div([ DomOps.cn("row") ])([ Data_Maybe.fromMaybe(React_DOM["div'"]([  ]))(Data_Functor.map(Data_Maybe.functorMaybe)(thrCard)(v.thr)), othCard(v) ]), React.createLeafElement(React.reactPropFields()())(Errors.reactClass)({
                  errors: v.errs,
                  showAddr: false
              }) ]);
          };
      };
      return React.component(React.reactComponentSpec()())("Node")(function ($$this) {
          return function __do() {
              var v = React.getProps($$this)();
              return {
                  state: {
                      bigChartRange: Schema.Live.value,
                      reindexChart: Schema.TsReindex.value
                  },
                  render: render($$this)
              };
          };
      });
  })();
  exports["reactClass"] = reactClass;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.2
  "use strict";
  $PS["Nodes"] = $PS["Nodes"] || {};
  var exports = $PS["Nodes"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Data_Functor = $PS["Data.Functor"];
  var DomOps = $PS["DomOps"];
  var Effect = $PS["Effect"];
  var React = $PS["React"];
  var React_DOM = $PS["React.DOM"];
  var React_DOM_Props = $PS["React.DOM.Props"];                
  var reactClass = (function () {
      var render = function ($$this) {
          return function __do() {
              var v = React.getProps($$this)();
              return React_DOM.div([ DomOps.cn("row") ])([ React_DOM.div([ DomOps.cn("col-md-12") ])([ React_DOM.div([ DomOps.cn("card") ])([ React_DOM.div([ DomOps.cn("card-header") ])([ React_DOM.h4([ DomOps.cn("card-title") ])([ React_DOM.text("Nodes") ]) ]), React_DOM.div([ DomOps.cn("card-body") ])([ React_DOM.div([ DomOps.cn("table-responsive") ])([ React_DOM.table([ DomOps.cn("table tablesorter") ])([ React_DOM.thead([ DomOps.cn("text-primary") ])([ React_DOM["tr'"]([ React_DOM["th'"]([ React_DOM.text("Address") ]), React_DOM["th'"]([ React_DOM.text("Last Update") ]) ]) ]), React_DOM["tbody'"](Data_Functor.map(Data_Functor.functorArray)(function (x) {
                  return React_DOM.tr([ React_DOM_Props.onClick(function (v1) {
                      return v.openNode(x.addr);
                  }), React_DOM_Props.style({
                      cursor: "zoom-in"
                  }) ])([ React_DOM.td([ React_DOM_Props.style({
                      fontFamily: "Fira Code"
                  }) ])([ React_DOM.text(x.addr) ]), React_DOM.td([ React_DOM_Props.style({
                      fontFamily: "Fira Code"
                  }) ])([ React_DOM.text(x.lastUpdate) ]) ]);
              })(v.nodes)) ]) ]) ]) ]) ]) ]);
          };
      };
      return React.component(React.reactComponentSpec()())("Nodes")(function ($$this) {
          return Control_Applicative.pure(Effect.applicativeEffect)({
              state: {},
              render: render($$this)
          });
      });
  })();
  exports["reactClass"] = reactClass;
})(PS);
(function(exports) {
  /* global exports */
  "use strict";
  var ReactDOM =require("react-dom");
  var ReactDOMServer =require("react-dom/server"); 

  exports.renderImpl = function (element, container) {
    return ReactDOM.render(element, container);
  };
})(PS["ReactDOM"] = PS["ReactDOM"] || {});
(function($PS) {
  // Generated by purs version 0.13.2
  "use strict";
  $PS["ReactDOM"] = $PS["ReactDOM"] || {};
  var exports = $PS["ReactDOM"];
  var $foreign = $PS["ReactDOM"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Nullable = $PS["Data.Nullable"];
  var Effect = $PS["Effect"];                                                                  
  var render = function (rEl) {
      return function (el) {
          return Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe)(function () {
              return $foreign.renderImpl(rEl, el);
          });
      };
  };
  exports["render"] = render;
})(PS);
(function(exports) {
  "use strict"

  exports.uint8Array = function(arrayBuffer) {
    return new Uint8Array(arrayBuffer)
  }
})(PS["Ops.ArrayBuffer"] = PS["Ops.ArrayBuffer"] || {});
(function($PS) {
  // Generated by purs version 0.13.2
  "use strict";
  $PS["Ops.ArrayBuffer"] = $PS["Ops.ArrayBuffer"] || {};
  var exports = $PS["Ops.ArrayBuffer"];
  var $foreign = $PS["Ops.ArrayBuffer"];
  exports["uint8Array"] = $foreign.uint8Array;
})(PS);
(function(exports) {
  "use strict";

  exports.eventListener = function (fn) {
    return function () {
      return function (event) {
        return fn(event)();
      };
    };
  };

  exports.addEventListener = function (type) {
    return function (listener) {
      return function (useCapture) {
        return function (target) {
          return function () {
            return target.addEventListener(type, listener, useCapture);
          };
        };
      };
    };
  };
})(PS["Web.Event.EventTarget"] = PS["Web.Event.EventTarget"] || {});
(function($PS) {
  // Generated by purs version 0.13.2
  "use strict";
  $PS["Web.Event.EventTarget"] = $PS["Web.Event.EventTarget"] || {};
  var exports = $PS["Web.Event.EventTarget"];
  var $foreign = $PS["Web.Event.EventTarget"];
  exports["eventListener"] = $foreign.eventListener;
  exports["addEventListener"] = $foreign.addEventListener;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.2
  "use strict";
  $PS["Web.Socket.BinaryType"] = $PS["Web.Socket.BinaryType"] || {};
  var exports = $PS["Web.Socket.BinaryType"];      
  var Blob = (function () {
      function Blob() {

      };
      Blob.value = new Blob();
      return Blob;
  })();
  var $$ArrayBuffer = (function () {
      function $$ArrayBuffer() {

      };
      $$ArrayBuffer.value = new $$ArrayBuffer();
      return $$ArrayBuffer;
  })();
  var printBinaryType = function (v) {
      if (v instanceof Blob) {
          return "blob";
      };
      if (v instanceof $$ArrayBuffer) {
          return "arraybuffer";
      };
      throw new Error("Failed pattern match at Web.Socket.BinaryType (line 46, column 3 - line 48, column 33): " + [ v.constructor.name ]);
  };
  exports["Blob"] = Blob;
  exports["ArrayBuffer"] = $$ArrayBuffer;
  exports["printBinaryType"] = printBinaryType;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.2
  "use strict";
  $PS["Web.Socket.Event.EventTypes"] = $PS["Web.Socket.Event.EventTypes"] || {};
  var exports = $PS["Web.Socket.Event.EventTypes"];
  var onMessage = "message";
  exports["onMessage"] = onMessage;
})(PS);
(function(exports) {
  "use strict";

  exports.data_ = function (e) {
    return e.data;
  };
})(PS["Web.Socket.Event.MessageEvent"] = PS["Web.Socket.Event.MessageEvent"] || {});
(function(exports) {
  "use strict";

  exports._unsafeReadProtoTagged = function (nothing, just, name, value) {
    if (typeof window !== "undefined") {
      var ty = window[name];
      if (ty != null && value instanceof ty) {
        return just(value);
      }
      return nothing;
    } 
    var obj = value;
    while (obj != null) {
      var proto = Object.getPrototypeOf(obj);
      var constructorName = proto.constructor.name;
      if (constructorName === name) {
        return just(value);
      } else if (constructorName === "Object") {
        return nothing;
      }
      obj = proto;
    }
    return nothing;
  };
})(PS["Web.Internal.FFI"] = PS["Web.Internal.FFI"] || {});
(function($PS) {
  // Generated by purs version 0.13.2
  "use strict";
  $PS["Web.Internal.FFI"] = $PS["Web.Internal.FFI"] || {};
  var exports = $PS["Web.Internal.FFI"];
  var $foreign = $PS["Web.Internal.FFI"];
  var Data_Maybe = $PS["Data.Maybe"];                
  var unsafeReadProtoTagged = function (name) {
      return function (value) {
          return $foreign["_unsafeReadProtoTagged"](Data_Maybe.Nothing.value, Data_Maybe.Just.create, name, value);
      };
  };
  exports["unsafeReadProtoTagged"] = unsafeReadProtoTagged;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.2
  "use strict";
  $PS["Web.Socket.Event.MessageEvent"] = $PS["Web.Socket.Event.MessageEvent"] || {};
  var exports = $PS["Web.Socket.Event.MessageEvent"];
  var $foreign = $PS["Web.Socket.Event.MessageEvent"];
  var Web_Internal_FFI = $PS["Web.Internal.FFI"];
  var fromEvent = Web_Internal_FFI.unsafeReadProtoTagged("MessageEvent");
  exports["fromEvent"] = fromEvent;
  exports["data_"] = $foreign.data_;
})(PS);
(function(exports) {
  "use strict";

  exports.create = function (url) {
    return function (protocols) {
      return function () {
        return new WebSocket(url, protocols);
      };
    };
  };

  exports.url = function (ws) {
    return function () {
      return ws.url;
    };
  };

  exports.setBinaryTypeImpl = function (ws) {
    return function (bt) {
      return function () {
        ws.binaryType = bt;
      };
    };
  };
})(PS["Web.Socket.WebSocket"] = PS["Web.Socket.WebSocket"] || {});
(function($PS) {
  // Generated by purs version 0.13.2
  "use strict";
  $PS["Web.Socket.WebSocket"] = $PS["Web.Socket.WebSocket"] || {};
  var exports = $PS["Web.Socket.WebSocket"];
  var $foreign = $PS["Web.Socket.WebSocket"];
  var Unsafe_Coerce = $PS["Unsafe.Coerce"];
  var Web_Socket_BinaryType = $PS["Web.Socket.BinaryType"];
  var toEventTarget = Unsafe_Coerce.unsafeCoerce;
  var setBinaryType = function (ws) {
      var $12 = $foreign.setBinaryTypeImpl(ws);
      return function ($13) {
          return $12(Web_Socket_BinaryType.printBinaryType($13));
      };
  };
  exports["toEventTarget"] = toEventTarget;
  exports["setBinaryType"] = setBinaryType;
  exports["create"] = $foreign.create;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.2
  "use strict";
  $PS["WsOps"] = $PS["WsOps"] || {};
  var exports = $PS["WsOps"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_Except = $PS["Control.Monad.Except"];
  var Data_Bifunctor = $PS["Data.Bifunctor"];
  var Data_Either = $PS["Data.Either"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_List = $PS["Data.List"];
  var Data_List_NonEmpty = $PS["Data.List.NonEmpty"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Foreign = $PS["Foreign"];
  var Ops_ArrayBuffer = $PS["Ops.ArrayBuffer"];
  var Web_Event_EventTarget = $PS["Web.Event.EventTarget"];
  var Web_Socket_BinaryType = $PS["Web.Socket.BinaryType"];
  var Web_Socket_Event_EventTypes = $PS["Web.Socket.Event.EventTypes"];
  var Web_Socket_Event_MessageEvent = $PS["Web.Socket.Event.MessageEvent"];
  var Web_Socket_WebSocket = $PS["Web.Socket.WebSocket"];
  var onMsg = function (ws) {
      return function (success) {
          return function (failure) {
              var messageEvent = (function () {
                  var $6 = Data_Maybe.maybe(Data_Either.Left.create(Data_List.singleton("Can't get event")))(Data_Either.Right.create);
                  return function ($7) {
                      return $6(Web_Socket_Event_MessageEvent.fromEvent($7));
                  };
              })();
              var bytes = (function () {
                  var $8 = Data_Bifunctor.lmap(Data_Either.bifunctorEither)((function () {
                      var $11 = Data_Functor.map(Data_List_Types.functorList)(Foreign.renderForeignError);
                      return function ($12) {
                          return $11(Data_List_NonEmpty.toList($12));
                      };
                  })());
                  var $9 = Foreign.unsafeReadTagged("ArrayBuffer");
                  return function ($10) {
                      return $8(Control_Monad_Except.runExcept($9(Web_Socket_Event_MessageEvent.data_($10))));
                  };
              })();
              var readEvent = function (e) {
                  return Control_Bind.bind(Data_Either.bindEither)(messageEvent(e))(bytes);
              };
              var target = Web_Socket_WebSocket.toEventTarget(ws);
              return function __do() {
                  var v = Web_Event_EventTarget.eventListener(function (x) {
                      return Data_Either.either(failure)(function ($13) {
                          return success(Ops_ArrayBuffer.uint8Array($13));
                      })(readEvent(x));
                  })();
                  return Web_Event_EventTarget.addEventListener(Web_Socket_Event_EventTypes.onMessage)(v)(false)(target)();
              };
          };
      };
  };
  var create = function (url) {
      return function __do() {
          var v = Web_Socket_WebSocket.create(url)([  ])();
          Web_Socket_WebSocket.setBinaryType(v)(Web_Socket_BinaryType["ArrayBuffer"].value)();
          return v;
      };
  };
  exports["create"] = create;
  exports["onMsg"] = onMsg;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.2
  "use strict";
  $PS["Main"] = $PS["Main"] || {};
  var exports = $PS["Main"];
  var Api = $PS["Api"];
  var Control_Alt = $PS["Control.Alt"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Data_Array = $PS["Data.Array"];
  var Data_Either = $PS["Data.Either"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Map_Internal = $PS["Data.Map.Internal"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Show = $PS["Data.Show"];
  var Data_String_Common = $PS["Data.String.Common"];
  var Data_Traversable = $PS["Data.Traversable"];
  var Data_Unit = $PS["Data.Unit"];
  var DomOps = $PS["DomOps"];
  var Effect = $PS["Effect"];
  var Effect_Console = $PS["Effect.Console"];
  var Errors_1 = $PS["Errors"];
  var FormatOps = $PS["FormatOps"];
  var Global = $PS["Global"];
  var Node = $PS["Node"];
  var Nodes_1 = $PS["Nodes"];
  var React = $PS["React"];
  var React_DOM = $PS["React.DOM"];
  var React_DOM_Props = $PS["React.DOM.Props"];
  var ReactDOM = $PS["ReactDOM"];
  var WsOps = $PS["WsOps"];                
  var Nodes = (function () {
      function Nodes() {

      };
      Nodes.value = new Nodes();
      return Nodes;
  })();
  var Errors = (function () {
      function Errors() {

      };
      Errors.value = new Errors();
      return Errors;
  })();
  var showMenu = new Data_Show.Show(function (v) {
      if (v instanceof Nodes) {
          return "Nodes";
      };
      if (v instanceof Errors) {
          return "Errors";
      };
      throw new Error("Failed pattern match at Main (line 51, column 1 - line 53, column 25): " + [ v.constructor.name ]);
  });
  var eqMenu = new Data_Eq.Eq(function (x) {
      return function (y) {
          if (x instanceof Nodes && y instanceof Nodes) {
              return true;
          };
          if (x instanceof Errors && y instanceof Errors) {
              return true;
          };
          return false;
      };
  });
  var reactClass = (function () {
      var render = function ($$this) {
          var toggleTopMenu = React.modifyState($$this)(function (s) {
              return {
                  menu: s.menu,
                  nodes: s.nodes,
                  node: s.node,
                  errors: s.errors,
                  ws: s.ws,
                  leftMenu: s.leftMenu,
                  notifications: s.notifications,
                  topMenu: !s.topMenu
              };
          });
          var toggleNotifications = React.modifyState($$this)(function (s) {
              return {
                  menu: s.menu,
                  nodes: s.nodes,
                  node: s.node,
                  errors: s.errors,
                  ws: s.ws,
                  leftMenu: s.leftMenu,
                  notifications: !s.notifications,
                  topMenu: s.topMenu
              };
          });
          var toggleLeftMenu = React.modifyState($$this)(function (s) {
              return {
                  menu: s.menu,
                  nodes: s.nodes,
                  node: s.node,
                  errors: s.errors,
                  ws: s.ws,
                  leftMenu: !s.leftMenu,
                  notifications: s.notifications,
                  topMenu: s.topMenu
              };
          });
          var menuIcon = function (v) {
              if (v instanceof Nodes) {
                  return "icon-app";
              };
              if (v instanceof Errors) {
                  return "icon-alert-circle-exc";
              };
              throw new Error("Failed pattern match at Main (line 158, column 7 - line 158, column 33): " + [ v.constructor.name ]);
          };
          var menuContent = function (v) {
              if (v.menu instanceof Nodes && v.node instanceof Data_Maybe.Just) {
                  var dummy = React.component(React.reactComponentSpec()())("Dummy")(function (v1) {
                      return Control_Applicative.pure(Effect.applicativeEffect)({
                          render: Control_Applicative.pure(Effect.applicativeEffect)(React_DOM["span'"]([  ]))
                      });
                  });
                  var v1 = Data_Map_Internal.lookup(Data_Ord.ordString)(v.node.value0)(v.nodes);
                  if (v1 instanceof Data_Maybe.Just) {
                      return Control_Applicative.pure(Effect.applicativeEffect)(React.createLeafElement(React.reactPropFields()())(Node.reactClass)(v1.value0));
                  };
                  if (v1 instanceof Data_Maybe.Nothing) {
                      return Data_Functor.map(Effect.functorEffect)(function (v2) {
                          return React.createLeafElement(React.reactPropFields()())(dummy)({});
                      })(Effect_Console.error("bad node"));
                  };
                  throw new Error("Failed pattern match at Main (line 164, column 9 - line 166, column 79): " + [ v1.constructor.name ]);
              };
              if (v.menu instanceof Nodes) {
                  return Control_Applicative.pure(Effect.applicativeEffect)(React.createLeafElement(React.reactPropFields()())(Nodes_1.reactClass)({
                      nodes: Data_Array.fromFoldable(Data_Map_Internal.foldableMap)(v.nodes),
                      openNode: function (addr) {
                          return React.modifyState($$this)(function (v1) {
                              return {
                                  menu: v1.menu,
                                  nodes: v1.nodes,
                                  node: new Data_Maybe.Just(addr),
                                  errors: v1.errors,
                                  ws: v1.ws,
                                  leftMenu: v1.leftMenu,
                                  notifications: v1.notifications,
                                  topMenu: v1.topMenu
                              };
                          });
                      }
                  }));
              };
              if (v.menu instanceof Errors) {
                  return Control_Applicative.pure(Effect.applicativeEffect)(React.createLeafElement(React.reactPropFields()())(Errors_1.reactClass)({
                      errors: v.errors,
                      showAddr: true
                  }));
              };
              throw new Error("Failed pattern match at Main (line 162, column 7 - line 162, column 50): " + [ v.constructor.name ]);
          };
          var $$goto = function (v) {
              if (v instanceof Nodes) {
                  return React.modifyState($$this)(function (v1) {
                      return {
                          menu: Nodes.value,
                          nodes: v1.nodes,
                          node: Data_Maybe.Nothing.value,
                          errors: v1.errors,
                          ws: v1.ws,
                          leftMenu: v1.leftMenu,
                          notifications: v1.notifications,
                          topMenu: v1.topMenu
                      };
                  });
              };
              if (v instanceof Errors) {
                  return React.modifyState($$this)(function (v1) {
                      return {
                          menu: Errors.value,
                          nodes: v1.nodes,
                          node: v1.node,
                          errors: v1.errors,
                          ws: v1.ws,
                          leftMenu: v1.leftMenu,
                          notifications: v1.notifications,
                          topMenu: v1.topMenu
                      };
                  });
              };
              throw new Error("Failed pattern match at Main (line 175, column 7 - line 175, column 34): " + [ v.constructor.name ]);
          };
          return function __do() {
              var v = React.getState($$this)();
              var v1 = React.getProps($$this)();
              var v2 = menuContent(v)();
              return React_DOM.div([ DomOps.cn("wrapper" + (function () {
                  if (v.leftMenu) {
                      return " nav-open";
                  };
                  return "";
              })()) ])([ React_DOM.div([ DomOps.cn("sidebar") ])([ React_DOM.div([ DomOps.cn("sidebar-wrapper") ])([ React_DOM.ul([ DomOps.cn("nav") ])(Data_Functor.map(Data_Functor.functorArray)(function (x) {
                  return React_DOM.li((function () {
                      var $93 = Data_Eq.eq(eqMenu)(x)(v.menu);
                      if ($93) {
                          return [ DomOps.cn("active") ];
                      };
                      return [  ];
                  })())([ React_DOM.a([ React_DOM_Props.href("#"), React_DOM_Props.onClick(function (v3) {
                      return $$goto(x);
                  }) ])([ React_DOM.i([ DomOps.cn("tim-icons " + menuIcon(x)) ])([  ]), React_DOM["p'"]([ React_DOM.text(Data_Show.show(showMenu)(x)) ]) ]) ]);
              })(v1.menu)) ]) ]), React_DOM.div([ DomOps.cn("main-panel") ])([ React_DOM.nav([ DomOps.cn("navbar navbar-expand-lg navbar-absolute" + (function () {
                  if (v.topMenu) {
                      return " bg-white";
                  };
                  return " navbar-transparent";
              })()) ])([ React_DOM.div([ DomOps.cn("container-fluid") ])([ React_DOM.div([ DomOps.cn("navbar-wrapper") ])([ React_DOM.div([ DomOps.cn("navbar-toggle d-inline" + (function () {
                  if (v.leftMenu) {
                      return " toggled";
                  };
                  return "";
              })()) ])([ React_DOM.button([ DomOps.cn("navbar-toggler"), React_DOM_Props.onClick(function (v3) {
                  return toggleLeftMenu;
              }) ])([ React_DOM.span([ DomOps.cn("navbar-toggler-bar bar1") ])([  ]), React_DOM.span([ DomOps.cn("navbar-toggler-bar bar2") ])([  ]), React_DOM.span([ DomOps.cn("navbar-toggler-bar bar3") ])([  ]) ]) ]), React_DOM.a([ React_DOM_Props.href("#"), DomOps.cn("navbar-brand") ])([ React_DOM.text("Monitor") ]) ]), React_DOM.button([ DomOps.cn("navbar-toggler"), React_DOM_Props.onClick(function (v3) {
                  return toggleTopMenu;
              }) ])([ React_DOM.span([ DomOps.cn("navbar-toggler-bar navbar-kebab") ])([  ]), React_DOM.span([ DomOps.cn("navbar-toggler-bar navbar-kebab") ])([  ]), React_DOM.span([ DomOps.cn("navbar-toggler-bar navbar-kebab") ])([  ]) ]), React_DOM.div([ DomOps.cn("collapse navbar-collapse" + (function () {
                  if (v.topMenu) {
                      return " show";
                  };
                  return "";
              })()) ])([ React_DOM.ul([ DomOps.cn("navbar-nav ml-auto") ])([ React_DOM.li([ DomOps.cn("dropdown nav-item" + (function () {
                  if (v.notifications) {
                      return " show";
                  };
                  return "";
              })()) ])([ React_DOM.a([ React_DOM_Props.href("#"), DomOps.cn("dropdown-toggle nav-link"), React_DOM_Props.onClick(function (v3) {
                  return toggleNotifications;
              }) ])([ React_DOM.div([ DomOps.cn("notification d-none") ])([  ]), React_DOM.i([ DomOps.cn("tim-icons icon-sound-wave") ])([  ]), React_DOM.p([ DomOps.cn("d-lg-none") ])([ React_DOM.text("Notifications") ]) ]), React_DOM.ul([ DomOps.cn("dropdown-menu dropdown-menu-right dropdown-navbar" + (function () {
                  if (v.notifications) {
                      return " show";
                  };
                  return "";
              })()) ])([ React_DOM.li([ DomOps.cn("nav-link") ])([ React_DOM.a([ React_DOM_Props.href("#"), DomOps.cn("nav-item dropdown-item") ])([ React_DOM.text("No notifications") ]) ]) ]) ]), React_DOM.li([ DomOps.cn("separator d-lg-none") ])([  ]) ]) ]) ]) ]), React_DOM.div([ DomOps.cn("content") ])([ v2 ]), React_DOM.div([ DomOps.cn("footer") ])([ React_DOM.div([ DomOps.cn("container-fluid") ])([ React_DOM.ul([ DomOps.cn("nav") ])([ React_DOM.li([ DomOps.cn("nav-item") ])([ React_DOM.a([ React_DOM_Props.href("http://ua--doc.ee..corp/health.html"), DomOps.cn("nav-link") ])([ React_DOM.text("Documentation") ]) ]) ]), React_DOM.div([ DomOps.cn("copyright") ])([ React_DOM.text("\xa9 "), React_DOM.a([ React_DOM_Props.href("https://demos.creative-tim.com/black-dashboard/examples/dashboard.html"), React_DOM_Props.target("_blank") ])([ React_DOM.text("CT") ]) ]) ]) ]) ]) ]);
          };
      };
      var onMsg = function ($$this) {
          return function (bytes) {
              var updateWith = function (a) {
                  var time$prime = Global.readInt(10)(a.time);
                  return function __do() {
                      var v = FormatOps.dateTime(time$prime)();
                      var uptime = Control_Bind.bind(Data_Maybe.bindMaybe)(a.metrics)(function (v1) {
                          return v1.uptime;
                      });
                      var version = Control_Bind.bind(Data_Maybe.bindMaybe)(a.metrics)(function (v1) {
                          return v1.version;
                      });
                      var cpu_mem = Control_Bind.bind(Data_Maybe.bindMaybe)(a.metrics)(function (v1) {
                          return v1.cpu_mem;
                      });
                      var cpu = Control_Bind.bind(Data_Maybe.bindMaybe)(cpu_mem)(Data_Array.head);
                      var cpuPoints = Data_Maybe.fromMaybe([  ])(Data_Functor.map(Data_Maybe.functorMaybe)(function (b) {
                          return [ {
                              t: time$prime,
                              y: Global.readInt(10)(b)
                          } ];
                      })(cpu));
                      var cpuHourPoint = Data_Functor.map(Data_Maybe.functorMaybe)(function (b) {
                          return {
                              t: time$prime,
                              y: Global.readInt(10)(b)
                          };
                      })(Control_Bind.bind(Data_Maybe.bindMaybe)(a.metrics)(function (v1) {
                          return v1.cpu_hour;
                      }));
                      var kvsSizeYearPoint = Data_Functor.map(Data_Maybe.functorMaybe)(function (b) {
                          return {
                              t: time$prime,
                              y: Global.readInt(10)(b)
                          };
                      })(Control_Bind.bind(Data_Maybe.bindMaybe)(a.metrics)(function (v1) {
                          return v1.kvsSize_year;
                      }));
                      var v1 = (function () {
                          if (cpu_mem instanceof Data_Maybe.Just && cpu_mem.value0.length === 3) {
                              var free = Global.readInt(10)(cpu_mem["value0"][1]);
                              var total = Global.readInt(10)(cpu_mem["value0"][2]);
                              var used = total - free;
                              return new Data_Maybe.Just({
                                  used: used,
                                  free: free,
                                  total: total
                              });
                          };
                          if (cpu_mem instanceof Data_Maybe.Just) {
                              return Data_Functor.map(Effect.functorEffect)(function (v1) {
                                  return Data_Maybe.Nothing.value;
                              })(Effect_Console.error("bad format=" + Data_Show.show(Data_Show.showArray(Data_Show.showString))(cpu_mem.value0)))();
                          };
                          if (cpu_mem instanceof Data_Maybe.Nothing) {
                              return Data_Maybe.Nothing.value;
                          };
                          throw new Error("Failed pattern match at Main (line 269, column 16 - line 276, column 34): " + [ cpu_mem.constructor.name ]);
                      })();
                      var memUsed = Data_Functor.map(Data_Maybe.functorMaybe)(function (v2) {
                          return v2.used;
                      })(v1);
                      var memFree = Data_Functor.map(Data_Maybe.functorMaybe)(function (v2) {
                          return v2.free;
                      })(v1);
                      var memTotal = Data_Functor.map(Data_Maybe.functorMaybe)(function (v2) {
                          return v2.total;
                      })(v1);
                      var memPoints = Data_Maybe.fromMaybe([  ])(Data_Functor.map(Data_Maybe.functorMaybe)(function (b) {
                          return [ {
                              t: time$prime,
                              y: b.used / 1000.0
                          } ];
                      })(v1));
                      var v2 = (function () {
                          var v2 = Control_Bind.bind(Data_Maybe.bindMaybe)(a.metrics)(function (v3) {
                              return v3.fs;
                          });
                          if (v2 instanceof Data_Maybe.Just && v2.value0.length === 2) {
                              var usable = Global.readInt(10)(v2["value0"][0]);
                              var total = Global.readInt(10)(v2["value0"][1]);
                              var used = total - usable;
                              return new Data_Maybe.Just({
                                  used: used,
                                  usable: usable,
                                  total: total
                              });
                          };
                          if (v2 instanceof Data_Maybe.Just) {
                              return Data_Functor.map(Effect.functorEffect)(function (v3) {
                                  return Data_Maybe.Nothing.value;
                              })(Effect_Console.error("bad format=" + Data_Show.show(Data_Show.showArray(Data_Show.showString))(v2.value0)))();
                          };
                          if (v2 instanceof Data_Maybe.Nothing) {
                              return Data_Maybe.Nothing.value;
                          };
                          throw new Error("Failed pattern match at Main (line 282, column 15 - line 289, column 34): " + [ v2.constructor.name ]);
                      })();
                      var v3 = (function () {
                          var v3 = Control_Bind.bind(Data_Maybe.bindMaybe)(a.metrics)(function (v4) {
                              return v4.fd;
                          });
                          if (v3 instanceof Data_Maybe.Just && v3.value0.length === 2) {
                              var open = Global.readInt(10)(v3["value0"][0]);
                              var max = Global.readInt(10)(v3["value0"][1]);
                              return new Data_Maybe.Just({
                                  open: open,
                                  max: max
                              });
                          };
                          if (v3 instanceof Data_Maybe.Just) {
                              return Data_Functor.map(Effect.functorEffect)(function (v4) {
                                  return Data_Maybe.Nothing.value;
                              })(Effect_Console.error("bad format=" + Data_Show.show(Data_Show.showArray(Data_Show.showString))(v3.value0)))();
                          };
                          if (v3 instanceof Data_Maybe.Nothing) {
                              return Data_Maybe.Nothing.value;
                          };
                          throw new Error("Failed pattern match at Main (line 291, column 15 - line 297, column 34): " + [ v3.constructor.name ]);
                      })();
                      var v4 = (function () {
                          var v4 = Control_Bind.bind(Data_Maybe.bindMaybe)(a.metrics)(function (v5) {
                              return v5.thr;
                          });
                          if (v4 instanceof Data_Maybe.Just && v4.value0.length === 4) {
                              var all = Global.readInt(10)(v4["value0"][0]);
                              var daemon = Global.readInt(10)(v4["value0"][1]);
                              var nondaemon = all - daemon;
                              var peak = Global.readInt(10)(v4["value0"][2]);
                              var total = Global.readInt(10)(v4["value0"][3]);
                              return new Data_Maybe.Just({
                                  all: all,
                                  daemon: daemon,
                                  nondaemon: nondaemon,
                                  peak: peak,
                                  total: total
                              });
                          };
                          if (v4 instanceof Data_Maybe.Just) {
                              return Data_Functor.map(Effect.functorEffect)(function (v5) {
                                  return Data_Maybe.Nothing.value;
                              })(Effect_Console.error("bad format=" + Data_Show.show(Data_Show.showArray(Data_Show.showString))(v4.value0)))();
                          };
                          if (v4 instanceof Data_Maybe.Nothing) {
                              return Data_Maybe.Nothing.value;
                          };
                          throw new Error("Failed pattern match at Main (line 299, column 16 - line 308, column 34): " + [ v4.constructor.name ]);
                      })();
                      var action = Data_Maybe.fromMaybe([  ])(Data_Functor.map(Data_Maybe.functorMaybe)(function (b) {
                          return [ {
                              t: time$prime,
                              label: b
                          } ];
                      })(a.action));
                      var searchTs_points = Data_Maybe.fromMaybe([  ])(Data_Functor.map(Data_Maybe.functorMaybe)(function (y) {
                          return [ {
                              t: v,
                              y: Global.readInt(10)(y)
                          } ];
                      })(Control_Bind.bind(Data_Maybe.bindMaybe)(a.measure)(function (v5) {
                          return v5.searchTs;
                      })));
                      var searchTs_thirdQ = Control_Bind.bind(Data_Maybe.bindMaybe)(a.measure)(function (v5) {
                          return v5.searchTs_thirdQ;
                      });
                      var searchWc_points = Data_Maybe.fromMaybe([  ])(Data_Functor.map(Data_Maybe.functorMaybe)(function (y) {
                          return [ {
                              t: v,
                              y: Global.readInt(10)(y)
                          } ];
                      })(Control_Bind.bind(Data_Maybe.bindMaybe)(a.measure)(function (v5) {
                          return v5.searchWc;
                      })));
                      var searchWc_thirdQ = Control_Bind.bind(Data_Maybe.bindMaybe)(a.measure)(function (v5) {
                          return v5.searchWc_thirdQ;
                      });
                      var staticCreate_points = Data_Maybe.fromMaybe([  ])(Data_Functor.map(Data_Maybe.functorMaybe)(function (y) {
                          return [ {
                              t: v,
                              y: Global.readInt(10)(y)
                          } ];
                      })(Control_Bind.bind(Data_Maybe.bindMaybe)(a.measure)(function (v5) {
                          return v5.staticCreate;
                      })));
                      var staticCreate_thirdQ = Control_Bind.bind(Data_Maybe.bindMaybe)(a.measure)(function (v5) {
                          return v5.staticCreate_thirdQ;
                      });
                      var staticGen_points = Data_Maybe.fromMaybe([  ])(Data_Functor.map(Data_Maybe.functorMaybe)(function (y) {
                          return [ {
                              t: v,
                              y: Global.readInt(10)(y)
                          } ];
                      })(Control_Bind.bind(Data_Maybe.bindMaybe)(a.measure)(function (v5) {
                          return v5.staticGen;
                      })));
                      var staticGen_thirdQ = Control_Bind.bind(Data_Maybe.bindMaybe)(a.measure)(function (v5) {
                          return v5.staticGen_thirdQ;
                      });
                      var staticCreateYearPoint = Data_Functor.map(Data_Maybe.functorMaybe)(function (b) {
                          return {
                              t: time$prime,
                              y: Global.readInt(10)(b)
                          };
                      })(Control_Bind.bind(Data_Maybe.bindMaybe)(a.measure)(function (v5) {
                          return v5.staticCreate_year;
                      }));
                      var staticGenYearPoint = Data_Functor.map(Data_Maybe.functorMaybe)(function (b) {
                          return {
                              t: time$prime,
                              y: Global.readInt(10)(b)
                          };
                      })(Control_Bind.bind(Data_Maybe.bindMaybe)(a.measure)(function (v5) {
                          return v5.staticGen_year;
                      }));
                      var reindexTs_points = Data_Maybe.fromMaybe([  ])(Data_Functor.map(Data_Maybe.functorMaybe)(function (y) {
                          return [ {
                              t: v,
                              y: Global.readInt(10)(y)
                          } ];
                      })(Control_Bind.bind(Data_Maybe.bindMaybe)(a.measure)(function (v5) {
                          return v5.reindexTs;
                      })));
                      var reindexTs_thirdQ = Control_Bind.bind(Data_Maybe.bindMaybe)(a.measure)(function (v5) {
                          return v5.reindexTs_thirdQ;
                      });
                      var reindexWc_points = Data_Maybe.fromMaybe([  ])(Data_Functor.map(Data_Maybe.functorMaybe)(function (y) {
                          return [ {
                              t: v,
                              y: Global.readInt(10)(y)
                          } ];
                      })(Control_Bind.bind(Data_Maybe.bindMaybe)(a.measure)(function (v5) {
                          return v5.reindexWc;
                      })));
                      var reindexWc_thirdQ = Control_Bind.bind(Data_Maybe.bindMaybe)(a.measure)(function (v5) {
                          return v5.reindexWc_thirdQ;
                      });
                      var reindexFiles_points = Data_Maybe.fromMaybe([  ])(Data_Functor.map(Data_Maybe.functorMaybe)(function (y) {
                          return [ {
                              t: v,
                              y: Global.readInt(10)(y)
                          } ];
                      })(Control_Bind.bind(Data_Maybe.bindMaybe)(a.measure)(function (v5) {
                          return v5.reindexFiles;
                      })));
                      var reindexFiles_thirdQ = Control_Bind.bind(Data_Maybe.bindMaybe)(a.measure)(function (v5) {
                          return v5.reindexFiles_thirdQ;
                      });
                      var errs = Data_Maybe.maybe([  ])(Data_Array.singleton)(a.err);
                      var v5 = React.getState($$this)();
                      var node$prime = (function () {
                          var v6 = Data_Map_Internal.lookup(Data_Ord.ordString)(a.addr)(v5.nodes);
                          if (v6 instanceof Data_Maybe.Just) {
                              var cpuPoints$prime = Data_Semigroup.append(Data_Semigroup.semigroupArray)(v6.value0.cpuPoints)(cpuPoints);
                              var memPoints$prime = Data_Semigroup.append(Data_Semigroup.semigroupArray)(v6.value0.memPoints)(memPoints);
                              var actPoints$prime = Data_Semigroup.append(Data_Semigroup.semigroupArray)(v6.value0.actPoints)(action);
                              var minTime = Data_Ord.max(Data_Ord.ordNumber)(Data_Maybe.fromMaybe(0.0)(Data_Functor.map(Data_Maybe.functorMaybe)(function (v7) {
                                  return v7.t;
                              })(Data_Array.last(Data_Array.dropEnd(20)(cpuPoints$prime)))))(Data_Ord.max(Data_Ord.ordNumber)(Data_Maybe.fromMaybe(0.0)(Data_Functor.map(Data_Maybe.functorMaybe)(function (v7) {
                                  return v7.t;
                              })(Data_Array.last(Data_Array.dropEnd(20)(memPoints$prime)))))(Data_Maybe.fromMaybe(0.0)(Data_Functor.map(Data_Maybe.functorMaybe)(function (v7) {
                                  return v7.t;
                              })(Data_Array.last(Data_Array.dropEnd(20)(actPoints$prime))))));
                              var cpuPoints$prime$prime = Data_Array.filter(function (x) {
                                  return x.t > minTime;
                              })(cpuPoints$prime);
                              var memPoints$prime$prime = Data_Array.filter(function (x) {
                                  return x.t > minTime;
                              })(memPoints$prime);
                              var actPoints$prime$prime = Data_Array.filter(function (x) {
                                  return x.t > minTime;
                              })(actPoints$prime);
                              var cpuHourPoints$prime = Data_Maybe.maybe(v6.value0.cpuHourPoints)(function (x) {
                                  return Data_Array.snoc(Data_Array.filter(function (y) {
                                      return y.t !== x.t && y.t >= x.t - 60.0 * 60.0 * 1000.0;
                                  })(v6.value0.cpuHourPoints))(x);
                              })(cpuHourPoint);
                              var kvsSizeYearPoints$prime = Data_Maybe.maybe(v6.value0.kvsSizeYearPoints)(function (x) {
                                  return Data_Array.snoc(Data_Array.filter(function (y) {
                                      return y.t !== x.t && y.t >= x.t - 365.0 * 24.0 * 3600.0 * 1000.0;
                                  })(v6.value0.kvsSizeYearPoints))(x);
                              })(kvsSizeYearPoint);
                              var searchTs_points$prime = Data_Array.takeEnd(5)(Data_Semigroup.append(Data_Semigroup.semigroupArray)(v6.value0.searchTs_points)(searchTs_points));
                              var searchWc_points$prime = Data_Array.takeEnd(5)(Data_Semigroup.append(Data_Semigroup.semigroupArray)(v6.value0.searchWc_points)(searchWc_points));
                              var staticCreate_points$prime = Data_Array.takeEnd(5)(Data_Semigroup.append(Data_Semigroup.semigroupArray)(v6.value0.staticCreate_points)(staticCreate_points));
                              var staticGen_points$prime = Data_Array.takeEnd(5)(Data_Semigroup.append(Data_Semigroup.semigroupArray)(v6.value0.staticGen_points)(staticGen_points));
                              var staticCreateYear_points$prime = Data_Maybe.maybe(v6.value0.staticCreateYear_points)(function (x) {
                                  return Data_Array.snoc(Data_Array.filter(function (y) {
                                      return y.t !== x.t && y.t >= x.t - 365.0 * 24.0 * 3600.0 * 1000.0;
                                  })(v6.value0.staticCreateYear_points))(x);
                              })(staticCreateYearPoint);
                              var staticGenYear_points$prime = Data_Maybe.maybe(v6.value0.staticGenYear_points)(function (x) {
                                  return Data_Array.snoc(Data_Array.filter(function (y) {
                                      return y.t !== x.t && y.t >= x.t - 365.0 * 24.0 * 3600.0 * 1000.0;
                                  })(v6.value0.staticGenYear_points))(x);
                              })(staticGenYearPoint);
                              var reindexTs_points$prime = Data_Array.takeEnd(100)(Data_Semigroup.append(Data_Semigroup.semigroupArray)(v6.value0.reindexTs_points)(reindexTs_points));
                              var reindexWc_points$prime = Data_Array.takeEnd(100)(Data_Semigroup.append(Data_Semigroup.semigroupArray)(v6.value0.reindexWc_points)(reindexWc_points));
                              var reindexFiles_points$prime = Data_Array.takeEnd(100)(Data_Semigroup.append(Data_Semigroup.semigroupArray)(v6.value0.reindexFiles_points)(reindexFiles_points));
                              var errs$prime = Data_Array.take(100)(Data_Semigroup.append(Data_Semigroup.semigroupArray)(errs)(v6.value0.errs));
                              return {
                                  lastUpdate: v,
                                  version: Control_Alt.alt(Data_Maybe.altMaybe)(version)(v6.value0.version),
                                  cpuPoints: cpuPoints$prime$prime,
                                  cpuHourPoints: cpuHourPoints$prime,
                                  memPoints: memPoints$prime$prime,
                                  actPoints: actPoints$prime$prime,
                                  cpuLast: Control_Alt.alt(Data_Maybe.altMaybe)(cpu)(v6.value0.cpuLast),
                                  memLast: Control_Alt.alt(Data_Maybe.altMaybe)(memUsed)(v6.value0.memLast),
                                  uptime: Control_Alt.alt(Data_Maybe.altMaybe)(uptime)(v6.value0.uptime),
                                  memFree: Control_Alt.alt(Data_Maybe.altMaybe)(memFree)(v6.value0.memFree),
                                  memTotal: Control_Alt.alt(Data_Maybe.altMaybe)(memTotal)(v6.value0.memTotal),
                                  fs: Control_Alt.alt(Data_Maybe.altMaybe)(v2)(v6.value0.fs),
                                  fd: Control_Alt.alt(Data_Maybe.altMaybe)(v3)(v6.value0.fd),
                                  thr: Control_Alt.alt(Data_Maybe.altMaybe)(v4)(v6.value0.thr),
                                  errs: errs$prime,
                                  searchTs_points: searchTs_points$prime,
                                  searchTs_thirdQ: Control_Alt.alt(Data_Maybe.altMaybe)(searchTs_thirdQ)(v6.value0.searchTs_thirdQ),
                                  searchWc_points: searchWc_points$prime,
                                  searchWc_thirdQ: Control_Alt.alt(Data_Maybe.altMaybe)(searchWc_thirdQ)(v6.value0.searchWc_thirdQ),
                                  reindexTs_points: reindexTs_points$prime,
                                  reindexTs_thirdQ: Control_Alt.alt(Data_Maybe.altMaybe)(reindexTs_thirdQ)(v6.value0.reindexTs_thirdQ),
                                  reindexWc_points: reindexWc_points$prime,
                                  reindexWc_thirdQ: Control_Alt.alt(Data_Maybe.altMaybe)(reindexWc_thirdQ)(v6.value0.reindexWc_thirdQ),
                                  reindexFiles_points: reindexFiles_points$prime,
                                  reindexFiles_thirdQ: Control_Alt.alt(Data_Maybe.altMaybe)(reindexFiles_thirdQ)(v6.value0.reindexFiles_thirdQ),
                                  staticCreate_points: staticCreate_points$prime,
                                  staticCreateYear_points: staticCreateYear_points$prime,
                                  staticCreate_thirdQ: Control_Alt.alt(Data_Maybe.altMaybe)(staticCreate_thirdQ)(v6.value0.staticCreate_thirdQ),
                                  staticGen_points: staticGen_points$prime,
                                  staticGenYear_points: staticGenYear_points$prime,
                                  staticGen_thirdQ: Control_Alt.alt(Data_Maybe.altMaybe)(staticGen_thirdQ)(v6.value0.staticGen_thirdQ),
                                  kvsSizeYearPoints: kvsSizeYearPoints$prime,
                                  addr: v6.value0.addr
                              };
                          };
                          if (v6 instanceof Data_Maybe.Nothing) {
                              return {
                                  addr: a.addr,
                                  lastUpdate: v,
                                  version: version,
                                  cpuPoints: cpuPoints,
                                  cpuHourPoints: Data_Maybe.maybe([  ])(Data_Array.singleton)(cpuHourPoint),
                                  memPoints: memPoints,
                                  actPoints: action,
                                  cpuLast: cpu,
                                  memLast: memUsed,
                                  uptime: uptime,
                                  memFree: memFree,
                                  memTotal: memTotal,
                                  fs: Data_Maybe.Nothing.value,
                                  fd: Data_Maybe.Nothing.value,
                                  thr: Data_Maybe.Nothing.value,
                                  errs: errs,
                                  searchTs_points: searchTs_points,
                                  searchTs_thirdQ: searchTs_thirdQ,
                                  searchWc_points: searchWc_points,
                                  searchWc_thirdQ: searchWc_thirdQ,
                                  reindexTs_points: reindexTs_points,
                                  reindexTs_thirdQ: reindexTs_thirdQ,
                                  reindexWc_points: reindexWc_points,
                                  reindexWc_thirdQ: reindexWc_thirdQ,
                                  reindexFiles_points: reindexFiles_points,
                                  reindexFiles_thirdQ: reindexFiles_thirdQ,
                                  staticCreate_points: staticCreate_points,
                                  staticCreateYear_points: Data_Maybe.maybe([  ])(Data_Array.singleton)(staticCreateYearPoint),
                                  staticCreate_thirdQ: staticCreate_thirdQ,
                                  staticGen_points: staticGen_points,
                                  staticGenYear_points: Data_Maybe.maybe([  ])(Data_Array.singleton)(staticGenYearPoint),
                                  staticGen_thirdQ: staticGen_thirdQ,
                                  kvsSizeYearPoints: Data_Maybe.maybe([  ])(Data_Array.singleton)(kvsSizeYearPoint)
                              };
                          };
                          throw new Error("Failed pattern match at Main (line 332, column 21 - line 430, column 18): " + [ v6.constructor.name ]);
                      })();
                      React.modifyState($$this)(function (s$prime) {
                          return {
                              menu: s$prime.menu,
                              nodes: Data_Map_Internal.insert(Data_Ord.ordString)(node$prime.addr)(node$prime)(s$prime.nodes),
                              node: s$prime.node,
                              errors: s$prime.errors,
                              ws: s$prime.ws,
                              leftMenu: s$prime.leftMenu,
                              notifications: s$prime.notifications,
                              topMenu: s$prime.topMenu
                          };
                      })();
                      if (a.err instanceof Data_Maybe.Just) {
                          return React.modifyState($$this)(function (s$prime) {
                              return {
                                  menu: s$prime.menu,
                                  nodes: s$prime.nodes,
                                  node: s$prime.node,
                                  errors: Data_Array.cons(a.err.value0)(Data_Array.take(99)(s$prime.errors)),
                                  ws: s$prime.ws,
                                  leftMenu: s$prime.leftMenu,
                                  notifications: s$prime.notifications,
                                  topMenu: s$prime.topMenu
                              };
                          })();
                      };
                      if (a.err instanceof Data_Maybe.Nothing) {
                          return Data_Unit.unit;
                      };
                      throw new Error("Failed pattern match at Main (line 432, column 9 - line 434, column 31): " + [ a.err.constructor.name ]);
                  };
              };
              var v = Api.decodeStatMsg(bytes);
              if (v instanceof Data_Either.Right && v.value0.val instanceof Api.MetricStat) {
                  var cpu_mem = Data_Functor.map(Data_Maybe.functorMaybe)(Data_String_Common.split("~"))((function () {
                      var $133 = v.value0.val.value0.name === "cpu_mem";
                      if ($133) {
                          return new Data_Maybe.Just(v.value0.val.value0.value);
                      };
                      return Data_Maybe.Nothing.value;
                  })());
                  var cpu_hour = (function () {
                      var $134 = v.value0.val.value0.name === "cpu.hour";
                      if ($134) {
                          return new Data_Maybe.Just(v.value0.val.value0.value);
                      };
                      return Data_Maybe.Nothing.value;
                  })();
                  var uptime = (function () {
                      var $135 = v.value0.val.value0.name === "uptime";
                      if ($135) {
                          return new Data_Maybe.Just(v.value0.val.value0.value);
                      };
                      return Data_Maybe.Nothing.value;
                  })();
                  var version = (function () {
                      var $136 = v.value0.val.value0.name === "v";
                      if ($136) {
                          return new Data_Maybe.Just(v.value0.val.value0.value);
                      };
                      return Data_Maybe.Nothing.value;
                  })();
                  var fs = Data_Functor.map(Data_Maybe.functorMaybe)(Data_String_Common.split("~"))((function () {
                      var $137 = v.value0.val.value0.name === "fs./";
                      if ($137) {
                          return new Data_Maybe.Just(v.value0.val.value0.value);
                      };
                      return Data_Maybe.Nothing.value;
                  })());
                  var fd = Data_Functor.map(Data_Maybe.functorMaybe)(Data_String_Common.split("~"))((function () {
                      var $138 = v.value0.val.value0.name === "fd";
                      if ($138) {
                          return new Data_Maybe.Just(v.value0.val.value0.value);
                      };
                      return Data_Maybe.Nothing.value;
                  })());
                  var thr = Data_Functor.map(Data_Maybe.functorMaybe)(Data_String_Common.split("~"))((function () {
                      var $139 = v.value0.val.value0.name === "thr";
                      if ($139) {
                          return new Data_Maybe.Just(v.value0.val.value0.value);
                      };
                      return Data_Maybe.Nothing.value;
                  })());
                  var kvsSize_year = (function () {
                      var $140 = v.value0.val.value0.name === "kvs.size.year";
                      if ($140) {
                          return new Data_Maybe.Just(v.value0.val.value0.value);
                      };
                      return Data_Maybe.Nothing.value;
                  })();
                  return updateWith({
                      addr: v.value0.val.value0.addr,
                      time: v.value0.val.value0.time,
                      metrics: new Data_Maybe.Just({
                          cpu_mem: cpu_mem,
                          cpu_hour: cpu_hour,
                          uptime: uptime,
                          version: version,
                          fs: fs,
                          fd: fd,
                          thr: thr,
                          kvsSize_year: kvsSize_year
                      }),
                      measure: Data_Maybe.Nothing.value,
                      err: Data_Maybe.Nothing.value,
                      action: Data_Maybe.Nothing.value
                  });
              };
              if (v instanceof Data_Either.Right && v.value0.val instanceof Api.MeasureStat) {
                  var value$prime = Global.readInt(10)(v.value0.val.value0.value);
                  var searchTs = (function () {
                      var $148 = v.value0.val.value0.name === "search.ts";
                      if ($148) {
                          return new Data_Maybe.Just(v.value0.val.value0.value);
                      };
                      return Data_Maybe.Nothing.value;
                  })();
                  var searchTs_thirdQ = (function () {
                      var $149 = v.value0.val.value0.name === "search.ts.thirdQ";
                      if ($149) {
                          return new Data_Maybe.Just(v.value0.val.value0.value);
                      };
                      return Data_Maybe.Nothing.value;
                  })();
                  var searchWc = (function () {
                      var $150 = v.value0.val.value0.name === "search.wc";
                      if ($150) {
                          return new Data_Maybe.Just(v.value0.val.value0.value);
                      };
                      return Data_Maybe.Nothing.value;
                  })();
                  var searchWc_thirdQ = (function () {
                      var $151 = v.value0.val.value0.name === "search.wc.thirdQ";
                      if ($151) {
                          return new Data_Maybe.Just(v.value0.val.value0.value);
                      };
                      return Data_Maybe.Nothing.value;
                  })();
                  var staticCreate = (function () {
                      var $152 = v.value0.val.value0.name === "static.create";
                      if ($152) {
                          return new Data_Maybe.Just(v.value0.val.value0.value);
                      };
                      return Data_Maybe.Nothing.value;
                  })();
                  var staticCreate_thirdQ = (function () {
                      var $153 = v.value0.val.value0.name === "static.create.thirdQ";
                      if ($153) {
                          return new Data_Maybe.Just(v.value0.val.value0.value);
                      };
                      return Data_Maybe.Nothing.value;
                  })();
                  var staticCreate_year = (function () {
                      var $154 = v.value0.val.value0.name === "static.create.year";
                      if ($154) {
                          return new Data_Maybe.Just(v.value0.val.value0.value);
                      };
                      return Data_Maybe.Nothing.value;
                  })();
                  var staticGen = (function () {
                      var $155 = v.value0.val.value0.name === "static.gen";
                      if ($155) {
                          return new Data_Maybe.Just(v.value0.val.value0.value);
                      };
                      return Data_Maybe.Nothing.value;
                  })();
                  var staticGen_thirdQ = (function () {
                      var $156 = v.value0.val.value0.name === "static.gen.thirdQ";
                      if ($156) {
                          return new Data_Maybe.Just(v.value0.val.value0.value);
                      };
                      return Data_Maybe.Nothing.value;
                  })();
                  var staticGen_year = (function () {
                      var $157 = v.value0.val.value0.name === "static.gen.year";
                      if ($157) {
                          return new Data_Maybe.Just(v.value0.val.value0.value);
                      };
                      return Data_Maybe.Nothing.value;
                  })();
                  var reindexTs = (function () {
                      var $158 = v.value0.val.value0.name === "reindex.ts";
                      if ($158) {
                          return new Data_Maybe.Just(v.value0.val.value0.value);
                      };
                      return Data_Maybe.Nothing.value;
                  })();
                  var reindexTs_thirdQ = (function () {
                      var $159 = v.value0.val.value0.name === "reindex.ts.thirdQ";
                      if ($159) {
                          return new Data_Maybe.Just(v.value0.val.value0.value);
                      };
                      return Data_Maybe.Nothing.value;
                  })();
                  var reindexWc = (function () {
                      var $160 = v.value0.val.value0.name === "reindex.wc";
                      if ($160) {
                          return new Data_Maybe.Just(v.value0.val.value0.value);
                      };
                      return Data_Maybe.Nothing.value;
                  })();
                  var reindexWc_thirdQ = (function () {
                      var $161 = v.value0.val.value0.name === "reindex.wc.thirdQ";
                      if ($161) {
                          return new Data_Maybe.Just(v.value0.val.value0.value);
                      };
                      return Data_Maybe.Nothing.value;
                  })();
                  var reindexFiles = (function () {
                      var $162 = v.value0.val.value0.name === "reindex.files";
                      if ($162) {
                          return new Data_Maybe.Just(v.value0.val.value0.value);
                      };
                      return Data_Maybe.Nothing.value;
                  })();
                  var reindexFiles_thirdQ = (function () {
                      var $163 = v.value0.val.value0.name === "reindex.files.thirdQ";
                      if ($163) {
                          return new Data_Maybe.Just(v.value0.val.value0.value);
                      };
                      return Data_Maybe.Nothing.value;
                  })();
                  return updateWith({
                      addr: v.value0.val.value0.addr,
                      time: v.value0.val.value0.time,
                      metrics: Data_Maybe.Nothing.value,
                      measure: new Data_Maybe.Just({
                          searchTs: searchTs,
                          searchTs_thirdQ: searchTs_thirdQ,
                          searchWc: searchWc,
                          searchWc_thirdQ: searchWc_thirdQ,
                          staticCreate: staticCreate,
                          staticCreate_thirdQ: staticCreate_thirdQ,
                          staticCreate_year: staticCreate_year,
                          staticGen: staticGen,
                          staticGen_thirdQ: staticGen_thirdQ,
                          staticGen_year: staticGen_year,
                          reindexTs: reindexTs,
                          reindexTs_thirdQ: reindexTs_thirdQ,
                          reindexWc: reindexWc,
                          reindexWc_thirdQ: reindexWc_thirdQ,
                          reindexFiles: reindexFiles,
                          reindexFiles_thirdQ: reindexFiles_thirdQ
                      }),
                      err: Data_Maybe.Nothing.value,
                      action: Data_Maybe.Nothing.value
                  });
              };
              if (v instanceof Data_Either.Right && v.value0.val instanceof Api.ErrorStat) {
                  var exception = Data_String_Common.split("~")(v.value0.val.value0.exception);
                  var stacktrace = Data_String_Common.split("~")(v.value0.val.value0.stacktrace);
                  var key = v.value0.val.value0.addr + v.value0.val.value0.time;
                  var err = {
                      exception: exception,
                      stacktrace: stacktrace,
                      toptrace: v.value0.val.value0.toptrace,
                      time: v.value0.val.value0.time,
                      addr: v.value0.val.value0.addr,
                      key: key
                  };
                  return updateWith({
                      addr: v.value0.val.value0.addr,
                      time: v.value0.val.value0.time,
                      metrics: Data_Maybe.Nothing.value,
                      measure: Data_Maybe.Nothing.value,
                      err: new Data_Maybe.Just(err),
                      action: Data_Maybe.Nothing.value
                  });
              };
              if (v instanceof Data_Either.Right && v.value0.val instanceof Api.ActionStat) {
                  return updateWith({
                      addr: v.value0.val.value0.addr,
                      time: v.value0.val.value0.time,
                      metrics: Data_Maybe.Nothing.value,
                      measure: Data_Maybe.Nothing.value,
                      err: Data_Maybe.Nothing.value,
                      action: new Data_Maybe.Just(v.value0.val.value0.action)
                  });
              };
              return Effect_Console.error("unknown type");
          };
      };
      var errHandler = function (xs) {
          return Data_Functor["void"](Effect.functorEffect)(Data_Traversable.sequence(Data_List_Types.traversableList)(Effect.applicativeEffect)(Data_Functor.map(Data_List_Types.functorList)(Effect_Console.error)(xs)));
      };
      return React.component(React.reactComponentSpec()())("Main")(function ($$this) {
          return function __do() {
              var v = Data_Functor.map(Effect.functorEffect)(Data_Maybe.fromMaybe("127.0.0.1:8002"))(DomOps.host)();
              var v1 = WsOps.create("ws:/" + (v + "/stats/ws"))();
              return {
                  state: {
                      menu: Nodes.value,
                      nodes: Data_Map_Internal.empty,
                      node: Data_Maybe.Nothing.value,
                      errors: [  ],
                      ws: v1,
                      leftMenu: false,
                      notifications: false,
                      topMenu: false
                  },
                  render: render($$this),
                  componentDidMount: WsOps.onMsg(v1)(onMsg($$this))(errHandler)
              };
          };
      });
  })();
  var view = function __do() {
      var v = DomOps.byId("container")();
      var props = {
          menu: [ Nodes.value, Errors.value ]
      };
      var element = React.createLeafElement(React.reactPropFields()())(reactClass)(props);
      return Data_Functor["void"](Effect.functorEffect)(ReactDOM.render(element)(v))();
  };
  exports["view"] = view;
})(PS);